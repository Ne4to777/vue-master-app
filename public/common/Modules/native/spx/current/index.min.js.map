{"version":3,"file":"index.min.js","sources":["../../src/lib/utility.js","../../node_modules/typedarray/index.js","../../src/modules/search.js","../../src/modules/column.js","../../src/lib/cache.js","../../src/modules/folderList.js","../../src/modules/fileList.js","../../src/modules/user.js","../../src/lib/query-parser.js","../../src/modules/attachment.js","../../src/modules/item.js","../../src/modules/pager.js","../../src/modules/list.js","../../src/modules/folderWeb.js","../../src/modules/fileWeb.js","../../src/modules/recycleBin.js","../../src/modules/groupUser.js","../../src/modules/group.js","../../src/modules/keyword.js","../../src/modules/mail.js","../../src/modules/time.js","../../src/modules/web.js"],"sourcesContent":["/* eslint-disable no-mixed-operators */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-bitwise */\n/* eslint-disable func-names */\n/* eslint-disable no-restricted-syntax */\nimport axios from 'axios'\nimport { Uint8Array } from 'typedarray'\n//  ================================================================================================\n//  =======     ====    ===  =======  ==      ==        ====  ====  =======  =        ==      ======\n//  ======  ===  ==  ==  ==   ======  =  ====  ====  ======    ===   ======  ====  ====  ====  =====\n//  =====  =======  ====  =    =====  =  ====  ====  =====  ==  ==    =====  ====  ====  ====  =====\n//  =====  =======  ====  =  ==  ===  ==  =========  ====  ====  =  ==  ===  ====  =====  ==========\n//  =====  =======  ====  =  ===  ==  ====  =======  ====  ====  =  ===  ==  ====  =======  ========\n//  =====  =======  ====  =  ====  =  ======  =====  ====        =  ====  =  ====  =========  ======\n//  =====  =======  ====  =  =====    =  ====  ====  ====  ====  =  =====    ====  ====  ====  =====\n//  ======  ===  ==  ==  ==  ======   =  ====  ====  ====  ====  =  ======   ====  ====  ====  =====\n//  =======     ====    ===  =======  ==      =====  ====  ====  =  =======  ====  =====      ======\n//  ================================================================================================\n\nexport const REQUEST_TIMEOUT = 3600000\nexport const MAX_ITEMS_LIMIT = 100000\nexport const REQUEST_BUNDLE_MAX_SIZE = 252\nexport const REQUEST_LIST_FOLDER_CREATE_BUNDLE_MAX_SIZE = 126\nexport const REQUEST_LIST_FOLDER_UPDATE_BUNDLE_MAX_SIZE = 82\nexport const REQUEST_LIST_FOLDER_DELETE_BUNDLE_MAX_SIZE = 240\nexport const CACHE_RETRIES_LIMIT = 3\nexport const ACTION_TYPES = {\n\tcreate: 'created',\n\tupdate: 'updated',\n\tdelete: 'deleted',\n\trecycle: 'recycled',\n\tget: 'get',\n\tcopy: 'copied',\n\tmove: 'moved',\n\trestore: 'restored',\n\tclear: 'cleared',\n\terase: 'erased',\n\tsend: 'sent'\n}\nexport const IS_DELETE_ACTION = {\n\tdelete: true,\n\trecycle: true\n}\n\nexport const CHUNK_MAX_LENGTH = 500\nexport const TYPES = {\n\tlist: [\n\t\t{\n\t\t\tname: 'genericList',\n\t\t\tdescription: 'Custom list'\n\t\t},\n\t\t{\n\t\t\tname: 'documentLibrary',\n\t\t\tdescription: 'Document library'\n\t\t},\n\t\t{\n\t\t\tname: 'pictureLibrary',\n\t\t\tdescription: 'Picture library'\n\t\t}\n\t],\n\tcolumn: ['Text', 'Note', 'Number', 'Choice', 'DateTime', 'Lookup', 'User'],\n\tlistCodes: {\n\t\t100: 'genericList',\n\t\t101: 'documentLibrary'\n\t}\n}\n\nexport const FILE_LIST_TEMPLATES = {\n\t101: true,\n\t109: true,\n\t110: true,\n\t113: true,\n\t114: true,\n\t116: true,\n\t119: true,\n\t121: true,\n\t122: true,\n\t123: true,\n\t175: true,\n\t851: true,\n\t10102: true\n}\n\nexport const LIBRARY_STANDART_COLUMN_NAMES = {\n\tAppAuthor: true,\n\tAppEditor: true,\n\tAuthor: true,\n\tCheckedOutTitle: true,\n\tCheckedOutUserId: true,\n\tCheckoutUser: true,\n\tContentTypeId: true,\n\tCreated: true,\n\tCreated_x0020_By: true,\n\tCreated_x0020_Date: true,\n\tDocConcurrencyNumber: true,\n\tEditor: true,\n\tFSObjType: true,\n\tFileDirRef: true,\n\tFileLeafRef: true,\n\tFileRef: true,\n\tFile_x0020_Size: true,\n\tFile_x0020_Type: true,\n\tFolderChildCount: true,\n\tGUID: true,\n\tHTML_x0020_File_x0020_Type: true,\n\tID: true,\n\tInstanceID: true,\n\tIsCheckedoutToLocal: true,\n\tItemChildCount: true,\n\tLast_x0020_Modified: true,\n\tMetaInfo: true,\n\tModified: true,\n\tModified_x0020_By: true,\n\tOrder: true,\n\tParentLeafName: true,\n\tParentVersionString: true,\n\tProgId: true,\n\tScopeId: true,\n\tSortBehavior: true,\n\tSyncClientId: true,\n\tTemplateUrl: true,\n\tUniqueId: true,\n\tVirusStatus: true,\n\tWorkflowInstanceID: true,\n\tWorkflowVersion: true,\n\towshiddenversion: true,\n\txd_ProgID: true,\n\txd_Signature: true,\n\t_CheckinComment: true,\n\t_CopySource: true,\n\t_HasCopyDestinations: true,\n\t_IsCurrentVersion: true,\n\t_Level: true,\n\t_ModerationComments: true,\n\t_ModerationStatus: true,\n\t_SharedFileIndex: true,\n\t_SourceUrl: true,\n\t_UIVersion: true,\n\t_UIVersionString: true,\n\n\tImageHeight: true,\n\tImageWidth: true,\n\tPreviewExists: true,\n\tThumbnailExists: true\n}\n\nexport const ROOT_WEB_DUMMY = '@ROOT_WEB@'\n\n//  =============================================\n//  =====        =  ====  =       ==        =====\n//  ========  ====   ==   =  ====  =  ===========\n//  ========  =====  ==  ==  ====  =  ===========\n//  ========  =====  ==  ==  ====  =  ===========\n//  ========  ======    ===       ==      =======\n//  ========  =======  ====  =======  ===========\n//  ========  =======  ====  =======  ===========\n//  ========  =======  ====  =======  ===========\n//  ========  =======  ====  =======        =====\n//  =============================================\n\nexport const typeOf = (variable) => Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()\n\n//  ===================================================================================================\n//  =======     ====    ===  =====  =      ===    =  =======  ====  ====        ===    ===       ======\n//  ======  ===  ==  ==  ==   ===   =  ===  ===  ==   ======  ===    ======  =====  ==  ==  ====  =====\n//  =====  =======  ====  =  =   =  =  ====  ==  ==    =====  ==  ==  =====  ====  ====  =  ====  =====\n//  =====  =======  ====  =  == ==  =  ===  ===  ==  ==  ===  =  ====  ====  ====  ====  =  ===   =====\n//  =====  =======  ====  =  =====  =      ====  ==  ===  ==  =  ====  ====  ====  ====  =      =======\n//  =====  =======  ====  =  =====  =  ===  ===  ==  ====  =  =        ====  ====  ====  =  ====  =====\n//  =====  =======  ====  =  =====  =  ====  ==  ==  =====    =  ====  ====  ====  ====  =  ====  =====\n//  ======  ===  ==  ==  ==  =====  =  ===  ===  ==  ======   =  ====  ====  =====  ==  ==  ====  =====\n//  =======     ====    ===  =====  =      ===    =  =======  =  ====  ====  ======    ===  ====  =====\n//  ===================================================================================================\n\nconst COMBINATOR = {\n\t/**\n\t * I :: a → a\n\t *\n\t * identity\n\t *\n\t * @param {*} a\n\t * @returns {*} a\n\t */\n\tI: x => x,\n\t/**\n\t * K :: a → b → a\n\t *\n\t * constant\n\t *\n\t * @param {*} a\n\t * @returns {*} a\n\t */\n\tK: x => () => x,\n\t/**\n\t* A :: (a → b) → a → b\n\t*\n\t* apply\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tA: f => x => f(x),\n\t/**\n\t* U :: (a → a) → a\n\t*\n\t* universal\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tU: f => f(f),\n\t/**\n\t* Y :: (a → a) → a\n\t*\n\t* fixed-point\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tY: f => COMBINATOR.U(g => f((x) => g(g)(x))),\n\t/**\n\t* C :: (a → b → c) → b → a → c\n\t*\n\t* flip\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tC: f => x => y => f(y)(x),\n\t/**\n\t* S :: (a → b → c) → (a → b) → a → c\n\t*\n\t* substitution\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tS: f => g => x => f(x)(g(x)),\n\t/**\n\t* SI :: (a → b) → (a → b → c) → a → c\n\t*\n\t* inverted S\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tSI: f => g => x => g(x)(f(x)),\n\t/**\n\t* SA :: (a → b) → (a → b → c) → a → c\n\t*\n\t* async S\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tSA: f => g => async x => f(x)(await g(x)),\n\t/**\n\t* SIA :: (a → b) → (a → b → c) → a → c\n\t*\n\t* async SI\n\t* @param {Function} f\n\t* @returns {Function} f\n\t*/\n\tSIA: f => g => async x => g(x)(await f(x))\n}\n\nexport const identity = COMBINATOR.I\nexport const constant = COMBINATOR.K\nexport const universal = COMBINATOR.U\nexport const fix = COMBINATOR.Y\nexport const flip = COMBINATOR.C\nexport const substitution = COMBINATOR.S\nexport const substitutionI = COMBINATOR.SI\nexport const substitutionAsync = COMBINATOR.SA\nexport const substitutionIAsync = COMBINATOR.SIA\n\nexport const overstep = f => x => {\n\tf(x)\n\treturn x\n}\nexport const functionSum = f => x => y => x + f(y)\n\n//  ======================================================\n//  =======     ==  ====  =       ==       ==  ====  =====\n//  ======  ===  =  ====  =  ====  =  ====  =   ==   =====\n//  =====  =======  ====  =  ====  =  ====  ==  ==  ======\n//  =====  =======  ====  =  ===   =  ===   ==  ==  ======\n//  =====  =======  ====  =      ===      =====    =======\n//  =====  =======  ====  =  ====  =  ====  ====  ========\n//  =====  =======  ====  =  ====  =  ====  ====  ========\n//  ======  ===  =   ==   =  ====  =  ====  ====  ========\n//  =======     ===      ==  ====  =  ====  ====  ========\n//  ======================================================\n\n/**\n * curry2 :: f → g\n *\n * 2-args currying\n *\n * @param {Function} f\n * @returns {Function}\n */\nexport const curry2 = (f) => (x, y) => f(x)(y)\n\n/**\n * partial :: f → g\n *\n * partial application\n *\n * @param {Function} f\n * @returns {Function}\n */\nexport const partial = f => fix(fR => (...xs) => f.length > xs.length ? (...ys) => fR(...xs, ...ys) : f(...xs))\n\n/**\n * partialPH :: (f, ph?) → g\n *\n * partial application with placeholder\n *\n * @param {Function} f\n * @param {String} ph\n * @returns {Function}\n */\nexport const partialPH = (f, ph = '_') => fix(fPartial => (...xs) => f.length > xs.filter(x => x !== ph).length\n\t? (...ys) => fPartial(...fix(fMerge => acc => ([x, ...xsTail]) => ([y, ...ysTail]) => x === undefined\n\t\t? Array.prototype.concat.apply(acc, y === undefined ? ysTail : [y, ...ysTail])\n\t\t: x === ph\n\t\t\t? fMerge(acc.concat(y))(xsTail)(ysTail)\n\t\t\t: fMerge(acc.concat(x))(xsTail)(y === ph ? ysTail : [y, ...ysTail]))([])(xs)(ys))\n\t: f(...xs))\n\n//  ========================================================================================\n//  =======     ====    ===  =======  =       ==    =        =    ===    ===  =======  =====\n//  ======  ===  ==  ==  ==   ======  =  ====  ==  =====  =====  ===  ==  ==   ======  =====\n//  =====  =======  ====  =    =====  =  ====  ==  =====  =====  ==  ====  =    =====  =====\n//  =====  =======  ====  =  ==  ===  =  ====  ==  =====  =====  ==  ====  =  ==  ===  =====\n//  =====  =======  ====  =  ===  ==  =  ====  ==  =====  =====  ==  ====  =  ===  ==  =====\n//  =====  =======  ====  =  ====  =  =  ====  ==  =====  =====  ==  ====  =  ====  =  =====\n//  =====  =======  ====  =  =====    =  ====  ==  =====  =====  ==  ====  =  =====    =====\n//  ======  ===  ==  ==  ==  ======   =  ====  ==  =====  =====  ===  ==  ==  ======   =====\n//  =======     ====    ===  =======  =       ==    ====  ====    ===    ===  =======  =====\n//  ========================================================================================\n\nexport const ifThen = (predicate) => ([onTrue, onFalse]) => (x) => predicate(x)\n\t? onTrue(x)\n\t: (onFalse)\n\t\t? onFalse(x)\n\t\t: x\n\nexport const switchCase = (condition) => (cases) => (x) => {\n\tconst caseF = cases[condition(x)]\n\treturn caseF ? caseF(x) : cases.default ? cases.default(x) : undefined\n}\n\nexport const switchType = switchCase(typeOf)\n\n//  ===================================================================\n//  =====  =======  =  ====  =  =====  =      ===        =       ======\n//  =====   ======  =  ====  =   ===   =  ===  ==  =======  ====  =====\n//  =====    =====  =  ====  =  =   =  =  ====  =  =======  ====  =====\n//  =====  ==  ===  =  ====  =  == ==  =  ===  ==  =======  ===   =====\n//  =====  ===  ==  =  ====  =  =====  =      ===      ===      =======\n//  =====  ====  =  =  ====  =  =====  =  ===  ==  =======  ====  =====\n//  =====  =====    =  ====  =  =====  =  ====  =  =======  ====  =====\n//  =====  ======   =   ==   =  =====  =  ===  ==  =======  ====  =====\n//  =====  =======  ==      ==  =====  =      ===        =  ====  =====\n//  ===================================================================\n\nexport const sum = (x) => (y) => x + y\nexport const gt = (x) => (y) => x < y\n\n//  ==============================================================\n//  ======      ==        =       ==    =  =======  ==      ======\n//  =====  ====  ====  ====  ====  ==  ==   ======  =   ==   =====\n//  =====  ====  ====  ====  ====  ==  ==    =====  =  ====  =====\n//  ======  =========  ====  ===   ==  ==  ==  ===  =  ===========\n//  ========  =======  ====      ====  ==  ===  ==  =  ===========\n//  ==========  =====  ====  ====  ==  ==  ====  =  =  ===   =====\n//  =====  ====  ====  ====  ====  ==  ==  =====    =  ====  =====\n//  =====  ====  ====  ====  ====  ==  ==  ======   =   ==   =====\n//  ======      =====  ====  ====  =    =  =======  ==      ======\n//  ==============================================================\n\nexport const stringTest = (re) => (str) => re.test(str)\nexport const stringReplace = (re) => (to) => (str) => str.replace(re, to)\nexport const stringMatch = (re) => (str) => str.match(re) || []\nexport const stringCut = (re) => stringReplace(re)('')\nexport const stringSplit = (re) => (str) => str.split(re)\nexport const stringTrim = (str) => str.trim()\n\n//  ======================================================\n//  ========  ====       ==       =====  ====  ====  =====\n//  =======    ===  ====  =  ====  ===    ===   ==   =====\n//  ======  ==  ==  ====  =  ====  ==  ==  ===  ==  ======\n//  =====  ====  =  ===   =  ===   =  ====  ==  ==  ======\n//  =====  ====  =      ===      ===  ====  ===    =======\n//  =====        =  ====  =  ====  =        ====  ========\n//  =====  ====  =  ====  =  ====  =  ====  ====  ========\n//  =====  ====  =  ====  =  ====  =  ====  ====  ========\n//  =====  ====  =  ====  =  ====  =  ====  ====  ========\n//  ======================================================\n\nexport const getArray = (x) => (typeOf(x) === 'array' ? x : x ? [x] : [])\nexport const getArrayLength = (xs) => xs.length\nexport const map = (f) => (xs) => xs.map(f)\nexport const filter = (f) => (xs) => xs.filter(f)\nexport const slice = (from, to) => (xs) => xs.slice(from, to)\nexport const join = (delim) => (xs) => xs.join(delim)\nexport const removeEmpties = filter((x) => !!x)\nexport const removeUndefineds = filter((x) => x !== undefined)\nexport const concat = (array) => (x) => array.concat(x)\nexport const reduce = (f) => (init) => (xs) => xs.reduce(\n\tcurry2(f),\n\tswitchType({\n\t\tobject: constant({}),\n\t\tarray: constant([]),\n\t\tdefault: identity\n\t})(init)\n)\nexport const reduceDirty = (f) => (init) => (xs) => getArray(xs).reduce(curry2(flip(f)), getArray(init))\nexport const flatten = reduce((acc) => pipe([ifThen(isArray)([flatten, identity]), concat(acc)]))([])\nexport const arrayHead = (xs) => xs[0]\nexport const arrayTail = ([, ...t]) => t\nexport const arrayLast = (xs) => xs[xs.length - 1]\nexport const arrayInit = slice(0, -1)\nexport const EMPTY_ARRAY = () => []\nexport const arrayHas = (x) => pipe([filter(isEqual(x)), isArrayFilled])\nexport const chunkArrayFrom = (start = 0) => (size) => (value) => {\n\tlet i = start\n\treturn reduce((acc) => (x) => {\n\t\tif (acc[i] === undefined) acc[i] = []\n\t\tconst chunk = acc[i]\n\t\tchunk.push(x)\n\t\tif (chunk.length === size) i += 1\n\t\treturn acc\n\t})([])(value)\n}\nexport const chunkArray = chunkArrayFrom()\n\nexport const removeEmptiesByProp = property => filter((x) => !!x[property])\nexport const removeDuplicatedProp = property => pipe([reduce((acc) => (x) => {\n\tacc[x[property]] = x\n\treturn acc\n})({}), Object.values])\n\n//  ===============================================================\n//  =======    ===      =======    =        ===     ==        =====\n//  ======  ==  ==  ===  =======  ==  ========  ===  ====  ========\n//  =====  ====  =  ====  ======  ==  =======  ==========  ========\n//  =====  ====  =  ===  =======  ==  =======  ==========  ========\n//  =====  ====  =      ========  ==      ===  ==========  ========\n//  =====  ====  =  ===  =======  ==  =======  ==========  ========\n//  =====  ====  =  ====  =  ===  ==  =======  ==========  ========\n//  ======  ==  ==  ===  ==  ===  ==  ========  ===  ====  ========\n//  =======    ===      ====     ===        ===     =====  ========\n//  ===============================================================\n\nexport const forIn = (f) => (o) => {\n\tconst props = Reflect.ownKeys(o)\n\tfor (let i = 0; i < props.length; i += 1) {\n\t\tconst prop = props[i]\n\t\tf(prop)(o[prop])\n\t}\n\treturn o\n}\nexport const methodEmpty = (m) => (o) => (o[m] ? o[m]() : o)\nexport const method = (m) => (arg) => (o) => (o[m] ? o[m](arg) : o)\nexport const methodI = (m) => (o) => (arg) => (o[m] ? o[m](arg) : o)\nexport const methodIOverstep = (m) => (arg) => (o) => {\n\tmethod(m)(arg)(o)\n\treturn o\n}\nexport const apply = (m) => (o) => (args) => o[m](...args)\nexport const prop = (name) => (o) => o[name]\nexport const keys = (o) => Object.keys(o)\nexport const getInstance = (constructor) => (...args) => new constructor(...args)\nexport const getInstanceEmpty = (constructor) => new constructor()\nexport const switchProp = (o) => (x) => {\n\tconst props = Reflect.ownKeys(o)\n\tfor (let i = 0; i < props.length; i += 1) {\n\t\tconst property = props[i]\n\t\tif (x[property]) return o[property](x)\n\t\tif (x.default) return x.default(x)\n\t}\n\treturn undefined\n}\nexport const NULL = () => null\nexport const climb = f => fix(fr => ([h, ...t]) => o => t.length ? fr(t)(f(h)(o)) : f(h)(o))\n\n//  =========================================================================\n//  =======     ====    ===  =====  =       ====    ====      ==        =====\n//  ======  ===  ==  ==  ==   ===   =  ====  ==  ==  ==  ====  =  ===========\n//  =====  =======  ====  =  =   =  =  ====  =  ====  =  ====  =  ===========\n//  =====  =======  ====  =  == ==  =  ====  =  ====  ==  ======  ===========\n//  =====  =======  ====  =  =====  =       ==  ====  ====  ====      =======\n//  =====  =======  ====  =  =====  =  =======  ====  ======  ==  ===========\n//  =====  =======  ====  =  =====  =  =======  ====  =  ====  =  ===========\n//  ======  ===  ==  ==  ==  =====  =  ========  ==  ==  ====  =  ===========\n//  =======     ====    ===  =====  =  =========    ====      ==        =====\n//  =========================================================================\n\nexport const pipe = reduce((acc) => (f) => (x) => f(acc(x)))(identity)\nexport const pipeAsync = reduce((acc) => (f) => async (x) => f(await acc(x)))(identity)\n\n//  ==================================================\n//  =====  =========    ====      ==    ===     ======\n//  =====  ========  ==  ==   ==   ==  ===  ===  =====\n//  =====  =======  ====  =  ====  ==  ==  ===========\n//  =====  =======  ====  =  ========  ==  ===========\n//  =====  =======  ====  =  ========  ==  ===========\n//  =====  =======  ====  =  ===   ==  ==  ===========\n//  =====  =======  ====  =  ====  ==  ==  ===========\n//  =====  ========  ==  ==   ==   ==  ===  ===  =====\n//  =====        ===    ====      ==    ===     ======\n//  ==================================================\n\nexport const toBoolean = (x) => !!x\nexport const not = (x) => !x\nexport const and = (x) => (y) => toBoolean(x && y)\nexport const or = (x) => (y) => toBoolean(x || y)\nexport const TRUE = () => true\nexport const FALSE = () => false\nexport const andArray = reduce(and)(true)\nexport const orArray = reduce(or)(false)\nexport const isEqual = (sample) => (x) => x === sample\nexport const isNotEqual = pipe([isEqual, not])\nexport const isNumber = (x) => typeOf(x) === 'number'\nexport const isString = (x) => typeOf(x) === 'string'\nexport const isRegExp = (x) => typeOf(x) === 'regexp'\nexport const isFunction = (x) => typeOf(x) === 'function'\nexport const isIterator = (x) => typeOf(x) === 'iterator'\nexport const isArray = (x) => typeOf(x) === 'array'\nexport const isObject = (x) => typeOf(x) === 'object'\nexport const isBlob = (x) => {\n\tconst type = typeOf(x)\n\treturn type === 'blob' || type === 'file'\n}\nexport const isGUID = stringTest(/^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$/)\n\n//  =========================================================================================\n//  =====        =   ==   =    ==      ==        ====  ====  =======  ===     ==        =====\n//  =====  ========  ==  ===  ==  ====  ====  ======    ===   ======  ==  ===  =  ===========\n//  =====  ========  ==  ===  ==  ====  ====  =====  ==  ==    =====  =  =======  ===========\n//  =====  =========    ====  ===  =========  ====  ====  =  ==  ===  =  =======  ===========\n//  =====      ======  =====  =====  =======  ====  ====  =  ===  ==  =  =======      =======\n//  =====  =========    ====  =======  =====  ====        =  ====  =  =  =======  ===========\n//  =====  ========  ==  ===  ==  ====  ====  ====  ====  =  =====    =  =======  ===========\n//  =====  ========  ==  ===  ==  ====  ====  ====  ====  =  ======   ==  ===  =  ===========\n//  =====        =  ====  =    ==      =====  ====  ====  =  =======  ===     ==        =====\n//  =========================================================================================\n\nexport const isNull = (x) => x === null\nexport const isNotNull = pipe([isNull, not])\nexport const isUndefined = (x) => x === undefined\nexport const isDefined = pipe([isUndefined, not])\nexport const isZero = (x) => x === 0\nexport const isNotZero = pipe([isZero, not])\nexport const isNaN = (x) => typeOf(x) === 'number' && x.toString() === 'NaN'\nexport const isNotNaN = pipe([isNaN, not])\nexport const isNumberFilled = (x) => isNumber(x) && isNotZero(x) && isNotNaN(x)\nexport const isStringEmpty = (x) => x === ''\nexport const isStringFilled = pipe([isStringEmpty, not])\nexport const isArrayFilled = pipe([filter(isDefined), prop('length'), toBoolean])\nexport const isArrayEmpty = pipe([isArrayFilled, not])\nexport const isObjectFilled = ifThen(isObject)([pipe([keys, isArrayFilled]), FALSE])\nexport const isObjectEmpty = pipe([keys, isArrayEmpty])\nexport const isError = x => typeOf(x) === 'error'\nexport const isNotError = x => typeOf(x) !== 'error'\nexport const isExists = (x) => isDefined(x) && isNotNull(x)\nexport const isNotExists = pipe([isExists, not])\nexport const isFilled = ifThen(isExists)([\n\tswitchType({\n\t\tnumber: isNumberFilled,\n\t\tstring: isStringFilled,\n\t\tarray: isArrayFilled,\n\t\tobject: isObjectFilled,\n\t\tnull: FALSE,\n\t\tdefault: TRUE\n\t}),\n\ttoBoolean\n])\nexport const isNotFilled = pipe([isFilled, not])\n\nexport const hasOwnProp = method('hasOwnProperty')\nexport const hasProp = (name) => (o) => o[name]\nexport const isPropExists = (name) => pipe([prop(name), isExists])\nexport const isPropFilled = (name) => pipe([prop(name), isFilled])\n\n//  ====================================\n//  =====        =       ==  ====  =====\n//  ========  ====  ====  =   ==   =====\n//  ========  ====  ====  ==  ==  ======\n//  ========  ====  ===   ==  ==  ======\n//  ========  ====      =====    =======\n//  ========  ====  ====  ====  ========\n//  ========  ====  ====  ====  ========\n//  ========  ====  ====  ====  ========\n//  ========  ====  ====  ====  ========\n//  ====================================\n\nexport const tryCatch = (tryer) => (catcher) => (data) => {\n\ttry {\n\t\treturn tryer(data)\n\t} catch (err) {\n\t\treturn catcher(err)(data)\n\t}\n}\n\nexport const throwError = (msg) => {\n\tthrow new Error(msg)\n}\nexport const throwCatchedError = (err) => (msg) => {\n\tthrow new Error(`${msg}\\n${err}`)\n}\n\n//  ===========================================================================\n//  =======     ====    ===  =======  ==      ====    ===  =======        =====\n//  ======  ===  ==  ==  ==   ======  =  ====  ==  ==  ==  =======  ===========\n//  =====  =======  ====  =    =====  =  ====  =  ====  =  =======  ===========\n//  =====  =======  ====  =  ==  ===  ==  ======  ====  =  =======  ===========\n//  =====  =======  ====  =  ===  ==  ====  ====  ====  =  =======      =======\n//  =====  =======  ====  =  ====  =  ======  ==  ====  =  =======  ===========\n//  =====  =======  ====  =  =====    =  ====  =  ====  =  =======  ===========\n//  ======  ===  ==  ==  ==  ======   =  ====  ==  ==  ==  =======  ===========\n//  =======     ====    ===  =======  ==      ====    ===        =        =====\n//  ===========================================================================\n\nexport const inspect = overstep(console.log)\n\nexport const log = (...args) => {\n\tconsole.log('------- Begin')\n\targs.map((el) => console.log(el))\n\tconsole.log('------- End')\n\treturn args.length > 1 ? args : args[0]\n}\n\nexport const report = (msg, opts = {}) => {\n\tif (!opts.silent && !opts.silentInfo) console.log(msg)\n}\n\nexport const rootReport = (actionType, opts = {}) => {\n\tconst {\n\t\tbox,\n\t\tname,\n\t\tdetailed\n\t} = opts\n\tconst count = box.getCount()\n\treport(\n\t\t`${ACTION_TYPES[actionType]} ${count} ${name}${count > 1 ? 's' : ''}${detailed ? `: ${box.join()}` : ''} `,\n\t\topts\n\t)\n}\n\nexport const webReport = (actionType, opts = {}) => {\n\tconst {\n\t\tbox,\n\t\tname,\n\t\tdetailed,\n\t\tcontextUrl\n\t} = opts\n\tconst count = box.getCount(actionType)\n\treport(\n\t\t`${ACTION_TYPES[actionType]\n\t\t} ${count\n\t\t} ${name}${count > 1 ? 's' : ''} at ${contextUrl || '/'\n\t\t}${detailed\n\t\t\t? `: ${box.join()}`\n\t\t\t: ''}`,\n\t\topts\n\t)\n}\n\nexport const listReport = (actionType, opts = {}) => {\n\tconst {\n\t\tbox,\n\t\tname,\n\t\tdetailed,\n\t\tcontextUrl,\n\t\tlistUrl\n\t} = opts\n\tconst count = box.getCount(actionType)\n\treport(\n\t\t`${ACTION_TYPES[actionType]\n\t\t} ${count\n\t\t} ${name}${count > 1 ? 's' : ''} in ${listUrl\n\t\t} at ${contextUrl || '/'\n\t\t}${detailed\n\t\t\t? `: ${box.join()}`\n\t\t\t: ''}`,\n\t\topts\n\t)\n}\n\n//  ========================================================================\n//  ======      ==       ====    ===  ====  =       ==        =       ======\n//  =====   ==   =  ====  ==  ==  ==  ====  =  ====  =  =======  ====  =====\n//  =====  ====  =  ====  =  ====  =  ====  =  ====  =  =======  ====  =====\n//  =====  =======  ===   =  ====  =  ====  =  ====  =  =======  ===   =====\n//  =====  =======      ===  ====  =  ====  =       ==      ===      =======\n//  =====  ===   =  ====  =  ====  =  ====  =  =======  =======  ====  =====\n//  =====  ====  =  ====  =  ====  =  ====  =  =======  =======  ====  =====\n//  =====   ==   =  ====  ==  ==  ==   ==   =  =======  =======  ====  =====\n//  ======      ==  ====  ===    ====      ==  =======        =  ====  =====\n//  ========================================================================\n\nconst groupSimple = (by) => reduce((acc) => (el) => {\n\tconst elValue = el[by]\n\tconst trueValue = isExists(elValue) && elValue.get_lookupId ? elValue.get_lookupId() : elValue\n\tconst groupValue = acc[trueValue]\n\tacc[trueValue] = isUndefined(groupValue)\n\t\t? [el]\n\t\t: isArray(groupValue)\n\t\t\t? concat(groupValue)(el)\n\t\t\t: [groupValue, el]\n\treturn acc\n})({})\n\nconst groupMapper = (f) => fix((fR) => (acc) => switchType({\n\tarray: f,\n\tobject: (el) => {\n\t\tconst props = Reflect.ownKeys(el)\n\t\tfor (let i = 0; i < props.length; i += 1) {\n\t\t\tconst property = props[i]\n\t\t\tconst childEl = el[property]\n\t\t\tacc[property] = isArray(childEl)\n\t\t\t\t? f(childEl)\n\t\t\t\t: fR({})(childEl)\n\t\t}\n\t\treturn acc\n\t},\n\tdefault: identity\n}))({})\n\n// const grouper = pipe([getArray, flip(pipe([getArray, reduceDirty(pipe([groupSimple, groupMapper]))]))]);\n\nconst grouper = flip(reduceDirty(pipe([groupSimple, groupMapper])))\n\nconst mapper = (by) => (xs) => reduce((acc) => (el) => {\n\tconst elValue = el[by]\n\tacc[isExists(elValue) && elValue.get_lookupId ? elValue.get_lookupId() : elValue] = el\n\treturn acc\n})({})(getArray(xs))\n\n//  ====================================\n//  =====  ====  =       ==  ===========\n//  =====  ====  =  ====  =  ===========\n//  =====  ====  =  ====  =  ===========\n//  =====  ====  =  ===   =  ===========\n//  =====  ====  =      ===  ===========\n//  =====  ====  =  ====  =  ===========\n//  =====  ====  =  ====  =  ===========\n//  =====   ==   =  ====  =  ===========\n//  ======      ==  ====  =        =====\n//  ====================================\n\nexport const hasUrlTailSlash = stringTest(/\\/$/)\nexport const hasUrlFilename = stringTest(/\\.[^/]+$/)\nexport const removeEmptyUrls = removeEmptiesByProp('Url')\nexport const removeEmptyIDs = filter(pipe([prop('ID'), isNumberFilled]))\nexport const removeEmptyFilenames = filter((x) => x.Url && hasUrlFilename(x.Url))\nexport const removeDuplicatedUrls = removeDuplicatedProp('Url')\nexport const prependSlash = ifThen(stringTest(/^\\//))([identity, sum('/')])\nexport const popSlash = stringCut(/\\/$/)\nexport const pushSlash = (str) => `${str} /`\nexport const shiftSlash = stringCut(/^\\//)\nexport const mergeSlashes = stringReplace(/\\/\\/+/g)('/')\nexport const urlSplit = stringSplit('/')\nexport const getTitleFromUrl = pipe([popSlash, urlSplit, arrayLast])\nexport const urlJoin = join('/')\nexport const getParentUrl = pipe([popSlash, urlSplit, arrayInit, urlJoin])\nexport const getFolderFromUrl = ifThen(stringTest(/\\./))([getParentUrl, popSlash])\nexport const getFilenameFromUrl = ifThen(stringTest(/\\./))([getTitleFromUrl, NULL])\nexport const isStrictUrl = (url) => isStringFilled(url) && !hasUrlTailSlash(url)\n\nexport const getListRelativeUrl = webUrl => listUrl => (element = {}) => {\n\tconst { Url, Folder } = element\n\tif (Folder) {\n\t\tconst folder = shiftSlash(Folder)\n\t\treturn Url ? `${folder}/${getTitleFromUrl(Url)}` : folder\n\t}\n\treturn Url && stringTest(/\\//)(Url)\n\t\t? Url === '/'\n\t\t\t? '/'\n\t\t\t: shiftSlash(\n\t\t\t\tarrayLast(\n\t\t\t\t\tstringSplit('@list@')(\n\t\t\t\t\t\tstringReplace(listUrl)('@list@')(stringReplace(shiftSlash(webUrl))('@web@')(Url))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t: Url\n}\n\nexport const getWebRelativeUrl = (webUrl) => (element = {}) => {\n\tconst { Url, Folder } = element\n\tif (Folder) {\n\t\tconst folder = shiftSlash(Folder)\n\t\treturn Url ? `${folder}/${getTitleFromUrl(Url)}` : folder\n\t}\n\treturn Url && stringTest(/\\//)(Url)\n\t\t? Url === '/'\n\t\t\t? '/'\n\t\t\t: shiftSlash(arrayLast(stringSplit('@web@')(stringReplace(shiftSlash(webUrl))('@web@')(Url))))\n\t\t: Url\n}\n\nexport class AbstractBox {\n\tconstructor(value, lifter, arrayValidator = identity) {\n\t\tthis.prop = 'Url'\n\t\tthis.joinProp = 'Url'\n\t\tthis.value = isArray(value)\n\t\t\t? ifThen(isArrayFilled)([\n\t\t\t\tpipe([\n\t\t\t\t\tmap(lifter),\n\t\t\t\t\tarrayValidator\n\t\t\t\t]),\n\t\t\t\tconstant([lifter()])\n\t\t\t])(value)\n\t\t\t: lifter(value)\n\t}\n\n\treduce(f, init = []) {\n\t\treturn isArray(this.value) ? reduce(f)(init)(this.value) : f(init)(this.value)\n\t}\n\n\tsome(f) {\n\t\treturn isArray(this.value) ? this.value.some(f) : f(this.value)\n\t}\n\n\tchain(f) {\n\t\treturn isArray(this.value) ? Promise.all(map(f)(this.value)) : f(this.value)\n\t}\n\n\tjoin() {\n\t\treturn isArray(this.value)\n\t\t\t? join(', ')(map(prop(this.joinProp))(this.value))\n\t\t\t: this.value[this.joinProp]\n\t}\n\n\tgetCount() {\n\t\treturn isArray(this.value)\n\t\t\t? this.value.filter(el => isDefined(el[this.prop])).length\n\t\t\t: isDefined(this.value[this.prop])\n\t\t\t\t? 1\n\t\t\t\t: 0\n\t}\n\n\tgetHead() {\n\t\treturn isArray(this.value) ? this.value[0] : this.value\n\t}\n\n\tgetHeadPropValue() {\n\t\treturn isArray(this.value) ? (this.value[0] ? this.value[0][this.prop] : undefined) : this.value[this.prop]\n\t}\n\n\tgetIterable() {\n\t\treturn isArray(this.value) ? this.value : [this.value]\n\t}\n\n\tisArray() {\n\t\treturn isArray(this.value)\n\t}\n}\n\n//  =============================================================================\n//  =====    =        =        =       =====  ====        ===    ===       ======\n//  ======  =====  ====  =======  ====  ===    ======  =====  ==  ==  ====  =====\n//  ======  =====  ====  =======  ====  ==  ==  =====  ====  ====  =  ====  =====\n//  ======  =====  ====  =======  ===   =  ====  ====  ====  ====  =  ===   =====\n//  ======  =====  ====      ===      ===  ====  ====  ====  ====  =      =======\n//  ======  =====  ====  =======  ====  =        ====  ====  ====  =  ====  =====\n//  ======  =====  ====  =======  ====  =  ====  ====  ====  ====  =  ====  =====\n//  ======  =====  ====  =======  ====  =  ====  ====  =====  ==  ==  ====  =====\n//  =====    ====  ====        =  ====  =  ====  ====  ======    ===  ====  =====\n//  =============================================================================\n\nexport const deep1Iterator = ({\n\tcontextUrl = '/',\n\telementBox,\n\tbundleSize = REQUEST_BUNDLE_MAX_SIZE\n}) => async (f) => {\n\tlet totalElements = 0\n\tlet clientContext = getClientContext(contextUrl)\n\tconst clientContexts = [clientContext]\n\tconst result = await elementBox.chain((element) => {\n\t\ttotalElements += 1\n\t\tif (totalElements >= bundleSize) {\n\t\t\tclientContext = getClientContext(contextUrl)\n\t\t\tclientContexts.push(clientContext)\n\t\t\ttotalElements = 0\n\t\t}\n\t\treturn f({ clientContext, element })\n\t})\n\treturn { clientContexts, result }\n}\n\nexport const deep1IteratorREST = ({ elementBox }) => (f) => elementBox.chain(async (element) => f({ element }))\n\n//  ===========================================================================\n//  =======     ====    ===  =======  =        =        =   ==   =        =====\n//  ======  ===  ==  ==  ==   ======  ====  ====  ========  ==  =====  ========\n//  =====  =======  ====  =    =====  ====  ====  ========  ==  =====  ========\n//  =====  =======  ====  =  ==  ===  ====  ====  =========    ======  ========\n//  =====  =======  ====  =  ===  ==  ====  ====      ======  =======  ========\n//  =====  =======  ====  =  ====  =  ====  ====  =========    ======  ========\n//  =====  =======  ====  =  =====    ====  ====  ========  ==  =====  ========\n//  ======  ===  ==  ==  ==  ======   ====  ====  ========  ==  =====  ========\n//  =======     ====    ===  =======  ====  ====        =  ====  ====  ========\n//  ===========================================================================\n\nconst newClientContext = getInstance(SP.ClientContext)\n\nexport const getClientContext = url => {\n\tlet normalizedUrl = url\n\tif (!/^https?:/.test(url) && !/^\\//.test(url)) {\n\t\tnormalizedUrl = prependSlash(url)\n\t}\n\tif (/\\.\\/$/.test(normalizedUrl)) {\n\t\tnormalizedUrl = popSlash(normalizedUrl)\n\t}\n\tconst clientContext = newClientContext(normalizedUrl)\n\tclientContext.set_requestTimeout(REQUEST_TIMEOUT)\n\treturn clientContext\n}\n\n\n//  ====================================================================================\n//  =====       ==        ==      ==       ====    ===  =======  ==      ==        =====\n//  =====  ====  =  =======  ====  =  ====  ==  ==  ==   ======  =  ====  =  ===========\n//  =====  ====  =  =======  ====  =  ====  =  ====  =    =====  =  ====  =  ===========\n//  =====  ===   =  ========  ======  ====  =  ====  =  ==  ===  ==  ======  ===========\n//  =====      ===      ======  ====       ==  ====  =  ===  ==  ====  ====      =======\n//  =====  ====  =  ============  ==  =======  ====  =  ====  =  ======  ==  ===========\n//  =====  ====  =  =======  ====  =  =======  ====  =  =====    =  ====  =  ===========\n//  =====  ====  =  =======  ====  =  ========  ==  ==  ======   =  ====  =  ===========\n//  =====  ====  =        ==      ==  =========    ===  =======  ==      ==        =====\n//  ====================================================================================\n\nconst getSPObjectValues = asItem => ifThen(isExists)([\n\tpipe([\n\t\tifThen(constant(asItem))([methodEmpty('get_listItemAllFields')]),\n\t\tifThen(isObject)([\n\t\t\tswitchProp({\n\t\t\t\tget_fieldValues: methodEmpty('get_fieldValues'),\n\t\t\t\tget_objectData: pipe([methodEmpty('get_objectData'), methodEmpty('get_properties')]),\n\t\t\t\tdefault: tryCatch(pipe([JSON.stringify, sum('Wrong spObject: '), throwError]))(throwError)\n\t\t\t})\n\t\t])\n\t])\n])\n\nconst getRESTValues = pipe([\n\tifThen(hasProp('body'))([pipe([prop('body'), ifThen(isString)([JSON.parse])]), prop('data')]),\n\tifThen(hasProp('d'))([pipe([prop('d'), ifThen(hasProp('results'))([prop('results')])])])\n])\n\nexport const prepareResponseJSOM = (results, opts = {}) => ifThen(isArray)([\n\tpipe([\n\t\tflatten,\n\t\tremoveUndefineds,\n\t\tifThen(constant(opts.expanded))([\n\t\t\tidentity,\n\t\t\tpipe([\n\t\t\t\tmap(getSPObjectValues(opts.asItem)),\n\t\t\t\tifThen(constant(opts.groupBy))([\n\t\t\t\t\tgrouper(opts.groupBy),\n\t\t\t\t\tifThen(constant(opts.mapBy))([mapper(opts.mapBy)])\n\t\t\t\t])\n\t\t\t])\n\t\t])\n\t]),\n\tifThen(constant(opts.expanded))([identity, getSPObjectValues(opts.asItem)])\n])(results)\n\nexport const prepareResponseREST = (results, opts = {}) => ifThen(isArray)([\n\tpipe([\n\t\tflatten,\n\t\tpipe([\n\t\t\tifThen(constant(opts.expanded))([identity]),\n\t\t\tmap(getRESTValues),\n\t\t\tifThen(constant(opts.groupBy))([\n\t\t\t\tgrouper(opts.groupBy),\n\t\t\t\tifThen(constant(opts.mapBy))([mapper(opts.mapBy)])\n\t\t\t])\n\t\t])\n\t]),\n\tgetRESTValues\n])(results)\n\n//  =============================================\n//  =====  =========    ======  ====       ======\n//  =====  ========  ==  ====    ===  ====  =====\n//  =====  =======  ====  ==  ==  ==  ====  =====\n//  =====  =======  ====  =  ====  =  ====  =====\n//  =====  =======  ====  =  ====  =  ====  =====\n//  =====  =======  ====  =        =  ====  =====\n//  =====  =======  ====  =  ====  =  ====  =====\n//  =====  ========  ==  ==  ====  =  ====  =====\n//  =====        ===    ===  ====  =       ======\n//  =============================================\n\nconst getViewOption = ifThen(isObjectFilled)([\n\tifThen(isPropFilled('view'))([\n\t\tifThen(isPropFilled('groupBy'))([\n\t\t\t(opts) => concat(getArray(opts.view))(getArray(opts.groupBy)),\n\t\t\tpipe([prop('view'), getArray])\n\t\t]),\n\t\tEMPTY_ARRAY\n\t]),\n\tEMPTY_ARRAY\n])\n\nexport const load = (clientContext, spObject, opts = {}) => ifThen(hasProp('getEnumerator'))([\n\tpipe([\n\t\t(data) => pipe([\n\t\t\tconstant(getViewOption(opts)),\n\t\t\tifThen(isArrayFilled)([(view) => [data, `Include(${view})`], constant([data])])\n\t\t])(data),\n\t\tapply('loadQuery')(clientContext)\n\t]),\n\toverstep(\n\t\tpipe([\n\t\t\t(data) => pipe([\n\t\t\t\tconstant(getViewOption(opts)),\n\t\t\t\tifThen(isArrayFilled)([(view) => [data, view], constant([data])])\n\t\t\t])(data),\n\t\t\tapply('load')(clientContext)\n\t\t])\n\t)\n])(spObject)\n\n//  =================================================================================\n//  =====        =   ==   =        ===     ==  ====  =        ===    ===       ======\n//  =====  ========  ==  ==  ========  ===  =  ====  ====  =====  ==  ==  ====  =====\n//  =====  ========  ==  ==  =======  =======  ====  ====  ====  ====  =  ====  =====\n//  =====  =========    ===  =======  =======  ====  ====  ====  ====  =  ===   =====\n//  =====      ======  ====      ===  =======  ====  ====  ====  ====  =      =======\n//  =====  =========    ===  =======  =======  ====  ====  ====  ====  =  ====  =====\n//  =====  ========  ==  ==  =======  =======  ====  ====  ====  ====  =  ====  =====\n//  =====  ========  ==  ==  ========  ===  =   ==   ====  =====  ==  ==  ====  =====\n//  =====        =  ====  =        ===     ===      =====  ======    ===  ====  =====\n//  =================================================================================\n\nexport const executorJSOM = async (clientContext) => new Promise((resolve, reject) => {\n\tclientContext.executeQueryAsync(\n\t\tresolve,\n\t\t(sender, args) => {\n\t\t\tconst cid = args.get_errorTraceCorrelationId()\n\t\t\treject(new Error(\n\t\t\t\t`\\nMessage: ${args\n\t\t\t\t\t.get_message()\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\n{1,}/g,\n\t\t\t\t\t\t' '\n\t\t\t\t\t)}\\nValue: ${args.get_errorValue()}\\nType: ${args.get_errorTypeName()}\\nId: ${cid}`\n\t\t\t))\n\t\t}\n\t)\n})\n\nexport const executeJSOM = async (clientContext, spObject, opts) => {\n\tconst spObjects = load(clientContext, spObject, opts)\n\tawait executorJSOM(clientContext)\n\treturn spObjects\n}\n\nexport const executorREST = async (contextUrl, opts = {}) => pipe([\n\tmergeSlashes,\n\tpopSlash,\n\tprependSlash,\n\tgetInstance(SP.RequestExecutor),\n\t(executor) => new Promise((resolve, reject) => executor.executeAsync({\n\t\t...opts,\n\t\tmethod: pipe([\n\t\t\tprop('method'),\n\t\t\tifThen(stringTest(/post/i))([constant('POST'), constant('GET')])\n\t\t])(opts),\n\t\tsuccess: resolve,\n\t\terror: (res) => {\n\t\t\tconst { silent, silentErrors } = opts\n\t\t\tif (!silent && !silentErrors) {\n\t\t\t\tconst { body } = res\n\t\t\t\tlet msg = body\n\t\t\t\tif (typeOf(res.body) === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmsg = JSON.parse(res.body).error.message.value\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// err\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.error(`\\nMessage: ${res.statusText}\\nCode: ${res.statusCode}\\nValue: ${msg}`)\n\t\t\t}\n\t\t\treject(res)\n\t\t}\n\t}))\n])(contextUrl)\n\n//  =================================================================\n//  =====      ======  =====      ==        ==       =======  =======\n//  =====  ===  ====    ===  ====  =  =======  =====  =====   =======\n//  =====  ====  ==  ==  ==  ====  =  =======  ===========    =======\n//  =====  ===  ==  ====  ==  ======  =======       =====  =  =======\n//  =====      ===  ====  ====  ====      ===   ===  ===  ==  =======\n//  =====  ===  ==        ======  ==  =======  =====  =  ===  =======\n//  =====  ====  =  ====  =  ====  =  =======  =====  =         =====\n//  =====  ===  ==  ====  =  ====  =  ========  ===   ======  =======\n//  =====      ===  ====  ==      ==        ===     ========  =======\n//  =================================================================\n\nconst CHARS = {\n\tascii: () => 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\tindices: () => {\n\t\tif (!this.cache) {\n\t\t\tthis.cache = {}\n\t\t\tconst ascii = CHARS.ascii()\n\n\t\t\tfor (let c = 0; c < ascii.length; c += 1) {\n\t\t\t\tthis.cache[ascii[c]] = c\n\t\t\t}\n\t\t}\n\t\treturn this.cache\n\t}\n}\n\nconst btoa = window.btoa || function (data) {\n\tconst ascii = CHARS.ascii()\n\tconst len = data.length - 1\n\tlet i = -1\n\tlet b64 = ''\n\n\twhile (i < len) {\n\t\tconst code = data.charCodeAt(++i) << 16 | data.charCodeAt(++i) << 8 | data.charCodeAt(++i)\n\t\tb64 += ascii[(code >>> 18) & 63] + ascii[(code >>> 12) & 63] + ascii[(code >>> 6) & 63] + ascii[code & 63]\n\t}\n\n\tconst pads = data.length % 3\n\tif (pads > 0) {\n\t\tb64 = b64.slice(0, pads - 3)\n\t\twhile (b64.length % 4 !== 0) b64 += '='\n\t}\n\n\treturn b64\n}\n\nconst atob = window.atob || function (b64) {\n\tconst indices = CHARS.indices()\n\tconst pos = b64.indexOf('=')\n\tconst padded = pos > -1\n\tconst len = padded ? pos : b64.length\n\tlet i = -1\n\tlet data = ''\n\n\twhile (i < len) {\n\t\tconst code = indices[b64[++i]] << 18 | indices[b64[++i]] << 12 | indices[b64[++i]] << 6 | indices[b64[++i]]\n\t\tif (code !== 0) data += String.fromCharCode((code >>> 16) & 255, (code >>> 8) & 255, code & 255)\n\t}\n\n\tif (padded) data = data.slice(0, pos - b64.length)\n\n\treturn data\n}\n\nexport const convertFileContent = switchType({\n\tarraybuffer: pipe([getInstance(Uint8Array), reduce(functionSum(String.fromCharCode))(''), btoa]),\n\tdefault: tryCatch(btoa)(() => identity)\n})\n\nexport const base64ToBlob = ({ data, type }) => {\n\tconst chunkSize = 512\n\tconst byteCharacters = atob(data)\n\tconst byteArrays = []\n\tconst { length } = byteCharacters\n\tfor (let offset = 0; offset < length; offset += chunkSize) {\n\t\tconst chunk = byteCharacters.slice(offset, offset + chunkSize)\n\t\tconst chunkLength = chunk.length\n\t\tconst byteNumbers = []\n\t\tfor (let i = 0; i < chunkLength; i += 1) byteNumbers.push(chunk.charCodeAt(i))\n\t\tbyteArrays.push(new Uint8Array(byteNumbers))\n\t}\n\treturn new Blob(byteArrays, {\n\t\ttype: type || 'application/octet-stream'\n\t})\n}\n\nexport const blobToDataUrl = (blob) => new Promise(resolve => {\n\tconst reader = new FileReader()\n\treader.onloadend = () => resolve(reader.result)\n\treader.readAsDataURL(blob)\n})\n\nexport const blobToArrayBuffer = (blob) => new Promise(resolve => {\n\tconst reader = new FileReader()\n\treader.onloadend = () => resolve(reader.result)\n\treader.readAsArrayBuffer(blob)\n})\n\nexport const blobToBase64 = async (blob) => (await blobToDataUrl(blob)).replace(/[^,]+base64,/, '')\n\nexport const dataUrlToBinary = (dataUrl) => {\n\tconst BASE64_MARKER = ';base64,'\n\tconst base64Index = dataUrl.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n\tconst raw = atob(dataUrl.substring(base64Index))\n\tconst rawLength = raw.length\n\tconst array = new Uint8Array(new ArrayBuffer(rawLength))\n\tfor (let i = 0; i < rawLength; i += 1) {\n\t\tarray[i] = raw.charCodeAt(i)\n\t}\n\treturn array\n}\n\n//  =================================================================================\n//  ======      ==       ====    ===      =======    =        ===     ==        =====\n//  =====  ====  =  ====  ==  ==  ==  ===  =======  ==  ========  ===  ====  ========\n//  =====  ====  =  ====  =  ====  =  ====  ======  ==  =======  ==========  ========\n//  ======  ======  ====  =  ====  =  ===  =======  ==  =======  ==========  ========\n//  ========  ====       ==  ====  =      ========  ==      ===  ==========  ========\n//  ==========  ==  =======  ====  =  ===  =======  ==  =======  ==========  ========\n//  =====  ====  =  =======  ====  =  ====  =  ===  ==  =======  ==========  ========\n//  =====  ====  =  ========  ==  ==  ===  ==  ===  ==  ========  ===  ====  ========\n//  ======      ==  =========    ===      ====     ===        ===     =====  ========\n//  =================================================================================\n\nconst setItemSP = (name) => (item) => (value) => item.set_item(name, value)\n\nexport const getSPFolderByUrl = (initUrl) => ifThen(constant(initUrl))([\n\tclimb((url) => pipe([methodEmpty('get_folders'), method('getByUrl')(url)]))(\n\t\tpipe([stringReplace(/\\/\\/+/)('/'), stringSplit('/')])(initUrl)\n\t),\n\tidentity\n])\n\nexport const setItem = (fieldsInfo) => (fields) => (spObject) => {\n\tconst props = Reflect.ownKeys(fields)\n\tfor (let i = 0; i < props.length; i += 1) {\n\t\tconst property = props[i]\n\t\tconst fieldInfo = fieldsInfo[property]\n\t\tconst fieldValues = fields[property]\n\t\tif (fieldInfo) {\n\t\t\tconst set = setItemSP(fieldInfo.InternalName)(spObject)\n\t\t\tconst setLookupAndUser = (f) => (constructor) => pipe([f(constructor), set])\n\t\t\tswitch (fieldInfo.TypeAsString) {\n\t\t\t\tcase 'Lookup':\n\t\t\t\t\tsetLookupAndUser(setLookup)(SP.FieldLookupValue)(fieldValues)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'LookupMulti':\n\t\t\t\t\tsetLookupAndUser(setLookupMulti)(SP.FieldLookupValue)(getArray(fieldValues))\n\t\t\t\t\tbreak\n\t\t\t\tcase 'User':\n\t\t\t\t\tsetLookupAndUser(setLookup)(SP.FieldUserValue)(fieldValues)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'UserMulti':\n\t\t\t\t\tsetLookupAndUser(setLookupMulti)(SP.FieldUserValue)(getArray(fieldValues))\n\t\t\t\t\tbreak\n\t\t\t\tcase 'TaxonomyFieldType':\n\t\t\t\t\tset(`-1;#${fieldValues.get_label()}|${fieldValues.get_termGuid()}`)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'TaxonomyFieldTypeMulti':\n\t\t\t\t\tswitchType({\n\t\t\t\t\t\tobject: pipe([\n\t\t\t\t\t\t\tprop('$2_1'),\n\t\t\t\t\t\t\tpipe([\n\t\t\t\t\t\t\t\treduce((acc) => (el) => acc.concat(`-1;#${el.get_label()}|${el.get_termGuid()}`))([]),\n\t\t\t\t\t\t\t\tjoin(';#'),\n\t\t\t\t\t\t\t\tset\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tarray: pipe([join(';'), setItemSP('TaxKeywordTaxHTField')(spObject)]),\n\t\t\t\t\t\tstring: setItemSP('TaxKeywordTaxHTField')(spObject)\n\t\t\t\t\t})(fieldValues)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tset(fieldValues)\n\t\t\t}\n\t\t} else {\n\t\t\tsetItemSP(property)(spObject)(fieldValues)\n\t\t}\n\t}\n\tspObject.update()\n\treturn spObject\n}\n\nexport const setLookupMulti = (constructor) => pipe([\n\treduce((acc) => ifThen(isExists)([pipe([setLookup(constructor), concat(acc)])]))([]),\n\tifThen(isArrayFilled)([identity, NULL])\n])\n\nconst setLookupValue = (constructor) => (value) => pipe([\n\tgetInstanceEmpty,\n\toverstep(method('set_lookupId')(value))\n])(constructor)\n\nexport const setLookup = (constructor) => pipe([\n\tifThen(isNull)([\n\t\tNULL,\n\t\tifThen(hasProp('get_lookupId'))([\n\t\t\tpipe([methodEmpty('get_lookupId'), setLookupValue(constructor)]),\n\t\t\tpipe([parseInt, ifThen(constant(and(isNumber)(gt(0))))([setLookupValue(constructor), NULL])])\n\t\t])\n\t])\n])\n\nexport const setFields = (source) => (target) => {\n\tconst props = Reflect.ownKeys(source)\n\tfor (let i = 0; i < props.length; i += 1) {\n\t\tconst property = props[i]\n\t\tconst value = source[property]\n\t\tif (value !== undefined && target[property]) target[property](value)\n\t}\n\treturn target\n}\n\nexport const getContext = methodEmpty('get_context')\n\nexport const getWeb = methodEmpty('get_web')\n\n//  =============================================\n//  =====        =        ==      ==        =====\n//  ========  ====  =======  ====  ====  ========\n//  ========  ====  =======  ====  ====  ========\n//  ========  ====  ========  =========  ========\n//  ========  ====      ======  =======  ========\n//  ========  ====  ============  =====  ========\n//  ========  ====  =======  ====  ====  ========\n//  ========  ====  =======  ====  ====  ========\n//  ========  ====        ==      =====  ========\n//  =============================================\n\nexport const assert = (msg) => (bool) => console.assert(bool === true, msg)\n\nexport const assertString = (msg) => (sample) => (str) => assert(`${msg}: ${str}`)(isEqual(sample)(str))\n\nexport const assertProp = (property) => (o) => assert(`object has no property \"${property}\"`)(hasOwnProp(property)(o))\n\nexport const assertProps = (props) => (o) => {\n\tfor (let i = 0; i < props.length; i += 1) {\n\t\tconst property = props[i]\n\t\tassertProp(property)(o)\n\t}\n\treturn o\n}\n\nexport const assertObject = (props) => (name) => async (promise) => {\n\tconst el = await promise\n\tassert(`${name} is not an object`)(isObject(el))\n\tassert(`${name} is empty object`)(isObjectFilled(el))\n\tassertProps(props)(el)\n\treturn el\n}\n\nexport const assertCollection = (props) => (name) => async (promise) => {\n\tconst el = await promise\n\tassert(`${name} collection is not an array`)(isArray(el))\n\tassert(`${name} collection is an empty array`)(isArrayFilled(el))\n\tmap(pipe([isObjectFilled, assert(`${name} collection element is empty`)]))(el)\n\tassertProps(props)(el[0])\n\treturn el\n}\n\nexport const testIsOk = (name) => () => console.log(`${name} is OK`)\n\nexport const testWrapper = msg => async tests => {\n\tconsole.log(`${msg} testing...`)\n\tfor (const test of tests) await test()\n\tconsole.log(`${msg} done!`)\n}\n\n//  ============================================================\n//  ========    ====        ==  ====  ==        ==       =======\n//  =======  ==  ======  =====  ====  ==  ========  ====  ======\n//  ======  ====  =====  =====  ====  ==  ========  ====  ======\n//  ======  ====  =====  =====  ====  ==  ========  ===   ======\n//  ======  ====  =====  =====        ==      ====      ========\n//  ======  ====  =====  =====  ====  ==  ========  ====  ======\n//  ======  ====  =====  =====  ====  ==  ========  ====  ======\n//  =======  ==  ======  =====  ====  ==  ========  ====  ======\n//  ========    =======  =====  ====  ==        ==  ====  ======\n//  ============================================================\n\nexport const getRequestDigest = contextUrl => axios({\n\turl: `${prependSlash(contextUrl)}/_api/contextinfo`,\n\theaders: {\n\t\tAccept: 'application/json; odata=verbose'\n\t},\n\tmethod: 'POST'\n}).then(res => res.data.d.GetContextWebInformation.FormDigestValue)\n\nexport const getPermissionMasks = () => getPermissionMasks.cache || (() => {\n\tconst permissionKind = SP.PermissionKind\n\tgetPermissionMasks.cache = Object.keys(permissionKind).reduce((acc, el) => {\n\t\tconst kind = permissionKind[el]\n\t\tif (isNumber(kind)) acc[el] = kind\n\t\treturn acc\n\t}, {})\n\treturn getPermissionMasks.cache\n})()\n","var undefined = (void 0); // Paranoia\n\n// Beyond this value, index getters/setters (i.e. array[0], array[1]) are so slow to\n// create, and consume so much memory, that the browser appears frozen.\nvar MAX_ARRAY_LENGTH = 1e5;\n\n// Approximations of internal ECMAScript conversion functions\nvar ECMAScript = (function() {\n  // Stash a copy in case other scripts modify these\n  var opts = Object.prototype.toString,\n      ophop = Object.prototype.hasOwnProperty;\n\n  return {\n    // Class returns internal [[Class]] property, used to avoid cross-frame instanceof issues:\n    Class: function(v) { return opts.call(v).replace(/^\\[object *|\\]$/g, ''); },\n    HasProperty: function(o, p) { return p in o; },\n    HasOwnProperty: function(o, p) { return ophop.call(o, p); },\n    IsCallable: function(o) { return typeof o === 'function'; },\n    ToInt32: function(v) { return v >> 0; },\n    ToUint32: function(v) { return v >>> 0; }\n  };\n}());\n\n// Snapshot intrinsics\nvar LN2 = Math.LN2,\n    abs = Math.abs,\n    floor = Math.floor,\n    log = Math.log,\n    min = Math.min,\n    pow = Math.pow,\n    round = Math.round;\n\n// ES5: lock down object properties\nfunction configureProperties(obj) {\n  if (getOwnPropNames && defineProp) {\n    var props = getOwnPropNames(obj), i;\n    for (i = 0; i < props.length; i += 1) {\n      defineProp(obj, props[i], {\n        value: obj[props[i]],\n        writable: false,\n        enumerable: false,\n        configurable: false\n      });\n    }\n  }\n}\n\n// emulate ES5 getter/setter API using legacy APIs\n// http://blogs.msdn.com/b/ie/archive/2010/09/07/transitioning-existing-code-to-the-es5-getter-setter-apis.aspx\n// (second clause tests for Object.defineProperty() in IE<9 that only supports extending DOM prototypes, but\n// note that IE<9 does not support __defineGetter__ or __defineSetter__ so it just renders the method harmless)\nvar defineProp\nif (Object.defineProperty && (function() {\n      try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n      } catch (e) {\n        return false;\n      }\n    })()) {\n  defineProp = Object.defineProperty;\n} else {\n  defineProp = function(o, p, desc) {\n    if (!o === Object(o)) throw new TypeError(\"Object.defineProperty called on non-object\");\n    if (ECMAScript.HasProperty(desc, 'get') && Object.prototype.__defineGetter__) { Object.prototype.__defineGetter__.call(o, p, desc.get); }\n    if (ECMAScript.HasProperty(desc, 'set') && Object.prototype.__defineSetter__) { Object.prototype.__defineSetter__.call(o, p, desc.set); }\n    if (ECMAScript.HasProperty(desc, 'value')) { o[p] = desc.value; }\n    return o;\n  };\n}\n\nvar getOwnPropNames = Object.getOwnPropertyNames || function (o) {\n  if (o !== Object(o)) throw new TypeError(\"Object.getOwnPropertyNames called on non-object\");\n  var props = [], p;\n  for (p in o) {\n    if (ECMAScript.HasOwnProperty(o, p)) {\n      props.push(p);\n    }\n  }\n  return props;\n};\n\n// ES5: Make obj[index] an alias for obj._getter(index)/obj._setter(index, value)\n// for index in 0 ... obj.length\nfunction makeArrayAccessors(obj) {\n  if (!defineProp) { return; }\n\n  if (obj.length > MAX_ARRAY_LENGTH) throw new RangeError(\"Array too large for polyfill\");\n\n  function makeArrayAccessor(index) {\n    defineProp(obj, index, {\n      'get': function() { return obj._getter(index); },\n      'set': function(v) { obj._setter(index, v); },\n      enumerable: true,\n      configurable: false\n    });\n  }\n\n  var i;\n  for (i = 0; i < obj.length; i += 1) {\n    makeArrayAccessor(i);\n  }\n}\n\n// Internal conversion functions:\n//    pack<Type>()   - take a number (interpreted as Type), output a byte array\n//    unpack<Type>() - take a byte array, output a Type-like number\n\nfunction as_signed(value, bits) { var s = 32 - bits; return (value << s) >> s; }\nfunction as_unsigned(value, bits) { var s = 32 - bits; return (value << s) >>> s; }\n\nfunction packI8(n) { return [n & 0xff]; }\nfunction unpackI8(bytes) { return as_signed(bytes[0], 8); }\n\nfunction packU8(n) { return [n & 0xff]; }\nfunction unpackU8(bytes) { return as_unsigned(bytes[0], 8); }\n\nfunction packU8Clamped(n) { n = round(Number(n)); return [n < 0 ? 0 : n > 0xff ? 0xff : n & 0xff]; }\n\nfunction packI16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI16(bytes) { return as_signed(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packU16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU16(bytes) { return as_unsigned(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packI32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI32(bytes) { return as_signed(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packU32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU32(bytes) { return as_unsigned(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packIEEE754(v, ebits, fbits) {\n\n  var bias = (1 << (ebits - 1)) - 1,\n      s, e, f, ln,\n      i, bits, str, bytes;\n\n  function roundToEven(n) {\n    var w = floor(n), f = n - w;\n    if (f < 0.5)\n      return w;\n    if (f > 0.5)\n      return w + 1;\n    return w % 2 ? w + 1 : w;\n  }\n\n  // Compute sign, exponent, fraction\n  if (v !== v) {\n    // NaN\n    // http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping\n    e = (1 << ebits) - 1; f = pow(2, fbits - 1); s = 0;\n  } else if (v === Infinity || v === -Infinity) {\n    e = (1 << ebits) - 1; f = 0; s = (v < 0) ? 1 : 0;\n  } else if (v === 0) {\n    e = 0; f = 0; s = (1 / v === -Infinity) ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = abs(v);\n\n    if (v >= pow(2, 1 - bias)) {\n      e = min(floor(log(v) / LN2), 1023);\n      f = roundToEven(v / pow(2, e) * pow(2, fbits));\n      if (f / pow(2, fbits) >= 2) {\n        e = e + 1;\n        f = 1;\n      }\n      if (e > bias) {\n        // Overflow\n        e = (1 << ebits) - 1;\n        f = 0;\n      } else {\n        // Normalized\n        e = e + bias;\n        f = f - pow(2, fbits);\n      }\n    } else {\n      // Denormalized\n      e = 0;\n      f = roundToEven(v / pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) { bits.push(f % 2 ? 1 : 0); f = floor(f / 2); }\n  for (i = ebits; i; i -= 1) { bits.push(e % 2 ? 1 : 0); e = floor(e / 2); }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Bits to bytes\n  bytes = [];\n  while (str.length) {\n    bytes.push(parseInt(str.substring(0, 8), 2));\n    str = str.substring(8);\n  }\n  return bytes;\n}\n\nfunction unpackIEEE754(bytes, ebits, fbits) {\n\n  // Bytes to bits\n  var bits = [], i, j, b, str,\n      bias, s, e, f;\n\n  for (i = bytes.length; i; i -= 1) {\n    b = bytes[i - 1];\n    for (j = 8; j; j -= 1) {\n      bits.push(b % 2 ? 1 : 0); b = b >> 1;\n    }\n  }\n  bits.reverse();\n  str = bits.join('');\n\n  // Unpack sign, exponent, fraction\n  bias = (1 << (ebits - 1)) - 1;\n  s = parseInt(str.substring(0, 1), 2) ? -1 : 1;\n  e = parseInt(str.substring(1, 1 + ebits), 2);\n  f = parseInt(str.substring(1 + ebits), 2);\n\n  // Produce number\n  if (e === (1 << ebits) - 1) {\n    return f !== 0 ? NaN : s * Infinity;\n  } else if (e > 0) {\n    // Normalized\n    return s * pow(2, e - bias) * (1 + f / pow(2, fbits));\n  } else if (f !== 0) {\n    // Denormalized\n    return s * pow(2, -(bias - 1)) * (f / pow(2, fbits));\n  } else {\n    return s < 0 ? -0 : 0;\n  }\n}\n\nfunction unpackF64(b) { return unpackIEEE754(b, 11, 52); }\nfunction packF64(v) { return packIEEE754(v, 11, 52); }\nfunction unpackF32(b) { return unpackIEEE754(b, 8, 23); }\nfunction packF32(v) { return packIEEE754(v, 8, 23); }\n\n\n//\n// 3 The ArrayBuffer Type\n//\n\n(function() {\n\n  /** @constructor */\n  var ArrayBuffer = function ArrayBuffer(length) {\n    length = ECMAScript.ToInt32(length);\n    if (length < 0) throw new RangeError('ArrayBuffer size is not a small enough positive integer');\n\n    this.byteLength = length;\n    this._bytes = [];\n    this._bytes.length = length;\n\n    var i;\n    for (i = 0; i < this.byteLength; i += 1) {\n      this._bytes[i] = 0;\n    }\n\n    configureProperties(this);\n  };\n\n  exports.ArrayBuffer = exports.ArrayBuffer || ArrayBuffer;\n\n  //\n  // 4 The ArrayBufferView Type\n  //\n\n  // NOTE: this constructor is not exported\n  /** @constructor */\n  var ArrayBufferView = function ArrayBufferView() {\n    //this.buffer = null;\n    //this.byteOffset = 0;\n    //this.byteLength = 0;\n  };\n\n  //\n  // 5 The Typed Array View Types\n  //\n\n  function makeConstructor(bytesPerElement, pack, unpack) {\n    // Each TypedArray type requires a distinct constructor instance with\n    // identical logic, which this produces.\n\n    var ctor;\n    ctor = function(buffer, byteOffset, length) {\n      var array, sequence, i, s;\n\n      if (!arguments.length || typeof arguments[0] === 'number') {\n        // Constructor(unsigned long length)\n        this.length = ECMAScript.ToInt32(arguments[0]);\n        if (length < 0) throw new RangeError('ArrayBufferView size is not a small enough positive integer');\n\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n      } else if (typeof arguments[0] === 'object' && arguments[0].constructor === ctor) {\n        // Constructor(TypedArray array)\n        array = arguments[0];\n\n        this.length = array.length;\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          this._setter(i, array._getter(i));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 !(arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(sequence<type> array)\n        sequence = arguments[0];\n\n        this.length = ECMAScript.ToUint32(sequence.length);\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          s = sequence[i];\n          this._setter(i, Number(s));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 (arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(ArrayBuffer buffer,\n        //             optional unsigned long byteOffset, optional unsigned long length)\n        this.buffer = buffer;\n\n        this.byteOffset = ECMAScript.ToUint32(byteOffset);\n        if (this.byteOffset > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset out of range\");\n        }\n\n        if (this.byteOffset % this.BYTES_PER_ELEMENT) {\n          // The given byteOffset must be a multiple of the element\n          // size of the specific type, otherwise an exception is raised.\n          throw new RangeError(\"ArrayBuffer length minus the byteOffset is not a multiple of the element size.\");\n        }\n\n        if (arguments.length < 3) {\n          this.byteLength = this.buffer.byteLength - this.byteOffset;\n\n          if (this.byteLength % this.BYTES_PER_ELEMENT) {\n            throw new RangeError(\"length of buffer minus byteOffset not a multiple of the element size\");\n          }\n          this.length = this.byteLength / this.BYTES_PER_ELEMENT;\n        } else {\n          this.length = ECMAScript.ToUint32(length);\n          this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        }\n\n        if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n\n      this.constructor = ctor;\n\n      configureProperties(this);\n      makeArrayAccessors(this);\n    };\n\n    ctor.prototype = new ArrayBufferView();\n    ctor.prototype.BYTES_PER_ELEMENT = bytesPerElement;\n    ctor.prototype._pack = pack;\n    ctor.prototype._unpack = unpack;\n    ctor.BYTES_PER_ELEMENT = bytesPerElement;\n\n    // getter type (unsigned long index);\n    ctor.prototype._getter = function(index) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = [], i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        bytes.push(this.buffer._bytes[o]);\n      }\n      return this._unpack(bytes);\n    };\n\n    // NONSTANDARD: convenience alias for getter: type get(unsigned long index);\n    ctor.prototype.get = ctor.prototype._getter;\n\n    // setter void (unsigned long index, type value);\n    ctor.prototype._setter = function(index, value) {\n      if (arguments.length < 2) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = this._pack(value), i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        this.buffer._bytes[o] = bytes[i];\n      }\n    };\n\n    // void set(TypedArray array, optional unsigned long offset);\n    // void set(sequence<type> array, optional unsigned long offset);\n    ctor.prototype.set = function(index, value) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n      var array, sequence, offset, len,\n          i, s, d,\n          byteOffset, byteLength, tmp;\n\n      if (typeof arguments[0] === 'object' && arguments[0].constructor === this.constructor) {\n        // void set(TypedArray array, optional unsigned long offset);\n        array = arguments[0];\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + array.length > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        byteOffset = this.byteOffset + offset * this.BYTES_PER_ELEMENT;\n        byteLength = array.length * this.BYTES_PER_ELEMENT;\n\n        if (array.buffer === this.buffer) {\n          tmp = [];\n          for (i = 0, s = array.byteOffset; i < byteLength; i += 1, s += 1) {\n            tmp[i] = array.buffer._bytes[s];\n          }\n          for (i = 0, d = byteOffset; i < byteLength; i += 1, d += 1) {\n            this.buffer._bytes[d] = tmp[i];\n          }\n        } else {\n          for (i = 0, s = array.byteOffset, d = byteOffset;\n               i < byteLength; i += 1, s += 1, d += 1) {\n            this.buffer._bytes[d] = array.buffer._bytes[s];\n          }\n        }\n      } else if (typeof arguments[0] === 'object' && typeof arguments[0].length !== 'undefined') {\n        // void set(sequence<type> array, optional unsigned long offset);\n        sequence = arguments[0];\n        len = ECMAScript.ToUint32(sequence.length);\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + len > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        for (i = 0; i < len; i += 1) {\n          s = sequence[i];\n          this._setter(offset + i, Number(s));\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n    };\n\n    // TypedArray subarray(long begin, optional long end);\n    ctor.prototype.subarray = function(start, end) {\n      function clamp(v, min, max) { return v < min ? min : v > max ? max : v; }\n\n      start = ECMAScript.ToInt32(start);\n      end = ECMAScript.ToInt32(end);\n\n      if (arguments.length < 1) { start = 0; }\n      if (arguments.length < 2) { end = this.length; }\n\n      if (start < 0) { start = this.length + start; }\n      if (end < 0) { end = this.length + end; }\n\n      start = clamp(start, 0, this.length);\n      end = clamp(end, 0, this.length);\n\n      var len = end - start;\n      if (len < 0) {\n        len = 0;\n      }\n\n      return new this.constructor(\n        this.buffer, this.byteOffset + start * this.BYTES_PER_ELEMENT, len);\n    };\n\n    return ctor;\n  }\n\n  var Int8Array = makeConstructor(1, packI8, unpackI8);\n  var Uint8Array = makeConstructor(1, packU8, unpackU8);\n  var Uint8ClampedArray = makeConstructor(1, packU8Clamped, unpackU8);\n  var Int16Array = makeConstructor(2, packI16, unpackI16);\n  var Uint16Array = makeConstructor(2, packU16, unpackU16);\n  var Int32Array = makeConstructor(4, packI32, unpackI32);\n  var Uint32Array = makeConstructor(4, packU32, unpackU32);\n  var Float32Array = makeConstructor(4, packF32, unpackF32);\n  var Float64Array = makeConstructor(8, packF64, unpackF64);\n\n  exports.Int8Array = exports.Int8Array || Int8Array;\n  exports.Uint8Array = exports.Uint8Array || Uint8Array;\n  exports.Uint8ClampedArray = exports.Uint8ClampedArray || Uint8ClampedArray;\n  exports.Int16Array = exports.Int16Array || Int16Array;\n  exports.Uint16Array = exports.Uint16Array || Uint16Array;\n  exports.Int32Array = exports.Int32Array || Int32Array;\n  exports.Uint32Array = exports.Uint32Array || Uint32Array;\n  exports.Float32Array = exports.Float32Array || Float32Array;\n  exports.Float64Array = exports.Float64Array || Float64Array;\n}());\n\n//\n// 6 The DataView View Type\n//\n\n(function() {\n  function r(array, index) {\n    return ECMAScript.IsCallable(array.get) ? array.get(index) : array[index];\n  }\n\n  var IS_BIG_ENDIAN = (function() {\n    var u16array = new(exports.Uint16Array)([0x1234]),\n        u8array = new(exports.Uint8Array)(u16array.buffer);\n    return r(u8array, 0) === 0x12;\n  }());\n\n  // Constructor(ArrayBuffer buffer,\n  //             optional unsigned long byteOffset,\n  //             optional unsigned long byteLength)\n  /** @constructor */\n  var DataView = function DataView(buffer, byteOffset, byteLength) {\n    if (arguments.length === 0) {\n      buffer = new exports.ArrayBuffer(0);\n    } else if (!(buffer instanceof exports.ArrayBuffer || ECMAScript.Class(buffer) === 'ArrayBuffer')) {\n      throw new TypeError(\"TypeError\");\n    }\n\n    this.buffer = buffer || new exports.ArrayBuffer(0);\n\n    this.byteOffset = ECMAScript.ToUint32(byteOffset);\n    if (this.byteOffset > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset out of range\");\n    }\n\n    if (arguments.length < 3) {\n      this.byteLength = this.buffer.byteLength - this.byteOffset;\n    } else {\n      this.byteLength = ECMAScript.ToUint32(byteLength);\n    }\n\n    if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n    }\n\n    configureProperties(this);\n  };\n\n  function makeGetter(arrayType) {\n    return function(byteOffset, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n      byteOffset += this.byteOffset;\n\n      var uint8Array = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT),\n          bytes = [], i;\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(uint8Array, i));\n      }\n\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      return r(new arrayType(new exports.Uint8Array(bytes).buffer), 0);\n    };\n  }\n\n  DataView.prototype.getUint8 = makeGetter(exports.Uint8Array);\n  DataView.prototype.getInt8 = makeGetter(exports.Int8Array);\n  DataView.prototype.getUint16 = makeGetter(exports.Uint16Array);\n  DataView.prototype.getInt16 = makeGetter(exports.Int16Array);\n  DataView.prototype.getUint32 = makeGetter(exports.Uint32Array);\n  DataView.prototype.getInt32 = makeGetter(exports.Int32Array);\n  DataView.prototype.getFloat32 = makeGetter(exports.Float32Array);\n  DataView.prototype.getFloat64 = makeGetter(exports.Float64Array);\n\n  function makeSetter(arrayType) {\n    return function(byteOffset, value, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n\n      // Get bytes\n      var typeArray = new arrayType([value]),\n          byteArray = new exports.Uint8Array(typeArray.buffer),\n          bytes = [], i, byteView;\n\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(byteArray, i));\n      }\n\n      // Flip if necessary\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      // Write them\n      byteView = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT);\n      byteView.set(bytes);\n    };\n  }\n\n  DataView.prototype.setUint8 = makeSetter(exports.Uint8Array);\n  DataView.prototype.setInt8 = makeSetter(exports.Int8Array);\n  DataView.prototype.setUint16 = makeSetter(exports.Uint16Array);\n  DataView.prototype.setInt16 = makeSetter(exports.Int16Array);\n  DataView.prototype.setUint32 = makeSetter(exports.Uint32Array);\n  DataView.prototype.setInt32 = makeSetter(exports.Int32Array);\n  DataView.prototype.setFloat32 = makeSetter(exports.Float32Array);\n  DataView.prototype.setFloat64 = makeSetter(exports.Float64Array);\n\n  exports.DataView = exports.DataView || DataView;\n\n}());\n","import {\n\tgetClientContext,\n\tgetInstance,\n\tload,\n\texecutorJSOM,\n\tsetFields,\n\tswitchType\n} from '../lib/utility'\n\nconst KEY_PROP = 'Query'\n\nconst lifter = switchType({\n\tobject: query => Object.assign({}, query),\n\tstring: (query = '') => ({\n\t\t[KEY_PROP]: query,\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: ''\n\t})\n})\n\nclass Search {\n\tconstructor(parent, query) {\n\t\tthis.name = 'search'\n\t\tthis.parent = parent\n\t\tthis.element = lifter(query)\n\t\tthis.contextUrl = parent.box.getHeadPropValue()\n\t\tthis.rowsPerPage = this.element.RowsPerPage || 10\n\t\tif (this.element.StartRow === undefined) this.element.StartRow = 0\n\t}\n\n\tasync get(opts) {\n\t\tconst clientContext = getClientContext(this.contextUrl || '/')\n\t\tconst { element } = this\n\t\tconst searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(clientContext)\n\t\tconst keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(clientContext)\n\n\t\tsetFields({\n\t\t\tset_queryText: element[KEY_PROP],\n\t\t\tset_clientType: element.ClientType || 'AllResultsQuery',\n\t\t\tset_queryTemplate: element.QueryTemplate ? element.QueryTemplate.join(' ') : undefined,\n\t\t\tset_refiners: element.Refiners,\n\t\t\tset_rowsPerPage: element.RowsPerPage || this.rowsPerPage,\n\t\t\tset_totalRowsExactMinimum: element.TotalRowsExactMinimum || 11,\n\t\t\tset_blockDedupeMode: element.BlockDedupeMode,\n\t\t\tset_bypassResultTypes: element.BypassResultTypes,\n\t\t\tset_collapseSpecification: element.CollapseSpecification,\n\t\t\tset_culture: element.Culture || 1033,\n\t\t\tset_desiredSnippetLength: element.DesiredSnippetLength,\n\t\t\tset_enableInterleaving: element.EnableInterleaving,\n\t\t\tset_enableNicknames: element.EnableNicknames,\n\t\t\tset_enableOrderHitHighlightedProperty: element.EnableOrderHitHighlightedProperty,\n\t\t\tset_enablePhonetic: element.EnablePhonetic,\n\t\t\tset_enableQueryRules: element.EnableQueryRules,\n\t\t\tset_enableSorting: element.EnableSorting,\n\t\t\tset_enableStemming: element.EnableStemming,\n\t\t\tset_generateBlockRankLog: element.GenerateBlockRankLog,\n\t\t\tset_hiddenConstrains: element.HiddenConstrains,\n\t\t\tset_hitHighlightedMultivaluePropertyLimit: element.HitHighlightedMultivaluePropertyLimit,\n\t\t\tset_impressionID: element.ImpressionID,\n\t\t\tset_maxSnippetLength: element.MaxSnippetLength,\n\t\t\tset_personalizationData: element.PersonalizationData,\n\t\t\tset_processBestBets: element.ProcessBestBets,\n\t\t\tset_processPersonalFavorites: element.ProcessPersonalFavorites,\n\t\t\tset_queryTag: element.QueryTag,\n\t\t\tset_rankingModelId: element.RankingModelId,\n\t\t\tset_refinementFilters: element.RefinementFilters,\n\t\t\tset_reorderingRules: element.ReorderingRules,\n\t\t\tset_resultsUrl: element.ResultsUrl,\n\t\t\tset_rowLimit: element.RowLimit || 10,\n\t\t\tset_startRow: element.StartRow,\n\t\t\tset_showPeopleNameSuggestions: element.ShowPeopleNameSuggestions || false,\n\t\t\tset_summaryLength: element.SummaryLength,\n\t\t\tset_timeZoneId: element.TimeZoneId,\n\t\t\tset_timeout: element.Timeout,\n\t\t\tset_trimDuplicates: element.TrimDuplicates,\n\t\t\tset_trimDuplicatesIncludeId: element.TrimDuplicatesIncludeId,\n\t\t\tset_uiLanguage: element.UiLanguage || 1033\n\t\t})(keywordQuery)\n\n\t\tload(clientContext, keywordQuery, opts)\n\t\tconst result = searchExecutor.executeQuery(keywordQuery)\n\t\tawait executorJSOM(clientContext)\n\t\treturn result.get_value()\n\t}\n\n\tasync next(opts) {\n\t\tconst res = await this.get(opts)\n\t\tthis.element.StartRow += this.rowsPerPage\n\t\treturn res\n\t}\n\n\tasync previous(opts) {\n\t\tconst res = await this.get(opts)\n\t\tthis.element.StartRow -= this.rowsPerPage\n\t\treturn res\n\t}\n\n\tasync move(opts = {}) {\n\t\tconst { page } = opts\n\t\tthis.element.StartRow = page * this.rowsPerPage\n\t\treturn this.get(opts)\n\t}\n}\n\nexport default getInstance(Search)\n","/* eslint class-methods-use-this:0 */\nimport {\n\tAbstractBox,\n\tgetInstance,\n\tisGUID,\n\tpipe,\n\tmethodEmpty,\n\tmethod,\n\tifThen,\n\tconstant,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tsetFields,\n\toverstep,\n\tstringReplace,\n\tisExists,\n\tswitchCase,\n\tisStringEmpty,\n\thasUrlTailSlash,\n\tswitchType,\n\tshiftSlash,\n\tmergeSlashes,\n\tlistReport,\n\tisStrictUrl,\n\tisFilled,\n\tdeep1Iterator,\n\tremoveEmptiesByProp,\n\tremoveDuplicatedProp\n} from '../lib/utility'\n\nconst KEY_PROP = 'Title'\n\nconst addFieldAsXml = spParentObject => schema => spParentObject.addFieldAsXml(\n\tschema, true, SP.AddFieldOptions.defaultValue\n)\n\nconst arrayValidator = pipe([removeEmptiesByProp(KEY_PROP), removeDuplicatedProp(KEY_PROP)])\n\nconst lifter = switchType({\n\tobject: column => {\n\t\tconst newColumn = Object.assign({}, column)\n\t\tif (column[KEY_PROP] !== '/') newColumn[KEY_PROP] = shiftSlash(newColumn[KEY_PROP])\n\t\tif (!column[KEY_PROP]) {\n\t\t\tnewColumn[KEY_PROP] = column.EntityPropertyName\n\t\t\t\t|| column.InternalName\n\t\t\t\t|| column.StaticName\n\t\t}\n\t\tif (!column.Type) newColumn.Type = 'Text'\n\t\treturn newColumn\n\t},\n\tstring: column => ({\n\t\t[KEY_PROP]: column === '/' ? '/' : shiftSlash(mergeSlashes(column)),\n\t\tType: 'Text'\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: undefined,\n\t\tType: 'Text'\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value = '') {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t}\n}\n\n\nclass Column {\n\tconstructor(parent, columns) {\n\t\tthis.name = 'column'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(columns)\n\t\tthis.contextUrl = parent.parent.box.getHeadPropValue()\n\t\tthis.listUrl = parent.box.getHeadPropValue()\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box,\n\t\t})\n\t}\n\n\tasync\tget(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementTitle = element[KEY_PROP]\n\t\t\tconst isCollection = isStringEmpty(elementTitle) || hasUrlTailSlash(elementTitle)\n\t\t\tconst spObject = isCollection\n\t\t\t\t? this.getSPObjectCollection(clientContext)\n\t\t\t\t: this.getSPObject(elementTitle, clientContext)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync\tcreate(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!isStrictUrl(title)) return undefined\n\t\t\tconst {\n\t\t\t\tTitle = title,\n\t\t\t\tType = element.TypeAsString || 'Text',\n\t\t\t\tAllowMultipleValues,\n\t\t\t\tLookupWebId,\n\t\t\t\tLookupList,\n\t\t\t\tLookupField = 'Title',\n\t\t\t\tMaxLength,\n\t\t\t\tRichText,\n\t\t\t\tSchemaXml\n\t\t\t} = element\n\t\t\tconst castTo = value => spFieldObject => clientContext.castTo(spFieldObject, value)\n\t\t\tconst spObject = pipe([\n\t\t\t\tifThen(isFilled)([\n\t\t\t\t\tifThen(constant(MaxLength))([stringReplace(/MaxLength=\"\\d+\"/)(`MaxLength=\"${MaxLength}\"`)]),\n\t\t\t\t\tifThen(constant(MaxLength && Type === 'Text'))([\n\t\t\t\t\t\tconstant(`<Field Type=\"${Type}\" DisplayName=\"${Title}\" MaxLength=\"${MaxLength}\"/>`),\n\t\t\t\t\t\tconstant(`<Field Type=\"${Type}\" DisplayName=\"${Title}\"/>`)\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\taddFieldAsXml(this.getSPObjectCollection(clientContext)),\n\t\t\t\toverstep(\n\t\t\t\t\tsetFields({\n\t\t\t\t\t\tset_defaultValue: element.DefaultValue,\n\t\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\t\tset_direction: element.Direction,\n\t\t\t\t\t\tset_enforceUniqueValues: element.EnforceUniqueValues,\n\t\t\t\t\t\tset_fieldTypeKind: element.FieldTypeKind,\n\t\t\t\t\t\tset_group: element.Group,\n\t\t\t\t\t\tset_hidden: element.Hidden || undefined,\n\t\t\t\t\t\tset_indexed: element.Indexed,\n\t\t\t\t\t\tset_jsLink: element.JsLink,\n\t\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\t\tset_readOnlyField: element.ReadOnlyField,\n\t\t\t\t\t\tset_required: element.Required,\n\t\t\t\t\t\tset_schemaXml: element.SchemaXml\n\t\t\t\t\t\t\t? element.SchemaXml.replace(/\\sID=\"{[^}]+}\"/, '')\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tset_staticName: element.StaticName,\n\t\t\t\t\t\tset_title: element[KEY_PROP],\n\t\t\t\t\t\tset_typeAsString: element.TypeAsString,\n\t\t\t\t\t\tset_validationFormula: element.ValidationFormula || undefined,\n\t\t\t\t\t\tset_validationMessage: element.ValidationMessage || undefined\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t\tswitchCase(constant(Type))({\n\t\t\t\t\tText: castTo(SP.FieldText),\n\t\t\t\t\tNote: pipe([\n\t\t\t\t\t\tcastTo(SP.FieldMultiLineText),\n\t\t\t\t\t\toverstep(ifThen(constant(RichText))([method('set_richText')(true)]))\n\t\t\t\t\t]),\n\t\t\t\t\tLikes: castTo(SP.FieldNumber),\n\t\t\t\t\tNumber: castTo(SP.FieldNumber),\n\t\t\t\t\tBoolean: castTo(SP.Field),\n\t\t\t\t\tChoice: castTo(AllowMultipleValues ? SP.FieldMultiChoice : SP.FieldChoice),\n\t\t\t\t\tDateTime: castTo(SP.FieldDateTime),\n\t\t\t\t\tURL: castTo(SP.FieldUrl),\n\t\t\t\t\tRatingCount: castTo(SP.FieldRatingScale),\n\t\t\t\t\tAverageRating: castTo(SP.FieldRatingScale),\n\t\t\t\t\tLookup: pipe([\n\t\t\t\t\t\tcastTo(SP.FieldLookup),\n\t\t\t\t\t\toverstep(\n\t\t\t\t\t\t\tpipe([\n\t\t\t\t\t\t\t\tmethod('set_lookupWebId')(LookupWebId),\n\t\t\t\t\t\t\t\tmethod('set_lookupList')(LookupList),\n\t\t\t\t\t\t\t\tmethod('set_lookupField')(LookupField),\n\t\t\t\t\t\t\t\tifThen(constant(AllowMultipleValues))([method('set_allowMultipleValues')(true)])\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t)\n\t\t\t\t\t]),\n\t\t\t\t\tLookupMulti: pipe([\n\t\t\t\t\t\tcastTo(SP.FieldLookup),\n\t\t\t\t\t\toverstep(\n\t\t\t\t\t\t\tpipe([\n\t\t\t\t\t\t\t\tmethod('set_lookupWebId')(LookupWebId),\n\t\t\t\t\t\t\t\tmethod('set_lookupList')(LookupList),\n\t\t\t\t\t\t\t\tmethod('set_lookupField')(LookupField),\n\t\t\t\t\t\t\t\tmethod('set_allowMultipleValues')(true)\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t)\n\t\t\t\t\t]),\n\t\t\t\t\tUser: pipe([\n\t\t\t\t\t\tcastTo(SP.FieldUser),\n\t\t\t\t\t\toverstep(ifThen(constant(AllowMultipleValues))([method('set_allowMultipleValues')(true)]))\n\t\t\t\t\t]),\n\t\t\t\t\tUserMulti: pipe([castTo(SP.FieldUser), overstep(method('set_allowMultipleValues')(true))])\n\t\t\t\t}),\n\t\t\t\toverstep(ifThen(isExists)([methodEmpty('update')]))\n\t\t\t])(SchemaXml)\n\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync\tupdate(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tif (!isStrictUrl(element[KEY_PROP])) return undefined\n\t\t\tconst { MaxLength, Title } = element\n\t\t\tconst spObject = pipe([\n\t\t\t\tsetFields({\n\t\t\t\t\tset_defaultValue: element.DefaultValue,\n\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\tset_direction: element.Direction,\n\t\t\t\t\tset_enforceUniqueValues: element.EnforceUniqueValues,\n\t\t\t\t\tset_fieldTypeKind: element.FieldTypeKind,\n\t\t\t\t\tset_group: element.Group,\n\t\t\t\t\tset_hidden: element.Hidden,\n\t\t\t\t\tset_indexed: element.Indexed,\n\t\t\t\t\tset_jsLink: element.JsLink,\n\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\tset_readOnlyField: element.ReadOnlyField,\n\t\t\t\t\tset_required: element.Required,\n\t\t\t\t\tset_schemaXml: element.SchemaXml,\n\t\t\t\t\tset_staticName: element.StaticName,\n\t\t\t\t\tset_title: element[KEY_PROP],\n\t\t\t\t\tset_typeAsString: element.TypeAsString,\n\t\t\t\t\tset_validationFormula: element.ValidationFormula,\n\t\t\t\t\tset_validationMessage: element.ValidationMessage\n\t\t\t\t}),\n\t\t\t\toverstep(\n\t\t\t\t\tpipe([\n\t\t\t\t\t\tifThen(constant(element.MaxLength))([\n\t\t\t\t\t\t\tmethod('set_schemaXml')(\n\t\t\t\t\t\t\t\t`<Field Type=\"Text\" DisplayName=\"${Title}\" MaxLength=\"${MaxLength}\"/>`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tmethodEmpty('update')\n\t\t\t\t\t])\n\t\t\t\t)\n\t\t\t])(this.getSPObject(element[KEY_PROP], clientContext))\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync\tdelete(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementTitle = element[KEY_PROP]\n\t\t\tif (!isStrictUrl(elementTitle)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementTitle, clientContext)\n\t\t\tspObject.deleteObject()\n\t\t\treturn elementTitle\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('delete', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(elementTitle, clientContext) {\n\t\treturn this.getSPObjectCollection(clientContext)[\n\t\t\tisGUID(elementTitle)\n\t\t\t\t? 'getById'\n\t\t\t\t: 'getByInternalNameOrTitle'\n\t\t](elementTitle)\n\t}\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent.getSPObject(this.listUrl, clientContext).get_fields()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\tlistReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tof(columns) {\n\t\treturn getInstance(this.constructor)(this.parent, columns)\n\t}\n}\nexport default getInstance(Column)\n","import {\n\tpipe, filter, fix, constant, isExists\n} from './utility'\n\nconst cache = {}\n\nconst cacheCombinator = f => fix(f)(cache)\nconst filterNotEmpty = filter(isExists)\n\nexport const get = pipe([\n\tfilterNotEmpty,\n\tcacheCombinator(fR => base => ([h, ...t]) => (t.length ? (base[h] ? fR(base[h])(t) : null) : base[h]))\n])\n\n/* eslint no-param-reassign:1 */\nexport const set = spObjects => pipe([\n\tfilterNotEmpty,\n\tcacheCombinator(fR => base => ([h, ...t]) => {\n\t\tif (t.length) {\n\t\t\tif (!base[h]) base[h] = {}\n\t\t\treturn fR(base[h])(t)\n\t\t}\n\t\tbase[h] = spObjects\n\t\treturn spObjects\n\t}),\n\tconstant(spObjects)\n])\n\nexport const unset = pipe([\n\tfilterNotEmpty,\n\tcacheCombinator(\n\t\tfR => base => ([h, ...t]) => {\n\t\t\tif (t.length) {\n\t\t\t\treturn base[h] ? fR(base[h])(t) : undefined\n\t\t\t}\n\t\t\treturn base ? delete base[h] : undefined\n\t\t}\n\t)\n])\n\nexport const inspect = () => cache\n","/* eslint class-methods-use-this:0 */\nimport {\n\t// REQUEST_LIST_FOLDER_CREATE_BUNDLE_MAX_SIZE,\n\tREQUEST_LIST_FOLDER_UPDATE_BUNDLE_MAX_SIZE,\n\tREQUEST_LIST_FOLDER_DELETE_BUNDLE_MAX_SIZE,\n\tAbstractBox,\n\tgetInstance,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tgetInstanceEmpty,\n\tsetItem,\n\thasUrlTailSlash,\n\tmethodEmpty,\n\tgetSPFolderByUrl,\n\tpipe,\n\tpopSlash,\n\tgetListRelativeUrl,\n\tswitchType,\n\tremoveEmptyUrls,\n\tremoveDuplicatedUrls,\n\tshiftSlash,\n\tmergeSlashes,\n\thasProp,\n\tlistReport,\n\tgetTitleFromUrl,\n\tisStrictUrl,\n\tdeep1Iterator,\n\tgetClientContext,\n\texecuteJSOM,\n\tidentity,\n\tfix,\n\tisObject,\n\tisString,\n\turlSplit,\n\tisArray,\n\tisObjectFilled,\n\treduce,\n\tifThen,\n\tisNotError,\n\tisDefined,\n\tisUndefined\n} from '../lib/utility'\nimport * as cache from '../lib/cache'\n\nconst KEY_PROP = 'Url'\n\nconst arrayValidator = pipe([removeEmptyUrls, removeDuplicatedUrls])\n\nconst buildFolderTree = (acc = {}) => element => {\n\tlet folder\n\tif (isObject(element)) {\n\t\tconst { Folder, Columns = {} } = element\n\t\tfolder = Folder || Columns.Folder\n\t} else if (isString(element)) {\n\t\tfolder = element\n\t}\n\tconst folders = pipe([popSlash, shiftSlash, urlSplit])(folder)\n\tmutateObjectTreeFromArray(acc)()(folders)\n\treturn acc\n}\n\nconst mutateObjectTreeFromArray = b => parentName => ([h, ...t]) => {\n\tconst base = b\n\tconst currentName = parentName ? `${parentName}/${h}` : h\n\tif (t.length) {\n\t\tif (!base[currentName]) base[currentName] = {}\n\t\treturn mutateObjectTreeFromArray(base[currentName])(currentName)(t)\n\t}\n\tif (!base[currentName]) base[currentName] = {}\n\treturn base\n}\n\nconst buildFoldersTree = ifThen(isArray)([reduce(buildFolderTree)(), buildFolderTree()])\n\n\nconst lifter = switchType({\n\tobject: context => {\n\t\tconst newContext = Object.assign({}, context)\n\t\tif (isUndefined(context[KEY_PROP])) newContext[KEY_PROP] = context.ServerRelativeUrl || context.FileRef\n\t\tif (isUndefined(context.ServerRelativeUrl)) newContext.ServerRelativeUrl = context[KEY_PROP] || context.FileRef\n\t\treturn newContext\n\t},\n\tstring: (contextUrl = '') => {\n\t\tconst url = contextUrl === '/' ? '/' : shiftSlash(mergeSlashes(contextUrl))\n\t\treturn {\n\t\t\t[KEY_PROP]: url,\n\t\t\tServerRelativeUrl: url\n\t\t}\n\t},\n\tdefault: () => ({\n\t\t[KEY_PROP]: '',\n\t\tServerRelativeUrl: ''\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.joinProp = 'ServerRelativeUrl'\n\t}\n}\n\nclass FolderList {\n\tconstructor(parent, folders) {\n\t\tthis.name = 'folder'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(folders)\n\t\tthis.hasColumns = this.box.some(hasProp('Columns'))\n\t\tthis.contextUrl = parent.parent.box.getHeadPropValue()\n\t\tthis.listUrl = parent.box.getHeadPropValue()\n\t\tthis.count = this.box.getCount()\n\n\t\tthis.iterator = bundleSize => deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box,\n\t\t\tbundleSize\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator()(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tconst isCollection = hasUrlTailSlash(elementUrl)\n\t\t\tconst spObject = isCollection\n\t\t\t\t? this.getSPObjectCollection(elementUrl, clientContext)\n\t\t\t\t: this.getSPObject(elementUrl, clientContext)\n\t\t\treturn load(clientContext, spObject, options)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\treturn prepareResponseJSOM(result, options)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst { asItem } = opts\n\t\tconst getRelativeUrl = getListRelativeUrl(contextUrl)(listUrl)\n\t\tconst options = asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tif (this.hasColumns) {\n\t\t\tawait this.cacheColumns()\n\t\t}\n\n\t\tconst foldersMap = this.box.reduce(acc => el => {\n\t\t\tacc[getRelativeUrl(el)] = el\n\t\t\treturn acc\n\t\t}, {})\n\n\t\tconst filteredResult = []\n\n\t\tawait fix(fR => async b => {\n\t\t\tconst names = Object.keys(b)\n\n\t\t\tconst promises = []\n\t\t\tfor (let i = 0; i < names.length; i += 1) {\n\t\t\t\tconst name = names[i]\n\t\t\t\tconst element = foldersMap[name]\n\t\t\t\tlet elementUrl\n\t\t\t\tlet newColumns\n\n\t\t\t\tif (element) {\n\t\t\t\t\tconst { Columns } = element\n\t\t\t\t\telementUrl = getRelativeUrl(element)\n\t\t\t\t\tnewColumns = { ...Columns, Title: getTitleFromUrl(elementUrl) }\n\t\t\t\t} else {\n\t\t\t\t\telementUrl = name\n\t\t\t\t\tnewColumns = { Title: getTitleFromUrl(elementUrl) }\n\t\t\t\t}\n\n\t\t\t\tconst clientContext = getClientContext(contextUrl)\n\t\t\t\tif (!isStrictUrl(elementUrl)) return undefined\n\t\t\t\tconst itemCreationInfo = getInstanceEmpty(SP.ListItemCreationInformation)\n\t\t\t\titemCreationInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder)\n\t\t\t\titemCreationInfo.set_leafName(elementUrl)\n\t\t\t\tconst spObject = setItem(\n\t\t\t\t\tcache.get(['columns', contextUrl, listUrl]) || {}\n\t\t\t\t)(newColumns)(this.parent.getSPObject(listUrl, clientContext).addItem(itemCreationInfo))\n\t\t\t\tpromises.push(executeJSOM(clientContext, spObject.get_folder(), options).catch(identity))\n\t\t\t}\n\n\t\t\tconst result = prepareResponseJSOM(\n\t\t\t\t(await Promise.all(promises)).filter(isNotError),\n\t\t\t\topts\n\t\t\t)\n\n\t\t\tresult.reduce((acc, el) => {\n\t\t\t\tif (foldersMap[getRelativeUrl({\n\t\t\t\t\t[KEY_PROP]: el.ServerRelativeUrl || el.FileRef\n\t\t\t\t})]) acc.push(el)\n\t\t\t\treturn acc\n\t\t\t}, filteredResult)\n\t\t\treturn Promise.all(names.map(async name => {\n\t\t\t\tconst o = b[name]\n\t\t\t\treturn isObjectFilled(o) && fR(o)\n\t\t\t}))\n\t\t})(buildFoldersTree(this.box.getIterable().map(getRelativeUrl)))\n\n\t\tlistReport('create', {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: getInstance(Box)(filteredResult),\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\n\t\treturn this.box.isArray() ? filteredResult : filteredResult[0]\n\t}\n\n\tasync update(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tawait this.cacheColumns()\n\t\tconst { clientContexts, result } = await this.iterator(\n\t\t\tREQUEST_LIST_FOLDER_UPDATE_BUNDLE_MAX_SIZE\n\t\t)(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tconst { Columns = {}, WelcomePage } = element\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tif (isObjectFilled(Columns)) {\n\t\t\t\tsetItem(cache.get(['columns', contextUrl, listUrl]))(Object.assign({}, Columns))(\n\t\t\t\t\tspObject.get_listItemAllFields()\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (isDefined(WelcomePage)) {\n\t\t\t\tspObject.set_welcomePage(WelcomePage)\n\t\t\t\tspObject.update()\n\t\t\t}\n\t\t\treturn load(clientContext, spObject, options)\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { noRecycle } = opts\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(\n\t\t\tREQUEST_LIST_FOLDER_DELETE_BUNDLE_MAX_SIZE\n\t\t)(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tif (!isStrictUrl(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tif (!spObject.isRoot) methodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(elementUrl, clientContext) {\n\t\tlet folder\n\t\tconst parentSPObject = this.parent.getSPObject(this.listUrl, clientContext)\n\t\tif (elementUrl) {\n\t\t\tfolder = getSPFolderByUrl(elementUrl)(parentSPObject.get_rootFolder())\n\t\t} else {\n\t\t\tconst rootFolder = parentSPObject.get_rootFolder()\n\t\t\trootFolder.isRoot = true\n\t\t\tfolder = rootFolder\n\t\t}\n\t\treturn folder\n\t}\n\n\tgetSPObjectCollection(elementUrl, clientContext) {\n\t\treturn this.getSPObject(popSlash(elementUrl), clientContext).get_folders()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\tlistReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tasync cacheColumns() {\n\t\tconst { contextUrl, listUrl } = this\n\t\tif (!cache.get(['columns', contextUrl, listUrl])) {\n\t\t\tconst columns = await this\n\t\t\t\t.parent\n\t\t\t\t.column()\n\t\t\t\t.get({\n\t\t\t\t\tview: ['TypeAsString', 'InternalName', 'Title', 'Sealed'],\n\t\t\t\t\tmapBy: 'InternalName'\n\t\t\t\t})\n\t\t\tcache.set(columns)(['columns', contextUrl, listUrl])\n\t\t}\n\t}\n\n\tof(folders) {\n\t\treturn getInstance(this.constructor)(this.parent, folders)\n\t}\n}\n\nexport default getInstance(FolderList)\n","/* eslint class-methods-use-this:0 */\nimport axios from 'axios'\nimport {\n\tACTION_TYPES,\n\tLIBRARY_STANDART_COLUMN_NAMES,\n\tAbstractBox,\n\tgetInstance,\n\tmethodEmpty,\n\tprepareResponseJSOM,\n\tgetClientContext,\n\tload,\n\texecutorJSOM,\n\tconvertFileContent,\n\tsetFields,\n\thasUrlTailSlash,\n\tisArray,\n\tmergeSlashes,\n\tgetFolderFromUrl,\n\tgetFilenameFromUrl,\n\texecutorREST,\n\tprepareResponseREST,\n\tisExists,\n\tgetSPFolderByUrl,\n\tpopSlash,\n\tidentity,\n\tgetInstanceEmpty,\n\texecuteJSOM,\n\tisObject,\n\tsetItem,\n\tifThen,\n\tjoin,\n\tgetListRelativeUrl,\n\tlistReport,\n\tswitchType,\n\tshiftSlash,\n\tpipe,\n\tremoveEmptyUrls,\n\tremoveDuplicatedUrls,\n\tisUndefined,\n\tisBlob,\n\thasUrlFilename,\n\tremoveEmptyFilenames,\n\tisObjectFilled,\n\tdeep1Iterator,\n\tdeep1IteratorREST,\n\tgetRequestDigest,\n\tgetParentUrl,\n\tgetWebRelativeUrl\n} from '../lib/utility'\nimport * as cache from '../lib/cache'\n\nconst KEY_PROP = 'Url'\n\nasync function copyOrMove(isMove, opts = {}) {\n\tconst { contextUrl, listUrl } = this\n\tawait this.iteratorREST(async ({ element }) => {\n\t\tconst { To, OnlyContent } = element\n\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\tif (!hasUrlFilename(elementUrl)) return\n\t\tlet targetWebUrl\n\t\tlet targetListUrl\n\t\tlet targetFileUrl\n\t\tif (isObject(To)) {\n\t\t\ttargetWebUrl = To.WebUrl || contextUrl\n\t\t\ttargetListUrl = To.ListUrl\n\t\t\ttargetFileUrl = getListRelativeUrl(To.WebUrl)(To.ListUrl)(To) || ''\n\t\t} else {\n\t\t\ttargetWebUrl = contextUrl\n\t\t\ttargetListUrl = listUrl\n\t\t\ttargetFileUrl = To\n\t\t}\n\n\t\tif (!targetWebUrl) throw new Error('Target WebUrl is missed')\n\t\tif (!targetListUrl) throw new Error('Target ListUrl is missed')\n\t\tif (!elementUrl) throw new Error('Source file Url is missed')\n\t\tconst spxSourceList = this.parent.of(listUrl)\n\t\tconst spxSourceFile = spxSourceList.file(elementUrl)\n\t\tconst spxTargetList = this.parent.parent.of(targetWebUrl).library(targetListUrl)\n\t\tconst fullTargetFileUrl = hasUrlFilename(targetFileUrl)\n\t\t\t? targetFileUrl\n\t\t\t: `${targetFileUrl}/${getFilenameFromUrl(elementUrl)}`\n\t\tconst columnsToUpdate = {}\n\t\tconst existedColumnsToUpdate = {}\n\t\tif (!OnlyContent) {\n\t\t\tconst sourceFileData = await spxSourceFile.get({ asItem: true })\n\t\t\tconst keys = Reflect.ownKeys(sourceFileData)\n\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\tconst columnName = keys[i]\n\t\t\t\tif (!LIBRARY_STANDART_COLUMN_NAMES[columnName] && sourceFileData[columnName] !== null) {\n\t\t\t\t\tcolumnsToUpdate[columnName] = sourceFileData[columnName]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Object.keys(columnsToUpdate).length) {\n\t\t\t\tconst columnKeys = Reflect.ownKeys(columnsToUpdate)\n\t\t\t\tfor (let i = 0; i < columnKeys.length; i += 1) {\n\t\t\t\t\tconst columnName = columnKeys[i]\n\t\t\t\t\texistedColumnsToUpdate[columnName] = sourceFileData[columnName]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!opts.forced && contextUrl === targetWebUrl) {\n\t\t\tconst clientContext = getClientContext(contextUrl)\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tconst folder = getFolderFromUrl(targetFileUrl)\n\t\t\tif (folder) {\n\t\t\t\tawait this\n\t\t\t\t\t.parent\n\t\t\t\t\t.folder(folder)\n\t\t\t\t\t.create({ silentInfo: true, expanded: true, view: ['Name'] })\n\t\t\t\t\t.catch(identity)\n\t\t\t}\n\t\t\tspObject[isMove ? 'moveTo' : 'copyTo'](mergeSlashes(`${targetListUrl}/${fullTargetFileUrl}`))\n\t\t\tawait executeJSOM(clientContext, spObject, opts)\n\t\t\tawait spxTargetList\n\t\t\t\t.file({ [KEY_PROP]: targetFileUrl, Columns: existedColumnsToUpdate })\n\t\t\t\t.update({ silentInfo: true })\n\t\t} else {\n\t\t\tawait spxTargetList\n\t\t\t\t.file({\n\t\t\t\t\t[KEY_PROP]: fullTargetFileUrl,\n\t\t\t\t\tContent: await spxSourceList.file(elementUrl).get({ asBlob: true }),\n\t\t\t\t\tOnProgress: element.OnProgress,\n\t\t\t\t\tOverwrite: element.Overwrite,\n\t\t\t\t\tColumns: existedColumnsToUpdate\n\t\t\t\t})\n\t\t\t\t.create({ silentInfo: true })\n\t\t\tif (isMove) await spxSourceFile.delete()\n\t\t}\n\t})\n\n\tconsole.log(`${ACTION_TYPES[isMove ? 'move' : 'copy']} ${this.count} ${this.name}(s)`)\n}\n\nconst arrayValidator = pipe([removeEmptyUrls, removeDuplicatedUrls])\n\nconst lifter = switchType({\n\tobject: context => {\n\t\tconst newContext = Object.assign({}, context)\n\t\tconst name = context.Content ? context.Content.name : undefined\n\t\tif (!context[KEY_PROP]) newContext[KEY_PROP] = context.ServerRelativeUrl || context.FileRef || name\n\t\tif (!context.ServerRelativeUrl) newContext.ServerRelativeUrl = context[KEY_PROP] || context.FileRef\n\t\treturn newContext\n\t},\n\tstring: (contextUrl = '') => {\n\t\tconst url = contextUrl === '/' ? '/' : shiftSlash(mergeSlashes(contextUrl))\n\t\treturn {\n\t\t\t[KEY_PROP]: url,\n\t\t\tServerRelativeUrl: url\n\t\t}\n\t},\n\tdefault: () => ({\n\t\t[KEY_PROP]: '',\n\t\tServerRelativeUrl: ''\n\t})\n})\n\nasync function createWithRESTFromString(element, opts = {}) {\n\tconst { needResponse } = opts\n\tconst { Content = '', Overwrite = true, Columns } = element\n\tconst { contextUrl, listUrl } = this\n\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\tconst filename = getFilenameFromUrl(elementUrl)\n\tconst filesUrl = this.getRESTObjectCollection(elementUrl, listUrl, contextUrl)\n\tawait axios({\n\t\turl: `${filesUrl}/add(url='${filename}',overwrite=${Overwrite})`,\n\t\theaders: {\n\t\t\tAccept: 'application/json;odata=verbose',\n\t\t\t'Content-Type': 'application/json;odata=verbose',\n\t\t\t'X-RequestDigest': await getRequestDigest()\n\t\t},\n\t\tmethod: 'POST',\n\t\tdata: Content\n\t})\n\n\tlet response = element\n\n\tif (Columns) {\n\t\tresponse = await this\n\t\t\t.of({ [KEY_PROP]: elementUrl, Columns })\n\t\t\t.update({ ...opts, silentInfo: true })\n\t} else if (needResponse) {\n\t\tresponse = await this\n\t\t\t.of(elementUrl)\n\t\t\t.get(opts)\n\t}\n\n\treturn response\n}\n\nasync function createWithRESTFromBlob(element, opts = {}) {\n\tconst { needResponse, silent, silentErrors } = opts\n\tconst {\n\t\tContent = '',\n\t\tOverwrite = true,\n\t\tOnProgress = identity,\n\t\tFolder = '',\n\t\tColumns\n\t} = element\n\tconst { contextUrl, listUrl } = this\n\n\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\tconst folder = Folder || getFolderFromUrl(elementUrl)\n\tconst filename = elementUrl ? getFilenameFromUrl(elementUrl) : Content.name\n\tconst requiredInputs = {\n\t\t__REQUESTDIGEST: true,\n\t\t__VIEWSTATE: true,\n\t\t__EVENTVALIDATION: true\n\t}\n\n\tconst inputs = []\n\tconst listGUID = cache.get(['listGUIDs', contextUrl, listUrl])\n\tconst listFormMatches = cache.get(['listFormMatches', contextUrl, listUrl])\n\tconst inputRE = /<input[^<]*\\/>/g\n\tlet founds = inputRE.exec(listFormMatches)\n\n\twhile (founds) {\n\t\tconst item = founds[0]\n\t\tconst id = item.match(/id=\"([^\"]+)\"/)[1]\n\t\tif (requiredInputs[id]) {\n\t\t\tinputs.push(item)\n\t\t}\n\t\tfounds = inputRE.exec(listFormMatches)\n\t}\n\n\tconst form = window.document.createElement('form')\n\tform.innerHTML = join('')(inputs)\n\tconst formData = new FormData(form)\n\tformData.append('__EVENTTARGET', 'ctl00$PlaceHolderMain$ctl03$RptControls$btnOK')\n\tformData.append('ctl00$PlaceHolderMain$ctl04$ctl01$uploadLocation', `/${folder.replace(/^\\//, '')}`)\n\tif (Overwrite) formData.append('ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle', true)\n\tformData.append('ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$InputFile', Content, filename)\n\n\tconst response = await axios({\n\t\turl: `/${contextUrl}/_layouts/15/UploadEx.aspx?List={${listGUID}}`,\n\t\tmethod: 'POST',\n\t\tdata: formData,\n\t\tonUploadProgress: e => OnProgress(Math.floor((e.loaded * 100) / e.total))\n\t})\n\n\tconst errorMsgMatches = response.data.match(/id=\"ctl00_PlaceHolderMain_LabelMessage\">([^<]*)<\\/span>/)\n\tlet res = { [KEY_PROP]: elementUrl }\n\tif (isArray(errorMsgMatches)) {\n\t\tif (!silent && !silentErrors) console.error(errorMsgMatches[1])\n\t} else if (isObjectFilled(Columns)) {\n\t\tres = await this.of({ [KEY_PROP]: elementUrl, Columns }).update({ ...opts, silentInfo: true })\n\t} else if (needResponse) {\n\t\tres = await this.of({ [KEY_PROP]: elementUrl }).get(opts)\n\t}\n\treturn res\n}\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.joinProp = 'ServerRelativeUrl'\n\t}\n\n\tgetCount() {\n\t\treturn this.isArray() ? removeEmptyFilenames(this.value).length : hasUrlFilename(this.value[this.prop]) ? 1 : 0\n\t}\n}\n\nclass FileList {\n\tconstructor(parent, files) {\n\t\tthis.name = 'file'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(files)\n\t\tthis.count = this.box.getCount()\n\t\tthis.contextUrl = parent.parent.box.getHeadPropValue()\n\t\tthis.listUrl = parent.box.getHeadPropValue()\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\n\t\tthis.iteratorREST = deep1IteratorREST({\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tif (opts.asBlob) {\n\t\t\tconst result = await this.iteratorREST(({ element }) => {\n\t\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\t\treturn executorREST(contextUrl, {\n\t\t\t\t\turl: `${this.getRESTObject(elementUrl, listUrl, contextUrl)}/$value`,\n\t\t\t\t\tbinaryStringResponseBody: true\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn prepareResponseREST(result, opts)\n\t\t}\n\t\tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tconst spObject = isExists(elementUrl) && hasUrlTailSlash(elementUrl)\n\t\t\t\t? this.getSPObjectCollection(elementUrl, clientContext)\n\t\t\t\t: this.getSPObject(elementUrl, clientContext)\n\t\t\treturn load(clientContext, spObject, options)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\treturn prepareResponseJSOM(result, options)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tif (!cache.get(['listGUIDs', contextUrl, listUrl])) {\n\t\t\tconst listProps = await this\n\t\t\t\t.parent\n\t\t\t\t.of(listUrl)\n\t\t\t\t.get({ view: 'Id' })\n\t\t\tcache.set(listProps.Id.toString())(['listGUIDs', contextUrl, listUrl])\n\t\t}\n\t\tif (!cache.get(['listFormMatches', contextUrl, listUrl])) {\n\t\t\tconst listForms = await axios.get(\n\t\t\t\t`/${contextUrl}/_layouts/15/Upload.aspx?List={${cache.get(['listGUIDs', contextUrl, listUrl])}}`\n\t\t\t)\n\t\t\tcache.set(listForms.data.match(/<form(\\w|\\W)*<\\/form>/))(['listFormMatches', contextUrl, listUrl])\n\t\t}\n\n\t\tconst foldersToCreate = this.box.reduce(acc => el => {\n\t\t\tconst { Folder } = el\n\t\t\tconst folder = getParentUrl(getWebRelativeUrl(contextUrl)(el)) || Folder\n\t\t\tif (folder) acc.push(folder)\n\t\t\treturn acc\n\t\t})\n\n\t\tif (foldersToCreate.length) {\n\t\t\tawait this.parent.folder(foldersToCreate).get({ view: 'ServerRelativeUrl' }).catch(async () => {\n\t\t\t\tawait this.parent.folder(foldersToCreate).create({ silent: true })\n\t\t\t})\n\t\t}\n\n\t\tconst res = await this.iteratorREST(({ element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl) && (element.Content && !element.Content.name)) return undefined\n\t\t\treturn isBlob(element.Content)\n\t\t\t\t? createWithRESTFromBlob.call(this, element, opts)\n\t\t\t\t: createWithRESTFromString.call(this, element, opts)\n\t\t})\n\n\t\tlistReport('create', {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: getInstance(Box)(res),\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t\treturn res\n\t}\n\n\tasync update(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tawait this.cacheColumns()\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst { Content, Columns } = element\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tlet spObject\n\t\t\tif (isUndefined(Content)) {\n\t\t\t\tspObject = setItem(cache.get(['columns', contextUrl, listUrl]))(Object.assign({}, Columns))(\n\t\t\t\t\tthis.getSPObject(elementUrl, clientContext).get_listItemAllFields()\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tconst fieldsToUpdate = {}\n\t\t\t\tconst keys = Reflect.ownKeys(Columns)\n\t\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\t\tconst fieldName = keys[i]\n\t\t\t\t\tconst field = Columns[fieldName]\n\t\t\t\t\tfieldsToUpdate[fieldName] = ifThen(isArray)([join(';#;#')])(field)\n\t\t\t\t}\n\t\t\t\tconst binaryInfo = getInstanceEmpty(SP.FileSaveBinaryInformation)\n\t\t\t\tsetFields({\n\t\t\t\t\tset_content: convertFileContent(Content),\n\t\t\t\t\tset_fieldValues: fieldsToUpdate\n\t\t\t\t})(binaryInfo)\n\t\t\t\tspObject = this.getSPObject(elementUrl, clientContext)\n\t\t\t\tspObject.saveBinary(binaryInfo)\n\t\t\t\tspObject = spObject.get_listItemAllFields()\n\t\t\t}\n\t\t\treturn load(clientContext, spObject.get_file(), options)\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', options)\n\t\treturn prepareResponseJSOM(result, options)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tconst { noRecycle } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tmethodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync copy(opts) {\n\t\treturn copyOrMove.call(this, false, opts)\n\t}\n\n\tasync move(opts) {\n\t\treturn copyOrMove.call(this, true, opts)\n\t}\n\n\tgetSPObject(elementUrl, clientContext) {\n\t\tconst filename = getFilenameFromUrl(elementUrl)\n\t\tconst folder = getFolderFromUrl(elementUrl)\n\t\tconst rootSPFolder = this.getRootFolder(clientContext)\n\t\treturn folder\n\t\t\t? getSPFolderByUrl(folder)(rootSPFolder)\n\t\t\t\t.get_files()\n\t\t\t\t.getByUrl(filename)\n\t\t\t: rootSPFolder\n\t\t\t\t.get_files()\n\t\t\t\t.getByUrl(filename)\n\t}\n\n\tgetSPObjectCollection(elementUrl, clientContext) {\n\t\tconst folder = getFolderFromUrl(popSlash(elementUrl))\n\t\tconst rootSPFolder = this.getRootFolder(clientContext)\n\t\treturn folder\n\t\t\t? getSPFolderByUrl(folder)(rootSPFolder).get_files()\n\t\t\t: rootSPFolder.get_files()\n\t}\n\n\tgetRootFolder(clientContext) {\n\t\treturn this.parent.getSPObject(this.listUrl, clientContext).get_rootFolder()\n\t}\n\n\tgetRESTObject(elementUrl, listUrl, contextUrl) {\n\t\tlet url = elementUrl\n\t\tif (/'/.test(elementUrl)) {\n\t\t\turl = url.replace(/'/, '%27%27')\n\t\t}\n\t\treturn mergeSlashes(\n\t\t\t`${this.getRESTObjectCollection(elementUrl, listUrl, contextUrl)\n\t\t\t}/getbyurl('${getFilenameFromUrl(url)\n\t\t\t}')`\n\t\t)\n\t}\n\n\tgetRESTObjectCollection(elementUrl, listUrl, contextUrl) {\n\t\tconst folder = getFolderFromUrl(elementUrl)\n\t\tlet folderUrl = ''\n\t\tif (folder) {\n\t\t\tconst folders = mergeSlashes(folder).split('/')\n\t\t\tfolderUrl = folders.reduce((acc, el) => `${acc}/folders/getbyurl('${el}')`, '')\n\t\t}\n\n\t\treturn mergeSlashes(\n\t\t\t`/${contextUrl}/_api/web/lists/getbytitle('${listUrl}')/rootfolder${folderUrl}/files`\n\t\t)\n\t}\n\n\treport(actionType, opts = {}) {\n\t\tlistReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tasync cacheColumns() {\n\t\tconst { contextUrl, listUrl } = this\n\t\tif (!cache.get(['columns', contextUrl, listUrl])) {\n\t\t\tconst columns = await this\n\t\t\t\t.parent\n\t\t\t\t.column()\n\t\t\t\t.get({\n\t\t\t\t\tview: ['TypeAsString', 'InternalName', 'Title', 'Sealed'],\n\t\t\t\t\tmapBy: 'InternalName'\n\t\t\t\t})\n\t\t\tcache.set(columns)(['columns', contextUrl, listUrl])\n\t\t}\n\t}\n\n\tof(files) {\n\t\treturn getInstance(this.constructor)(this.parent, files)\n\t}\n}\n\nexport default getInstance(FileList)\n\n\n// async function createWithJSOM(opts = {}) {\n// \tlet needToRetry\n// \tlet isError\n// \tconst { contextUrl, listUrl } = this\n// \tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\n// \tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n// \t\tconst { Content = '', Columns = {}, Overwrite = true } = element\n// \t\tconst elementUrl = getListRelativeUrl(contextUrl)(listUrl)(element)\n// \t\tif (!hasUrlFilename(elementUrl)) return undefined\n// \t\tconst spObjects = this.getSPObjectCollection(elementUrl, clientContext)\n// \t\tconst fileCreationInfo = getInstanceEmpty(SP.FileCreationInformation)\n// \t\tsetFields({\n// \t\t\tset_url: `/${contextUrl}/${listUrl}/${elementUrl}`,\n// \t\t\tset_content: '',\n// \t\t\tset_overwrite: Overwrite\n// \t\t})(fileCreationInfo)\n// \t\tconst spObject = spObjects.add(fileCreationInfo)\n// \t\tconst fieldsToCreate = {}\n// \t\tif (isObjectFilled(Columns)) {\n// \t\t\tconst props = Reflect.ownKeys(Columns)\n// \t\t\tfor (let i = 0; i < props.length; i += 1) {\n// \t\t\t\tconst prop = props[i]\n// \t\t\t\tconst fieldName = Columns[prop]\n// \t\t\t\tconst field = Columns[fieldName]\n// \t\t\t\tfieldsToCreate[fieldName] = ifThen(isArray)([join(';#;#')])(field)\n// \t\t\t}\n// \t\t}\n// \t\tconst binaryInfo = getInstanceEmpty(SP.FileSaveBinaryInformation)\n// \t\tsetFields({\n// \t\t\tset_content: convertFileContent(Content),\n// \t\t\tset_fieldValues: fieldsToCreate\n// \t\t})(binaryInfo)\n// \t\tspObject.saveBinary(binaryInfo)\n// \t\treturn load(clientContext, spObject, options)\n// \t})\n// \tif (this.count) {\n// \t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n// \t\t\tconst clientContext = clientContexts[i]\n// \t\t\tawait executorJSOM(clientContext).catch(async () => {\n// \t\t\t\tisError = true\n// \t\t\t\tneedToRetry = await createUnexistedFolder.call(this)\n// \t\t\t})\n// \t\t\tif (needToRetry) break\n// \t\t}\n// \t}\n// \tif (needToRetry) {\n// \t\treturn createWithJSOM.call(this, options)\n// \t}\n// \tif (isError) {\n// \t\tthrow new Error('can\\'t create file(s)')\n// \t} else {\n// \t\tthis.report('create', options)\n// \t\treturn prepareResponseJSOM(result, options)\n// \t}\n// }\n","/* eslint-disable default-case */\n/* eslint class-methods-use-this:0 */\n/* eslint no-underscore-dangle:0 */\n/* eslint prefer-destructuring:0 */\nimport {\n\tgetClientContext,\n\texecuteJSOM,\n\tprepareResponseJSOM,\n\tflatten,\n\tisArray,\n\tisNumberFilled,\n\treduce,\n\tgetInstance,\n\tisPropExists,\n\tisObject\n} from '../lib/utility'\n\nimport { concatQueries } from '../lib/query-parser'\n\nlet defaultList\nlet customList\nlet customIdColumn\nlet customNameColumn = 'Title'\nlet customLoginColumn = 'Login'\nlet customEmailColumn = 'Email'\nlet customQuery\n\nclass User {\n\tconstructor(parent, users, isSP) {\n\t\tthis.name = 'user'\n\t\tthis.parent = parent\n\t\tthis.isArray = isArray(users)\n\t\tthis.users = users ? (this.isArray ? flatten(users) : [users]) : []\n\t\tthis.isSP = isSP\n\t\tthis.isNative = this.isSP || (!customList || !customIdColumn)\n\n\t\tif (!defaultList) {\n\t\t\tdefaultList = parent.of().list('User Information List')\n\t\t}\n\t}\n\n\tasync get(opts) {\n\t\tif (this.users.length) {\n\t\t\tconst el = this.users[0]\n\n\t\t\tif (isObject(el)) {\n\t\t\t\treturn isPropExists(customIdColumn)(el)\n\t\t\t\t\t? this.getByUid(opts)\n\t\t\t\t\t: isPropExists(customLoginColumn)(el)\n\t\t\t\t\t\t? this.getByName(opts)\n\t\t\t\t\t\t: isPropExists(customEmailColumn)(el)\n\t\t\t\t\t\t\t? this.getByEMail(opts)\n\t\t\t\t\t\t\t: isPropExists(customLoginColumn)(el)\n\t\t\t\t\t\t\t\t? this.getByLogin(opts)\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\treturn el === '/'\n\t\t\t\t? this.getAll(opts)\n\t\t\t\t: isNumberFilled(el)\n\t\t\t\t\t? this.getByUid(opts)\n\t\t\t\t\t: /[а-яА-ЯЁё\\s]/.test(el)\n\t\t\t\t\t\t? this.getByName(opts)\n\t\t\t\t\t\t: /\\S+@\\S+\\.\\S+/.test(el)\n\t\t\t\t\t\t\t? this.getByEMail(opts)\n\t\t\t\t\t\t\t: this.getByLogin(opts)\n\t\t}\n\t\treturn this.getCurrent(opts)\n\t}\n\n\tasync getCurrent(opts = {}) {\n\t\tif (this.isSP || !customList) {\n\t\t\tconst clientContext = getClientContext('/')\n\t\t\tconst spUser = clientContext.get_web().get_currentUser()\n\t\t\treturn prepareResponseJSOM(await executeJSOM(clientContext, spUser, opts), opts)\n\t\t}\n\t\tconst userId = window._spPageContextInfo\n\t\t\t? window._spPageContextInfo.userId\n\t\t\t: (await this.of(null, true).getCurrent({ view: 'Id' })).Id\n\t\treturn (await customList.item(`Number ${customIdColumn} Eq ${userId}`).get(opts))[0]\n\t}\n\n\tasync getByUid(opts = {}) {\n\t\tconst userIds = reduce(acc => item => {\n\t\t\tswitch (item.constructor.getName()) {\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Number':\n\t\t\t\t\tacc.push(item)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Object': {\n\t\t\t\t\tconst value = item[this.isNative ? 'ID' : customIdColumn]\n\t\t\t\t\tif (value) acc.push(value)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'SP.FieldUserValue':\n\t\t\t\t\tacc.push(item.get_lookupId())\n\t\t\t\t\tbreak\n\t\t\t\tcase 'SP.ListItem': {\n\t\t\t\t\tconst userId = item.get_item(this.isNative ? 'ID' : customIdColumn)\n\t\t\t\t\tif (userId) acc.push(userId)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc\n\t\t})([])(this.users)\n\t\tconst query = `Number ${customIdColumn} In ${userIds}`\n\t\tconst users = this.isNative\n\t\t\t? defaultList.item(userIds)\n\t\t\t: customList.item(customQuery ? concatQueries('and')([customQuery, query]) : query)\n\t\tconst elements = await users.get(opts)\n\t\treturn this.isArray || elements.length > 1 ? elements : elements[0]\n\t}\n\n\tasync getByLogin(opts = {}) {\n\t\tlet isByName = false\n\t\tconst userLogins = reduce(acc => item => {\n\t\t\tswitch (item.constructor.getName()) {\n\t\t\t\tcase 'String':\n\t\t\t\t\tif (/\\|/.test(item)) isByName = true\n\t\t\t\t\tacc.push(item)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Object': {\n\t\t\t\t\tconst userName = item.UserName\n\t\t\t\t\tif (!userName) isByName = true\n\t\t\t\t\tacc.push(this.isNative\n\t\t\t\t\t\t? (userName || item.Name)\n\t\t\t\t\t\t: item.customLoginColumn)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'SP.ListItem': {\n\t\t\t\t\tconst userName = item.get_item('UserName')\n\t\t\t\t\tif (!userName) isByName = true\n\t\t\t\t\tacc.push(this.isNative\n\t\t\t\t\t\t? (userName || item.get_item('Name'))\n\t\t\t\t\t\t: item.get_item(customLoginColumn))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc\n\t\t})([])(this.users)\n\t\tconst query = `${customLoginColumn} In ${userLogins}`\n\t\tconst users = this.isNative\n\t\t\t? defaultList.item(`${isByName ? 'Name' : 'UserName'} In ${userLogins}`)\n\t\t\t: customList.item(customQuery ? concatQueries('and')([customQuery, query]) : query)\n\t\tconst elements = await users.get(opts)\n\t\treturn this.isArray || elements.length > 1 ? elements : elements[0]\n\t}\n\n\tasync getByName(opts = {}) {\n\t\tconst userNames = reduce(acc => item => {\n\t\t\tswitch (item.constructor.getName()) {\n\t\t\t\tcase 'String':\n\t\t\t\t\tacc.push(item)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Object': {\n\t\t\t\t\tconst value = item[this.isNative ? 'Title' : customNameColumn]\n\t\t\t\t\tif (value) acc.push(value)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'SP.ListItem': {\n\t\t\t\t\tconst title = item.get_item(this.isNative ? 'Title' : customNameColumn)\n\t\t\t\t\tif (title) acc.push(title)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc\n\t\t})([])(this.users)\n\t\tconst query = `${customNameColumn} Contains ${userNames}`\n\t\treturn this.isNative\n\t\t\t? defaultList.item(`Title Contains ${userNames}`).get(opts)\n\t\t\t: customList.item(customQuery ? concatQueries('and')([customQuery, query]) : query).get(opts)\n\t}\n\n\tasync getByEMail(opts = {}) {\n\t\tconst userEMails = reduce(acc => item => {\n\t\t\tswitch (item.constructor.getName()) {\n\t\t\t\tcase 'String':\n\t\t\t\t\tacc.push(item)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'Object': {\n\t\t\t\t\tconst value = item[this.isNative ? 'EMail' : customEmailColumn]\n\t\t\t\t\tif (value) acc.push(value)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'SP.ListItem': {\n\t\t\t\t\tconst title = item.get_item(this.isNative ? 'EMail' : customEmailColumn)\n\t\t\t\t\tif (title) acc.push(title)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc\n\t\t})([])(this.users)\n\t\tconst query = `${customEmailColumn} In ${userEMails}`\n\t\tconst users = this.isNative\n\t\t\t? defaultList.item(`EMail In ${userEMails}`)\n\t\t\t: customList.item(customQuery ? concatQueries('and')([customQuery, query]) : query)\n\t\tconst elements = await users.get(opts)\n\t\treturn this.isArray || elements.length > 1 ? elements : elements[0]\n\t}\n\n\tasync getAll(opts) {\n\t\treturn this.isNative ? defaultList.item().get(opts) : customList.item(customQuery).get(opts)\n\t}\n\n\tasync create(opts) {\n\t\tif (!customList) throw new Error('Custom user list is missed')\n\t\tconst usersToCreate = this.users.filter(el => el[customIdColumn] && el[customNameColumn])\n\t\tif (usersToCreate.length) {\n\t\t\treturn customList.item(this.users).create(opts)\n\t\t}\n\t\tthrow new Error('missing user id or Title')\n\t}\n\n\tasync update(opts = {}) {\n\t\tif (this.isSP) {\n\t\t\tconst results = await defaultList.item(this.users).update(opts)\n\t\t\treturn this.isArray || results.length > 1 ? results : results[0]\n\t\t}\n\t\tif (!customList) throw new Error('Custom user list is missed')\n\t\tconst ids = this.users.filter(el => !!el[customIdColumn])\n\n\t\tif (ids.length) {\n\t\t\tconst userObjects = await this.of(ids).get({ view: ['ID', customIdColumn], mapBy: customIdColumn })\n\t\t\tconst usersToUpdate = this.users.reduce((acc, el) => {\n\t\t\t\tconst userID = userObjects[el[customIdColumn]] ? userObjects[el[customIdColumn]].ID : undefined\n\t\t\t\tif (userID) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[customIdColumn]: userId,\n\t\t\t\t\t\t...newEl\n\t\t\t\t\t} = el\n\t\t\t\t\tnewEl.ID = userID\n\t\t\t\t\tacc.push(newEl)\n\t\t\t\t}\n\t\t\t\treturn acc\n\t\t\t}, [])\n\t\t\tconst results = await customList.item(usersToUpdate).update({ ...opts, view: ['ID', customIdColumn] })\n\t\t\treturn this.isArray || results.length > 1 ? results : results[0]\n\t\t}\n\t\tthrow new Error('missing user id')\n\t}\n\n\tsetDefaults(params = {}) {\n\t\tif (params.customWebTitle && params.customListTitle) {\n\t\t\tcustomList = this.parent.of(params.customWebTitle).list(params.customListTitle)\n\t\t}\n\t\tif (params.defaultListTitle) defaultList = this.parent.of().list(params.defaultListTitle)\n\t\tif (params.customIdColumn) customIdColumn = params.customIdColumn\n\t\tif (params.customLoginColumn) customLoginColumn = params.customLoginColumn\n\t\tif (params.customNameColumn) customNameColumn = params.customNameColumn\n\t\tif (params.customEmailColumn) customEmailColumn = params.customEmailColumn\n\t\tif (params.customQuery) customQuery = params.customQuery\n\t}\n\n\tof(users, isSP) {\n\t\treturn getInstance(this.constructor)(this.parent, users, isSP)\n\t}\n}\n\nexport default getInstance(User)\n","/* eslint-disable default-case */\n/* eslint max-len:0 */\nimport {\n\tchunkArray,\n\tstringMatch,\n\tarrayTail,\n\tarrayHead,\n\tisObject,\n\tgetArray,\n\treduce,\n\tmap,\n\tpipe,\n\tstringReplace,\n\tstringTrim,\n\tstringSplit,\n\ttypeOf,\n\tstringTest,\n\tisStringFilled\n} from './utility'\n\nconst LIMIT = 160000\nconst IN_CHUNK_SIZE = 500\nconst IN_CUSTOM_DELIMETER = '_DELIMITER_'\nconst GROUP_REGEXP_STR = '\\\\s(&&||||and|or)\\\\s'\nconst GROUP_REGEXP = new RegExp(GROUP_REGEXP_STR, 'i')\nconst GROUP_BRACES_REGEXP = new RegExp(`\\\\((.*${GROUP_REGEXP_STR}.*)\\\\)`, 'i')\nconst TIME_STAMP_ISO_REGEXP = /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d\\d\\d)?Z$/\nconst COLUMN_TYPES = {\n\tAppAuthor: 'lookup',\n\tAppEditor: 'lookup',\n\tAttachments: 'attachments',\n\tAuthor: 'lookup',\n\tBaseName: 'computed',\n\tContentType: 'computed',\n\tContentTypeId: 'contentTypeId',\n\tCreated: 'dateTime',\n\tCreated_x0020_Date: 'lookup',\n\tDocIcon: 'computed',\n\tEdit: 'computed',\n\tEditor: 'lookup',\n\tEncodedAbsUrl: 'computed',\n\tFSObjType: 'number',\n\tFileDirRef: 'lookup',\n\tFileLeafRef: 'file',\n\tFileRef: 'file',\n\tFile_x0020_Type: 'text',\n\tFolderChildCount: 'number',\n\tGUID: 'guid',\n\tHTML_x0020_Type: 'computed',\n\tID: 'counter',\n\tInstanceID: 'integer',\n\tItemChildCount: 'number',\n\tLast_x0020_Modified: 'lookup',\n\tLinkFilename: 'computed',\n\tLinkFilename2: 'computed',\n\tLinkFilenameNoMenu: 'computed',\n\tLinkTitle: 'computed',\n\tLinkTitle2: 'computed',\n\tLinkTitleNoMenu: 'computed',\n\tMetaInfo: 'lookup',\n\tModified: 'dateTime',\n\tOrder: 'number',\n\tPermMask: 'computed',\n\tProgId: 'lookup',\n\tScopeId: 'lookup',\n\tSelectTitle: 'computed',\n\tServerUrl: 'computed',\n\tSortBehavior: 'lookup',\n\tSyncClientId: 'lookup',\n\tTitle: 'text',\n\tUniqueId: 'lookup',\n\tWorkflowInstanceID: 'guid',\n\tWorkflowVersion: 'integer',\n\t_CopySource: 'text',\n\t_EditMenuTableEnd: 'computed',\n\t_EditMenuTableStart: 'computed',\n\t_EditMenuTableStart2: 'computed',\n\t_HasCopyDestinations: 'Boolean',\n\t_IsCurrentVersion: 'Boolean',\n\t_Level: 'integer',\n\t_ModerationComments: 'note',\n\t_ModerationStatus: 'modStat',\n\t_UIVersion: 'integer',\n\t_UIVersionString: 'text'\n}\n\nconst COLUMN_TYPES_REGEXP = /(Text|Note|Number|Integer|Counter|Boolean|DateTime|Date|Time|Computed|Currency|ModStat|Guid|File|Attachments|Lookup|LookupMulti|User|UserMulti|TaxonomyFieldType|TaxonomyFieldTypeMulti|Url)\\s/i\nconst OPERATORS_REGEXP = /\\s(eq|neq|geq|leq|gt|lt|isnull|isnotnull|contains|beginsWith|includes|notincludes|search|in|membership)(\\s|$)/i\n\nconst COLUMN_TYPES_MAPPED = {\n\ttext: 'Text',\n\tnote: 'Text',\n\tnumber: 'Number',\n\tinteger: 'Text',\n\tcounter: 'Text',\n\tboolean: 'Boolean',\n\tlookup: 'Lookup',\n\tlookupmulti: 'Lookup',\n\tuser: 'Text',\n\tusermulti: 'Text',\n\tdatetime: 'Text',\n\tdate: 'Text',\n\ttime: 'Text',\n\tcurrency: 'Text',\n\tcomputed: 'Text',\n\tmodstat: 'ModStat',\n\tguid: 'Guid',\n\tfile: 'File',\n\tattachments: 'Attachments',\n\ttaxonomyfieldtype: 'TaxonomyFieldType',\n\ttaxonomyfieldtypemulti: 'TaxonomyFieldTypeMulti',\n\turl: 'Url'\n}\nconst OPERATORS_MAPPED = {\n\teq: 'Eq',\n\tneq: 'Neq',\n\tgeq: 'Geq',\n\tleq: 'Leq',\n\tgt: 'Gt',\n\tlt: 'Lt',\n\tisnull: 'IsNull',\n\tisnotnull: 'IsNotNull',\n\tbeginswith: 'BeginsWith',\n\tcontains: 'Contains',\n\tincludes: 'Includes',\n\tnotincludes: 'NotIncludes',\n\tin: 'In',\n\tmembership: 'Membership',\n\tsearch: 'Search'\n}\n\nconst MEMBERSHIP_VALUES = {\n\tuser: 'SPWeb.Users', // field with users includes current user\n\tusers: 'SPWeb.AllUsers', // field with any user(s)\n\tgroup: 'CurrentUserGroups', // field with groups includes current user\n\tgroups: 'SPWeb.Groups' // field with any group(s)\n\t// SPGroup - field with groups includes current group ???\n}\n\nconst GROUP_OPERATORS_MAPPED = {\n\t'&&': 'And',\n\t'||': 'Or'\n}\nconst normalizeOperator = operator => GROUP_OPERATORS_MAPPED[operator] || (/^and$/i.test(operator) ? 'And' : 'Or')\n\nconst getStringFromOuterBraces = str => {\n\tconst founds = str.match(\n\t\tnew RegExp(`^[^\\\\(]*\\\\((.*${GROUP_REGEXP.test(str) ? `${GROUP_REGEXP_STR}.*` : ''})\\\\)[^\\\\)]*$`, 'i')\n\t)\n\treturn founds && founds[1] ? founds[1] : str\n}\n\nconst trimBraces = (str = '') => {\n\tif (str[0] === '(' && str.substr(-1) === ')') {\n\t\tconst openBracesCount = stringMatch(/\\(/g)(str).length\n\t\tif (openBracesCount !== stringMatch(/\\)/g)(str).length) throw new Error('query has wrong braces')\n\t\treturn openBracesCount >= stringMatch(new RegExp(GROUP_REGEXP_STR, 'ig'))(str).length\n\t\t\t? getStringFromOuterBraces(str)\n\t\t\t: str\n\t}\n\treturn str\n}\n\nconst convertExpression = str => {\n\tlet operator\n\tlet operatorMatch\n\tlet fieldOption = ''\n\tlet type\n\tlet valueOpts = ''\n\tconst operatorMatches = str.match(OPERATORS_REGEXP)\n\tif (operatorMatches) {\n\t\t[operatorMatch] = operatorMatches\n\t\toperator = operatorMatches[1].toLowerCase()\n\t} else {\n\t\tthrow new SyntaxError(`Wrong operator in \"${str}\"`)\n\t}\n\tconst operatorNorm = OPERATORS_MAPPED[operator]\n\tconst strSplits = str.split(new RegExp(operatorMatch, 'i'))\n\tlet name = strSplits[0].replace(/\\s\\s+/g, ' ').trim()\n\tif (COLUMN_TYPES_REGEXP.test(name)) {\n\t\tconst columnSplits = name.split(' ')\n\t\ttype = columnSplits.shift().toLowerCase()\n\t\tname = columnSplits.join(' ')\n\t} else {\n\t\ttype = COLUMN_TYPES[name] || 'text'\n\t}\n\n\tlet value = strSplits[1]\n\n\tswitch (type) {\n\t\tcase 'datetime':\n\t\tcase 'time':\n\t\tcase 'date':\n\t\t\tvalueOpts = 'StorageTZ=\"True\"'\n\t\t\tif (type !== 'date') valueOpts += ' IncludeTimeValue=\"True\"'\n\t\t\tvalue = new Date(value).toISOString()\n\t\t\tbreak\n\t\tcase 'text':\n\t\t\tif (TIME_STAMP_ISO_REGEXP.test(value)) valueOpts = 'StorageTZ=\"True\"'\n\t\t\tbreak\n\t\tcase 'boolean':\n\t\t\tvalue = /^(true|yes|1)$/.test(value) ? '1' : '0'\n\t\t\tbreak\n\t\tcase 'user':\n\t\tcase 'usermulti':\n\t\tcase 'lookup':\n\t\tcase 'lookupmulti':\n\t\tcase 'taxonomyfieldtype':\n\t\tcase 'taxonomyfieldtypemulti':\n\t\t\tfieldOption = ' LookupId=\"True\"'\n\t\t\tbreak\n\t}\n\n\tconst typeNorm = COLUMN_TYPES_MAPPED[type]\n\tif (type !== 'text') value = value.trim()\n\n\tswitch (operator) {\n\t\tcase 'in': {\n\t\t\tconst valueStrings = []\n\t\t\tconst valueChunks = []\n\t\t\tvalue = value.split(value.indexOf(IN_CUSTOM_DELIMETER) >= 0 ? IN_CUSTOM_DELIMETER : ',')\n\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\tconst valueItem = value[i]\n\t\t\t\tvalueStrings.push(`<Value Type=\"${typeNorm}\"${valueOpts}>${stripQuotes(valueItem)}</Value>`)\n\t\t\t}\n\t\t\tif (value.length > IN_CHUNK_SIZE) {\n\t\t\t\tconst chunks = chunkArray(IN_CHUNK_SIZE)(valueStrings)\n\t\t\t\tfor (let i = chunks.length - 1; i >= 0; i -= 1) {\n\t\t\t\t\tvalueChunks.push(\n\t\t\t\t\t\t`<In><FieldRef Name=\"${name}\"${fieldOption}/><Values>${chunks[i].join('')}</Values></In>`\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tlet itemsStr = '<IsNull><FieldRef Name=\"ID\"/></IsNull>'\n\t\t\t\tfor (let i = 0; i < valueChunks.length; i += 1) {\n\t\t\t\t\tconst valueChunk = valueChunks[i]\n\t\t\t\t\titemsStr = `<Or>${valueChunk}${itemsStr}</Or>`\n\t\t\t\t}\n\t\t\t\treturn itemsStr\n\t\t\t}\n\t\t\treturn `<In><FieldRef Name=\"${name}\"${fieldOption}/><Values>${valueStrings.join('')}</Values></In>`\n\t\t}\n\t\tcase 'search':\n\t\t\treturn pipe([\n\t\t\t\tstringReplace(/\\s+/g)(' '),\n\t\t\t\tstringTrim,\n\t\t\t\tstringSplit(' '),\n\t\t\t\tmap(el => `${type} ${name} contains ${el}`),\n\t\t\t\tconcatQueries(),\n\t\t\t\tconvertGroupR\n\t\t\t])(value)\n\t\tcase 'membership': {\n\t\t\tconst valueType = MEMBERSHIP_VALUES[value.toLowerCase()]\n\t\t\treturn `<${operatorNorm} Type=\"${valueType}\"><FieldRef Name=\"${name}\"/></${operatorNorm}>`\n\t\t}\n\t}\n\tconst valueOrNull = /null/.test(operator) ? '' : `<Value Type=\"${typeNorm}\"${valueOpts}>${stripQuotes(value)}</Value>`\n\treturn `<${operatorNorm}><FieldRef Name=\"${name}\"${fieldOption}/>${valueOrNull}</${operatorNorm}>`\n}\n\nconst stripQuotes = str => /^\"[^\"]*\"$/.test(str) ? str.slice(1, -1) : str\n\nconst convertGroupR = str => {\n\tlet firstExpr\n\tlet secondExpr\n\tlet operator\n\tlet chars = ''\n\tlet isBracesBefore = false\n\tlet isBracesAfter = false\n\tlet operatorIndex = 0\n\tif (GROUP_BRACES_REGEXP.test(str)) {\n\t\tlet groupIsOpen = 0\n\t\tfor (let i = 0; i < str.length; i += 1) {\n\t\t\tconst char = str[i]\n\t\t\tif (char === '(') {\n\t\t\t\tif (!operatorIndex) isBracesBefore = true\n\t\t\t\tgroupIsOpen += 1\n\t\t\t} else if (char === ')') {\n\t\t\t\tif (operatorIndex) isBracesAfter = true\n\t\t\t\tgroupIsOpen -= 1\n\t\t\t} else if (!groupIsOpen) {\n\t\t\t\tchars = chars.concat(char)\n\t\t\t\tif (!operatorIndex) operatorIndex = i\n\t\t\t}\n\t\t}\n\t}\n\tif (chars && isBracesBefore && isBracesAfter) {\n\t\toperator = chars.trim()\n\t\tfirstExpr = trimBraces(str.slice(0, operatorIndex))\n\t\tsecondExpr = trimBraces(str.slice(operatorIndex + chars.length))\n\t} else {\n\t\tconst matches = trimBraces(str).match(GROUP_BRACES_REGEXP)\n\t\tif (matches) {\n\t\t\tconst dummyStr = '_dummy_'\n\t\t\tconst dummyRE = new RegExp(dummyStr)\n\t\t\tconst groupStr = matches[1]\n\t\t\tconst dummySplits = str.replace(groupStr, dummyStr).split(GROUP_REGEXP)\n\t\t\tconst dummySplit0 = dummySplits[0]\n\t\t\tif (dummySplits.length === 3) {\n\t\t\t\t[, operator] = dummySplits\n\t\t\t\tconst dummySplit2 = dummySplits[2]\n\t\t\t\tif (dummyRE.test(dummySplit0)) {\n\t\t\t\t\tfirstExpr = getStringFromOuterBraces(dummySplit0.replace(dummyStr, groupStr))\n\t\t\t\t\tsecondExpr = dummySplit2\n\t\t\t\t} else if (dummyRE.test(dummySplit2)) {\n\t\t\t\t\tfirstExpr = dummySplit0\n\t\t\t\t\tsecondExpr = getStringFromOuterBraces(dummySplit2.replace(dummyStr, groupStr))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn convertExpression(dummySplit0)\n\t\t\t}\n\t\t} else {\n\t\t\tconst splits = str.split(GROUP_REGEXP);\n\t\t\t[firstExpr] = splits\n\t\t\tif (splits.length === 3) {\n\t\t\t\t[, , secondExpr] = splits;\n\t\t\t\t[, operator] = splits\n\t\t\t} else {\n\t\t\t\treturn convertExpression(firstExpr)\n\t\t\t}\n\t\t}\n\t}\n\tconst operatorNorm = normalizeOperator(operator)\n\treturn `<${operatorNorm}>${convertGroupR(firstExpr)}${convertGroupR(secondExpr)}</${operatorNorm}>`\n}\n\nexport const getCamlQuery = data => {\n\tswitch (typeOf(data)) {\n\t\tcase 'number':\n\t\t\treturn getCamlQuery(`ID eq ${data}`)\n\t\tcase 'object':\n\t\t\treturn getCamlView(data)\n\t\tcase 'string':\n\t\t\tif (data) {\n\t\t\t\tif (data === (+data).toString()) return getCamlQuery(`ID eq ${data}`)\n\t\t\t\tif (stringTest(/\\s/)(data) && stringSplit(/\\s/)(data).length > 1) {\n\t\t\t\t\tconst sanitaizedStr = trimBraces(data.replace(/\\s{2,}/g, ' ').replace(/^\\s|\\s$/g, ''))\n\t\t\t\t\tif (stringSplit(/\\s/)(sanitaizedStr).length > 1) {\n\t\t\t\t\t\tif (/^<|>$/.test(sanitaizedStr)) return data\n\t\t\t\t\t\treturn GROUP_REGEXP.test(sanitaizedStr)\n\t\t\t\t\t\t\t? convertGroupR(sanitaizedStr)\n\t\t\t\t\t\t\t: convertExpression(sanitaizedStr)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ''\n\t\tdefault:\n\t\t\treturn ''\n\t}\n}\n\nexport const getCamlScope = scope => /allItems/i.test(scope)\n\t? ' Scope=\"Recursive\"'\n\t: /^items$/i.test(scope)\n\t\t? ' Scope=\"FilesOnly\"'\n\t\t: /^all$/i.test(scope)\n\t\t\t? ' Scope=\"RecursiveAll\"'\n\t\t\t: ''\n\nexport const getCamlView = (params = {}) => {\n\tlet orderBys\n\tlet orderByStr = ''\n\tlet scopeStr = ''\n\tconst {\n\t\tOrderBy, Scope, Limit\n\t} = params\n\tlet {\n\t\tQuery = ''\n\t} = params\n\tif (!isObject(params)) {\n\t\tif (isStringFilled(params) && /<view/i.test(params)) return params\n\t\tQuery = params\n\t}\n\tif (OrderBy) {\n\t\torderBys = getArray(OrderBy)\n\t\tfor (let i = 0; i < orderBys.length; i += 1) {\n\t\t\tconst item = orderBys[i]\n\t\t\torderByStr += `<FieldRef Name=\"${item.split('>')[0]}\"${/>/.test(item) ? ' Ascending=\"FALSE\"' : ''}/>`\n\t\t}\n\t\torderByStr = `<OrderBy>${orderByStr}</OrderBy>`\n\t}\n\tif (Scope) {\n\t\tscopeStr = getCamlScope(Scope)\n\t}\n\tconst whereStr = Query ? `<Where>${getCamlQuery(Query)}</Where>` : ''\n\tconst queryStr = whereStr || orderByStr ? `<Query>${whereStr}${orderByStr}</Query>` : ''\n\tconst limitStr = `<RowLimit>${Limit || LIMIT}</RowLimit>`\n\treturn `<View${scopeStr}>${queryStr}${limitStr}</View>`\n}\n\nexport const craftQuery = ({\n\tjoiner = '||', operator = values === undefined ? 'isnotnull' : 'eq', columns, values\n}) => {\n\tconst normalizedJoiner = normalizeOperator(joiner)\n\tconst columnsArray = getArray(columns)\n\tconst valuesArray = getArray(values)\n\tlet query = normalizedJoiner === 'And' ? `ID ${OPERATORS_MAPPED.isnotnull}` : `ID ${OPERATORS_MAPPED.isnull}`\n\tif (valuesArray.length) {\n\t\tfor (let i = columnsArray.length - 1; i >= 0; i -= 1) {\n\t\t\tfor (let j = valuesArray.length - 1; j >= 0; j -= 1) {\n\t\t\t\tquery = `(${columnsArray[i]} ${`${operator} ${valuesArray[j]}`} ${normalizedJoiner} ${query})`\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (let i = columnsArray.length - 1; i >= 0; i -= 1) {\n\t\t\tquery = `(${columnsArray[i]} ${operator} ${normalizedJoiner} ${query})`\n\t\t}\n\t}\n\treturn trimBraces(query)\n}\n\nconst concat2Queries = (joiner = '||') => query1 => query2 => {\n\tconst normalizedJoiner = normalizeOperator(joiner)\n\tconst dummy = normalizedJoiner === 'And' ? `ID ${OPERATORS_MAPPED.isnotnull}` : `ID ${OPERATORS_MAPPED.isnull}`\n\tif (query1) {\n\t\tconst trimmed1 = trimBraces(query1)\n\t\tif (query2) {\n\t\t\tconst trimmed2 = trimBraces(query2)\n\t\t\treturn GROUP_REGEXP.test(trimmed1)\n\t\t\t\t? GROUP_REGEXP.test(trimmed2)\n\t\t\t\t\t? `(${trimmed1}) ${normalizedJoiner} (${trimmed2})`\n\t\t\t\t\t: `(${trimmed1}) ${normalizedJoiner} ${trimmed2}`\n\t\t\t\t: GROUP_REGEXP.test(trimmed2)\n\t\t\t\t\t? `${trimmed1} ${normalizedJoiner} (${trimmed2})`\n\t\t\t\t\t: `${trimmed1} ${normalizedJoiner} ${trimmed2}`\n\t\t}\n\t\treturn GROUP_REGEXP.test(trimmed1)\n\t\t\t? `(${trimmed1}) ${normalizedJoiner} ${dummy}`\n\t\t\t: `${trimmed1} ${normalizedJoiner} ${dummy}`\n\t}\n\tif (query2) {\n\t\tconst trimmed2 = trimBraces(query2)\n\t\treturn GROUP_REGEXP.test(trimmed2)\n\t\t\t? `${dummy} ${normalizedJoiner} (${trimmed2})`\n\t\t\t: `${dummy} ${normalizedJoiner} ${trimmed2}`\n\t}\n\treturn `(${dummy}) ${normalizedJoiner} ${dummy}`\n}\n\nexport const concatQueries = (joiner = '||') => (queries = []) => reduce(\n\tconcat2Queries(joiner)\n)(arrayHead(queries))(arrayTail(queries))\n\nexport const camlLog = str => console.log(str && DOMParser ? new DOMParser().parseFromString(str, 'text/xml') : str)\n","import {\n\tAbstractBox,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tgetInstance,\n\tswitchType,\n\tdeep1Iterator\n} from '../lib/utility'\n\nconst KEY_PROP = 'Url'\n\nconst lifter = switchType({\n\tobject: item => Object.assign({}, item),\n\tstring: (item = '') => ({ [KEY_PROP]: item }),\n\tdefault: () => ({ [KEY_PROP]: '/' })\n})\n\nclass Attachment {\n\tconstructor(parent, attachments) {\n\t\tthis.name = 'attachment'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(AbstractBox)(attachments, lifter)\n\t\tthis.item = parent.box.getHead()\n\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: parent.parent.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({\n\t\t\tclientContext,\n\t\t\telement\n\t\t}) => load(clientContext, this.getSPObject(element, clientContext), opts))\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(element, clientContext) {\n\t\tconst url = element[KEY_PROP]\n\t\tconst attachments = this.getSPObjectCollection(clientContext)\n\t\treturn url && url !== '/' ? attachments.getByFileName(url) : attachments\n\t}\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent.getSPObject(this.item, clientContext).get_attachmentFiles()\n\t}\n}\n\nexport default getInstance(Attachment)\n","/* eslint-disable no-restricted-syntax */\n/* eslint no-shadow:0 */\nimport { MD5 } from 'crypto-js'\nimport {\n\tMAX_ITEMS_LIMIT,\n\tAbstractBox,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tgetInstanceEmpty,\n\tsetItem,\n\tprop,\n\tmethodEmpty,\n\tidentity,\n\tlistReport,\n\tgetListRelativeUrl,\n\tisNull,\n\tisFilled,\n\tgetInstance,\n\tswitchType,\n\ttypeOf,\n\thasUrlTailSlash,\n\tisObjectFilled,\n\tgetArray,\n\tpopSlash,\n\tisExists,\n\tarrayInit,\n\tdeep1Iterator,\n\tisArray\n} from '../lib/utility'\n\nimport * as cache from '../lib/cache'\nimport {\n\tgetCamlView,\n\tcraftQuery,\n\tcamlLog,\n\tconcatQueries\n} from '../lib/query-parser'\nimport attachment from './attachment'\n\nconst KEY_PROP = 'ID'\n\nconst getPagingColumnsStr = columns => {\n\tif (!columns) return ''\n\tlet str = ''\n\tconst keys = Reflect.ownKeys(columns)\n\tfor (let i = 0; i < keys.length; i += 1) {\n\t\tconst name = keys[i]\n\t\tconst value = columns[name]\n\t\tlet valueStr = value\n\t\tswitch (typeOf(value)) {\n\t\t\tcase 'object':\n\t\t\t\tif (value.get_lookupValue) valueStr = value.get_lookupValue()\n\t\t\t\tbreak\n\t\t\tcase 'date':\n\t\t\t\tvalueStr = value.toISOString()\n\t\t\t\tbreak\n\t\t\tcase 'boolean':\n\t\t\t\tvalueStr = value ? 1 : 0\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t// default\n\t\t}\n\t\tif (value !== 'ID' && value !== undefined) str += `&p_${name}=${encodeURIComponent(valueStr)}`\n\t}\n\treturn str\n}\n\n\nconst lifter = switchType({\n\tobject: item => Object.assign({}, item),\n\tstring: (item = '') => ({\n\t\t[KEY_PROP]: item\n\t}),\n\tnumber: item => ({\n\t\t[KEY_PROP]: item\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: undefined\n\t})\n})\n\nconst hasObjectProperties = o => {\n\tlet newObject\n\tif (o.Columns) {\n\t\tnewObject = Object.assign({}, o.Columns)\n\t} else {\n\t\tnewObject = Object.assign({}, o)\n\t\tdelete newObject.Folder\n\t\tdelete newObject[KEY_PROP]\n\t}\n\treturn !!Object.keys(newObject).length\n}\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter)\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t}\n\n\tgetCount(actionType) {\n\t\tif (isArray(this.value)) {\n\t\t\treturn actionType === 'create' ? this.value.filter(hasObjectProperties).length : this.value.length\n\t\t}\n\t\treturn actionType === 'create' ? (hasObjectProperties(this.value) ? 1 : 0) : 1\n\t}\n}\n\nclass Item {\n\tconstructor(parent, items) {\n\t\tthis.name = 'item'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(items)\n\t\tthis.contextUrl = parent.parent.box.getHeadPropValue()\n\t\tthis.listUrl = parent.box.getHeadPropValue()\n\t\tthis.listFolder = parent.name === 'list' ? 'Lists/' : ''\n\t\tthis.getListSPObject = parent.getSPObject.bind(parent)\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: parent.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { showCaml } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = this.getSPObject(element, clientContext)\n\t\t\tif (showCaml && spObject.camlQuery) camlLog(spObject.camlQuery.get_viewXml())\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts = {}) {\n\t\tif (this.parent.name !== 'list') {\n\t\t\tthrow new Error('There is no \"create\" method in \"item\" module. Use \"file\" module instead of \"item\".')\n\t\t}\n\t\tconst { contextUrl, listUrl } = this\n\t\tawait this.cacheColumns()\n\n\t\tconst foldersToCreate = this.box.reduce(acc => el => {\n\t\t\tconst { Folder } = el\n\t\t\tif (Folder) acc.push(Folder)\n\t\t\treturn acc\n\t\t})\n\n\t\tif (foldersToCreate.length) {\n\t\t\tawait this.parent.folder(foldersToCreate).get({ view: 'ServerRelativeUrl' }).catch(async () => {\n\t\t\t\tawait this.parent.folder(foldersToCreate).create({ silent: true })\n\t\t\t})\n\t\t}\n\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst itemCreationInfo = getInstanceEmpty(SP.ListItemCreationInformation)\n\t\t\tconst listSPObject = this.getListSPObject(listUrl, clientContext)\n\t\t\tconst { Folder, Columns } = element\n\t\t\tlet folder = Folder\n\t\t\tlet newElement\n\t\t\tif (isObjectFilled(Columns)) {\n\t\t\t\tif (Columns.Folder) folder = Columns.Folder\n\t\t\t\tnewElement = { ...Columns }\n\t\t\t} else {\n\t\t\t\tnewElement = { ...element }\n\t\t\t\tdelete newElement[KEY_PROP]\n\t\t\t\tdelete newElement.Folder\n\t\t\t}\n\t\t\tif (!isObjectFilled(newElement)) return undefined\n\t\t\tif (folder) {\n\t\t\t\tconst folderUrl = getListRelativeUrl(contextUrl)(listUrl)({ Folder: folder })\n\t\t\t\titemCreationInfo.set_folderUrl(`/${contextUrl}/Lists/${listUrl}/${folderUrl}`)\n\t\t\t}\n\t\t\tconst spObject = setItem(cache.get(['columns', contextUrl, listUrl]))(newElement)(\n\t\t\t\tlistSPObject.addItem(itemCreationInfo)\n\t\t\t)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tif (this.box.getCount()) {\n\t\t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n\t\t\t\tawait executorJSOM(clientContexts[i])\n\t\t\t}\n\t\t}\n\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync update(opts) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tawait this.cacheColumns()\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tif (!element[KEY_PROP]) return undefined\n\t\t\tconst elementNew = Object.assign({}, element)\n\t\t\tdelete elementNew[KEY_PROP]\n\t\t\tconst spObject = setItem(cache.get(['columns', contextUrl, listUrl]))(elementNew)(\n\t\t\t\tthis.getSPObject(element, clientContext)\n\t\t\t)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (isFilled(result)) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync updateByQuery(opts) {\n\t\tconst { result } = await this.iterator(async ({ element }) => {\n\t\t\tconst { Folder, Query, Columns = {} } = element\n\t\t\tif (Query === undefined) throw new Error('Query is missed')\n\t\t\tconst items = await this.of({ Folder, Query }).get({ ...opts, expanded: false })\n\t\t\tif (items.length) {\n\t\t\t\tconst itemsToUpdate = items.map(item => {\n\t\t\t\t\tconst columns = { ...Columns }\n\t\t\t\t\tcolumns[KEY_PROP] = item[KEY_PROP]\n\t\t\t\t\treturn columns\n\t\t\t\t})\n\t\t\t\treturn this.of(itemsToUpdate).update(opts)\n\t\t\t}\n\t\t\treturn undefined\n\t\t})\n\t\treturn result\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { noRecycle, isSerial } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementID = element[KEY_PROP]\n\t\t\tif (!elementID) return undefined\n\t\t\tconst spObject = this.getSPObject(element, clientContext)\n\t\t\tif (!spObject.isRoot) methodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn elementID\n\t\t})\n\n\t\tif (this.box.getCount()) {\n\t\t\tif (isSerial) {\n\t\t\t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n\t\t\t\t\tawait executorJSOM(clientContexts[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t\t}\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync deleteByQuery(opts) {\n\t\tconst { result } = await this.iterator(async ({ element }) => {\n\t\t\tif (element === undefined) throw new Error('Query is missed')\n\t\t\tconst items = await this.of(element).get(opts)\n\t\t\tif (items.length) {\n\t\t\t\tawait this.of(items.map(prop('ID'))).delete({ isSerial: true })\n\t\t\t\treturn items\n\t\t\t}\n\t\t\treturn undefined\n\t\t})\n\t\treturn result\n\t}\n\n\tasync getDuplicates() {\n\t\tconst items = await this\n\t\t\t.of({\n\t\t\t\tScope: 'allItems',\n\t\t\t\tLimit: MAX_ITEMS_LIMIT\n\t\t\t})\n\t\t\t.get({\n\t\t\t\tview: ['ID', 'FSObjType', 'Modified', ...this.box.getIterable().map(el => el[KEY_PROP])]\n\t\t\t})\n\n\t\tconst getHashedColumnName = itemData => {\n\t\t\tconst values = []\n\t\t\tthis.box.chain(column => {\n\t\t\t\tconst value = itemData[column[KEY_PROP]]\n\t\t\t\tif (isExists(value)) values.push(value.get_lookupId ? value.get_lookupId() : value)\n\t\t\t})\n\t\t\treturn MD5(values.join('.')).toString()\n\t\t}\n\n\t\tconst itemsMap = items.reduce((map, item) => {\n\t\t\tconst hashedColumnName = getHashedColumnName(item)\n\t\t\tif (!map.has(hashedColumnName)) map.set(hashedColumnName, [])\n\t\t\tmap.get(hashedColumnName).push(item)\n\t\t\treturn map\n\t\t}, new Map())\n\n\t\tconst duplicatedsSorted = []\n\t\tfor (const itemMap of itemsMap) {\n\t\t\tconst [, duplicateds] = itemMap\n\t\t\tif (duplicateds.length > 1) {\n\t\t\t\tduplicatedsSorted.push(duplicateds.sort((a, b) => a.Modified.getTime() - b.Modified.getTime()))\n\t\t\t}\n\t\t}\n\t\treturn duplicatedsSorted.map(arrayInit)\n\t}\n\n\tasync deleteDuplicates(opts = {}) {\n\t\tconst duplicatedsFiltered = await this.getDuplicates()\n\t\tawait this\n\t\t\t.of([...duplicatedsFiltered.reduce((acc, el) => acc.concat(el.map(prop('ID'))), [])])\n\t\t\t.delete({ ...opts, isSerial: true })\n\t}\n\n\tasync getEmpties(opts) {\n\t\tconst columns = this.box.value.map(prop('ID'))\n\t\tconst { result } = await this.iterator(async ({ element }) => this\n\t\t\t.of({\n\t\t\t\tQuery: craftQuery({ operator: 'isnull', columns }),\n\t\t\t\tScope: 'allItems',\n\t\t\t\tLimit: MAX_ITEMS_LIMIT,\n\t\t\t\tFolder: element.Folder\n\t\t\t})\n\t\t\t.get(opts))\n\t\treturn result\n\t}\n\n\tasync deleteEmpties(opts) {\n\t\tconst columns = this.box.value.map(prop('ID'))\n\t\tconst { result } = await this\n\t\t\t.of(await this.of(columns).getEmpties(opts)).map(prop('ID'))\n\t\t\t.delete({ isSerial: true })\n\t\treturn result\n\t}\n\n\tasync merge(opts) {\n\t\tconst { contextUrl, listUrl } = this\n\t\tthis.iterator(async ({ element }) => {\n\t\t\tconst {\n\t\t\t\tKey,\n\t\t\t\tForced,\n\t\t\t\tTo,\n\t\t\t\tFrom,\n\t\t\t\tMediator = () => identity\n\t\t\t} = element\n\t\t\tif (!Key) throw new Error('Key is missed')\n\t\t\tconst sourceColumn = From.Column\n\t\t\tif (!sourceColumn) throw new Error('From Column is missed')\n\t\t\tconst targetColumn = To.Column\n\t\t\tif (!targetColumn) throw new Error('To Column is missed')\n\t\t\tconst [sourceItems, targetItems] = await Promise.all([\n\t\t\t\tthis.parent.parent\n\t\t\t\t\t.of(From.WebUrl || contextUrl)[this.parent.name](From.List || listUrl)\n\t\t\t\t\t.item({\n\t\t\t\t\t\tQuery: concatQueries()([`${Key} IsNotNull`, From.Query]),\n\t\t\t\t\t\tScope: 'allItems',\n\t\t\t\t\t\tLimit: MAX_ITEMS_LIMIT\n\t\t\t\t\t})\n\t\t\t\t\t.get({\n\t\t\t\t\t\tview: ['ID', Key, sourceColumn]\n\t\t\t\t\t}),\n\t\t\t\tthis\n\t\t\t\t\t.of({\n\t\t\t\t\t\tQuery: concatQueries()([`${Key} IsNotNull`, To.Query]),\n\t\t\t\t\t\tScope: 'allItems',\n\t\t\t\t\t\tLimit: MAX_ITEMS_LIMIT\n\t\t\t\t\t})\n\t\t\t\t\t.get({\n\t\t\t\t\t\tview: ['ID', Key, targetColumn],\n\t\t\t\t\t\tgroupBy: Key\n\t\t\t\t\t})\n\t\t\t])\n\t\t\tconst itemsToMerge = []\n\t\t\tawait Promise.all(\n\t\t\t\tsourceItems.map(async sourceItem => {\n\t\t\t\t\tconst targetItemGroup = targetItems[sourceItem[Key]]\n\t\t\t\t\tif (targetItemGroup) {\n\t\t\t\t\t\tconst targetItem = targetItemGroup[0]\n\t\t\t\t\t\tconst itemToMerge = { ID: targetItem[KEY_PROP] }\n\t\t\t\t\t\tif (isNull(targetItem[targetColumn]) || Forced) {\n\t\t\t\t\t\t\titemToMerge[targetColumn] = await Mediator(sourceColumn)(sourceItem[sourceColumn])\n\t\t\t\t\t\t\titemsToMerge.push(itemToMerge)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t\treturn itemsToMerge.length && this.of(itemsToMerge).update(opts)\n\t\t})\n\t}\n\n\tasync erase(opts) {\n\t\tconst { result } = await this.iterator(({ element }) => {\n\t\t\tconst { Query = '', Folder, Columns } = element\n\t\t\tif (!Columns) return undefined\n\t\t\tconst columns = getArray(Columns)\n\t\t\treturn this\n\t\t\t\t.of({\n\t\t\t\t\tFolder,\n\t\t\t\t\tQuery,\n\t\t\t\t\tColumns: columns.reduce((acc, el) => {\n\t\t\t\t\t\tacc[el] = null\n\t\t\t\t\t\treturn acc\n\t\t\t\t\t}, {})\n\t\t\t\t})\n\t\t\t\t.updateByQuery(opts)\n\t\t})\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync createDiscussion(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst listSPObject = this.getListSPObject(this.listUrl, clientContext)\n\t\t\tconst skippedProps = {\n\t\t\t\tUrl: true,\n\t\t\t\tID: true\n\t\t\t}\n\t\t\tconst spObject = SP.Utilities.Utility.createNewDiscussion(clientContext, listSPObject, element.Title)\n\t\t\tconst keys = Reflect.ownKeys(element)\n\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\tconst columnName = keys[i]\n\t\t\t\tif (!skippedProps[columnName]) spObject.set_item(columnName, element[columnName])\n\t\t\t}\n\t\t\tspObject.update()\n\t\t\treturn spObject\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(opts, result)\n\t}\n\n\tasync createReply(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst { Columns } = element\n\t\t\tconst spItemObject = this.getSPObject(element, clientContext)\n\t\t\tconst spObject = SP.Utilities.Utility.createNewDiscussionReply(clientContext, spItemObject)\n\t\t\tconst keys = Reflect.ownKeys(Columns)\n\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\tconst columnName = keys[i]\n\t\t\t\tspObject.set_item(columnName, Columns[columnName])\n\t\t\t}\n\t\t\tspObject.update()\n\t\t\treturn spObject\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tattachment(attachments) {\n\t\treturn attachment(this, attachments)\n\t}\n\n\treport(actionType, opts = {}) {\n\t\tlistReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tlistUrl: this.listUrl,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tasync cacheColumns() {\n\t\tconst { contextUrl, listUrl } = this\n\t\tif (!cache.get(['columns', contextUrl, listUrl])) {\n\t\t\tconst columns = await this\n\t\t\t\t.parent\n\t\t\t\t.column()\n\t\t\t\t.get({\n\t\t\t\t\tview: ['TypeAsString', 'InternalName', 'Title', 'Sealed'],\n\t\t\t\t\tmapBy: 'InternalName'\n\t\t\t\t})\n\t\t\tcache.set(columns)(['columns', contextUrl, listUrl])\n\t\t}\n\t}\n\n\tgetSPObject(element, clientContext) {\n\t\tlet camlQuery = new SP.CamlQuery()\n\t\tconst { ID } = element\n\t\tconst spListObject = this.getListSPObject(this.listUrl, clientContext)\n\t\tconst contextUrl = clientContext.get_url()\n\t\tswitch (typeOf(ID)) {\n\t\t\tcase 'number': {\n\t\t\t\tconst spObject = spListObject.getItemById(ID)\n\t\t\t\treturn spObject\n\t\t\t}\n\t\t\tcase 'string':\n\t\t\t\tif (hasUrlTailSlash(ID)) {\n\t\t\t\t\tcamlQuery.set_folderServerRelativeUrl(`${contextUrl}/${popSlash(ID)}`)\n\t\t\t\t} else {\n\t\t\t\t\tcamlQuery.set_viewXml(getCamlView(ID))\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif (element.set_viewXml) {\n\t\t\t\t\tcamlQuery = element\n\t\t\t\t} else if (element.get_lookupId) {\n\t\t\t\t\tconst spObject = spListObject.getItemById(element.get_lookupId())\n\t\t\t\t\treturn spObject\n\t\t\t\t} else {\n\t\t\t\t\tconst { Folder, Page } = element\n\t\t\t\t\tif (Folder) {\n\t\t\t\t\t\tlet fullUrl = ''\n\t\t\t\t\t\tconst folderUrl = `${this.listFolder}${this.listUrl}/${Folder}`\n\t\t\t\t\t\tif (contextUrl === '/') {\n\t\t\t\t\t\t\tfullUrl = folderUrl\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst isFullUrl = new RegExp(contextUrl, 'i').test(Folder)\n\t\t\t\t\t\t\tfullUrl = isFullUrl ? Folder : folderUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcamlQuery.set_folderServerRelativeUrl(fullUrl)\n\t\t\t\t\t}\n\t\t\t\t\tcamlQuery.set_viewXml(getCamlView(element))\n\t\t\t\t\tif (Page) {\n\t\t\t\t\t\tconst { IsPrevious, ID, Columns } = Page\n\t\t\t\t\t\tconst position = getInstanceEmpty(SP.ListItemCollectionPosition)\n\t\t\t\t\t\tposition.set_pagingInfo(\n\t\t\t\t\t\t\t`${IsPrevious ? 'PagedPrev=TRUE&' : ''}Paged=TRUE&p_ID=${ID}${getPagingColumnsStr(Columns)}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\tcamlQuery.set_listItemCollectionPosition(position)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tconst spObject = spListObject.getItems(camlQuery)\n\t\tspObject.camlQuery = camlQuery\n\t\treturn spObject\n\t}\n\n\tof(items) {\n\t\treturn getInstance(this.constructor)(this.parent, items)\n\t}\n}\n\nexport default getInstance(Item)\n","/* eslint prefer-const:0 */\nimport {\n\tgetInstance,\n\tisArray,\n\tstringCut,\n\tarrayHead,\n\tarrayLast,\n\tisDefined\n} from '../lib/utility'\n\n\nconst getPageValue = data => data === null\n\t? null\n\t: data instanceof Date\n\t\t? data.toISOString()\n\t\t: data.get_lookupValue\n\t\t\t? data.get_lookupValue()\n\t\t\t: data.toString\n\t\t\t\t? data.toString()\n\t\t\t\t: data\n\nclass Pager {\n\tconstructor(parent, params = {}) {\n\t\tthis.name = 'pager'\n\t\tthis.parent = parent\n\t\tconst { OrderBy } = params\n\t\tthis.mainParams = {\n\t\t\tOrderBy,\n\t\t\tLimit: isDefined(params.Limit) ? params.Limit : 10,\n\t\t\tScope: params.Scope,\n\t\t\tQuery: params.Query,\n\t\t\tFolder: params.Folder,\n\t\t}\n\n\t\tthis.onLoad = params.OnLoad\n\t\tthis.onLoadForward = params.OnLoadForward\n\t\tthis.onLoadBackward = params.OnLoadBackward\n\t\tthis.onLoadAll = params.OnLoadAll\n\t\tthis.onLoadAllForward = params.OnLoadAllForward\n\t\tthis.onLoadAllBackward = params.OnLoadAllBackward\n\t\tthis.onPreload = params.OnPreload\n\t\tthis.onPreloadForward = params.OnPreloadForward\n\t\tthis.onPreloadBackward = params.OnPreloadBackward\n\n\t\tthis.itemIds = {\n\t\t\tfirst: 0,\n\t\t\tlast: 0\n\t\t}\n\t\tthis.itemColumns = {\n\t\t\tfirst: {},\n\t\t\tlats: {}\n\t\t}\n\n\t\tthis.orderColumnTitles = []\n\n\t\tif (OrderBy) {\n\t\t\tconst cut = stringCut(/>$/)\n\t\t\tthis.orderColumnTitles = isArray(OrderBy) ? OrderBy.map(cut) : [cut(OrderBy)]\n\t\t}\n\t}\n\n\tasync move(opts = {}) {\n\t\tlet { view, groupBy, isPrevious } = opts\n\t\tif (isPrevious) {\n\t\t\tif (this.onPreloadBackward) await this.onPreloadBackward()\n\t\t} else if (this.onPreloadForward) await this.onPreloadForward()\n\t\tif (this.onPreload) await this.onPreload()\n\t\tif (view) view = [].concat(view, ...this.orderColumnTitles, 'ID')\n\t\tif (groupBy) groupBy = undefined\n\n\t\tlet res = await this.parent\n\t\t\t.item({\n\t\t\t\t...this.mainParams,\n\t\t\t\tPage: {\n\t\t\t\t\tIsPrevious: isPrevious,\n\t\t\t\t\tID: this.itemIds[isPrevious ? 'first' : 'last'],\n\t\t\t\t\tColumns: this.itemColumns[isPrevious ? 'first' : 'last']\n\t\t\t\t}\n\t\t\t})\n\t\t\t.get({ ...opts, view, groupBy })\n\n\t\tif (isPrevious) {\n\t\t\tif (this.onLoadBackward) await this.onLoadBackward()\n\t\t} else if (this.onLoadForward) await this.onLoadForward()\n\t\tif (this.onLoad) await this.onLoad()\n\n\t\tif (res.length) {\n\t\t\tconst firstItem = arrayHead(res)\n\t\t\tconst lastItem = arrayLast(res)\n\t\t\tif (isPrevious) {\n\t\t\t\tif (this.itemIds.first === firstItem.ID) {\n\t\t\t\t\tres = []\n\t\t\t\t\tthis.itemIds.last = 0\n\t\t\t\t\tthis.lastItemColumns = {}\n\t\t\t\t\tif (this.onLoadAll) await this.onLoadAll()\n\t\t\t\t\tif (this.onLoadAllBackward) await this.onLoadAllBackward()\n\t\t\t\t} else {\n\t\t\t\t\tthis.itemIds.first = firstItem.ID\n\t\t\t\t\tthis.itemIds.last = lastItem.ID\n\t\t\t\t\tif (this.orderColumnTitles.length) {\n\t\t\t\t\t\tthis.itemColumns = this.orderColumnTitles.reduce((acc, el) => {\n\t\t\t\t\t\t\tacc.first[el] = getPageValue(firstItem[el])\n\t\t\t\t\t\t\tacc.last[el] = getPageValue(lastItem[el])\n\t\t\t\t\t\t\treturn acc\n\t\t\t\t\t\t}, { first: {}, last: {} })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.itemIds.first = firstItem.ID\n\t\t\t\tthis.itemIds.last = lastItem.ID\n\t\t\t\tif (this.orderColumnTitles.length) {\n\t\t\t\t\tthis.itemColumns = this.orderColumnTitles.reduce((acc, el) => {\n\t\t\t\t\t\tacc.first[el] = getPageValue(firstItem[el])\n\t\t\t\t\t\tacc.last[el] = getPageValue(lastItem[el])\n\t\t\t\t\t\treturn acc\n\t\t\t\t\t}, { first: {}, last: {} })\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (isPrevious) {\n\t\t\t\tif (this.onLoadAllBackward) await this.onLoadAllBackward()\n\t\t\t} else if (this.onLoadAllForward) await this.onLoadAllForward()\n\t\t\tif (this.onLoadAll) await this.onLoadAll()\n\t\t}\n\t\treturn res\n\t}\n\n\tnext(opts) {\n\t\treturn this.move(opts)\n\t}\n\n\tprevious(opts = {}) {\n\t\treturn this.move({ ...opts, isPrevious: true })\n\t}\n}\n\nexport default getInstance(Pager)\n","/* eslint class-methods-use-this:0 */\nimport {\n\tFILE_LIST_TEMPLATES,\n\tAbstractBox,\n\tpipe,\n\tmethodEmpty,\n\tmethodI,\n\tifThen,\n\tconstant,\n\tprepareResponseJSOM,\n\tgetClientContext,\n\tload,\n\texecutorJSOM,\n\tgetInstanceEmpty,\n\tsetFields,\n\toverstep,\n\thasUrlTailSlash,\n\tgetTitleFromUrl,\n\tisExists,\n\tisString,\n\twebReport,\n\tswitchType,\n\tgetInstance,\n\tisGUID,\n\tremoveEmptiesByProp,\n\tremoveDuplicatedProp,\n\tgetListRelativeUrl,\n\tdeep1Iterator,\n\tstringTest,\n\tshiftSlash,\n\tpopSlash,\n\tgetPermissionMasks\n} from '../lib/utility'\nimport column from './column'\nimport folder from './folderList'\nimport file from './fileList'\nimport item from './item'\nimport pager from './pager'\nimport { getCamlQuery, getCamlScope } from '../lib/query-parser'\n\nconst KEY_PROP = 'Title'\n\nconst arrayValidator = pipe([removeEmptiesByProp(KEY_PROP), removeDuplicatedProp(KEY_PROP)])\n\nconst lifter = switchType({\n\tobject: list => {\n\t\tconst newList = Object.assign({}, list)\n\t\tconst { Url, EntityTypeName, Title } = list\n\t\tnewList[KEY_PROP] = EntityTypeName || Url || Title\n\t\tif (stringTest(/\\//)(Url)) {\n\t\t\tif (Url !== '/') {\n\t\t\t\tnewList[KEY_PROP] = popSlash(getTitleFromUrl(Url))\n\t\t\t}\n\t\t\tnewList.Url = hasUrlTailSlash(Url) ? '/' : shiftSlash(Url) || '/'\n\t\t}\n\t\treturn newList\n\t},\n\tstring: (listUrl) => {\n\t\tconst newList = {\n\t\t\tUrl: undefined,\n\t\t\tTitle: listUrl\n\t\t}\n\t\tif (stringTest(/\\//)(listUrl)) {\n\t\t\tnewList.Title = getTitleFromUrl(listUrl)\n\t\t\tnewList.Url = hasUrlTailSlash(listUrl) ? '/' : shiftSlash(listUrl) || '/'\n\t\t}\n\t\treturn newList\n\t},\n\tdefault: () => ({\n\t\tUrl: '/',\n\t\t[KEY_PROP]: undefined\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t}\n}\n\nclass List {\n\tconstructor(parent, lists) {\n\t\tthis.name = 'list'\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t\tthis.parent = parent\n\t\tthis.contextUrl = parent.box.getHeadPropValue()\n\t\tthis.box = getInstance(Box)(lists)\n\t\tthis.count = parent.box.getCount()\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst isCollection = hasUrlTailSlash(element.Url)\n\t\t\tconst spObject = isCollection\n\t\t\t\t? this.getSPObjectCollection(clientContext)\n\t\t\t\t: this.getSPObject(element.Title, clientContext)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!title) return undefined\n\t\t\tconst spObject = pipe([\n\t\t\t\tgetInstanceEmpty,\n\t\t\t\tsetFields({\n\t\t\t\t\tset_title: title || undefined,\n\t\t\t\t\tset_templateType: element.BaseTemplate\n\t\t\t\t\t\t|| SP.ListTemplateType[element.TemplateType\n\t\t\t\t\t\t|| 'genericList'],\n\t\t\t\t\tset_url: element.Url === '/' ? title : element.Url,\n\t\t\t\t\tset_templateFeatureId: element.TemplateFeatureId,\n\t\t\t\t\tset_customSchemaXml: element.CustomSchemaXml,\n\t\t\t\t\tset_dataSourceProperties: element.DataSourceProperties,\n\t\t\t\t\tset_documentTemplateType: element.DocumentTemplateType,\n\t\t\t\t\tset_quickLaunchOption: element.QuickLaunchOption\n\t\t\t\t}),\n\t\t\t\tmethodI('add')(this.getSPObjectCollection(clientContext)),\n\t\t\t\toverstep(\n\t\t\t\t\tsetFields({\n\t\t\t\t\t\tset_contentTypesEnabled: element.ContentTypesEnabled,\n\t\t\t\t\t\tset_defaultContentApprovalWorkflowId: element.DefaultContentApprovalWorkflowId,\n\t\t\t\t\t\tset_defaultDisplayFormUrl: element.DefaultDisplayFormUrl,\n\t\t\t\t\t\tset_defaultEditFormUrl: element.DefaultEditFormUrl,\n\t\t\t\t\t\tset_defaultNewFormUrl: element.DefaultNewFormUrl,\n\t\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\t\tset_direction: element.Direction,\n\t\t\t\t\t\tset_draftVersionVisibility: element.DraftVersionVisibility,\n\t\t\t\t\t\tset_enableAttachments: element.EnableAttachments || false,\n\t\t\t\t\t\tset_enableFolderCreation: element.EnableFolderCreation === undefined\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: element.EnableFolderCreation,\n\t\t\t\t\t\tset_enableMinorVersions: element.EnableMinorVersions,\n\t\t\t\t\t\tset_enableModeration: element.EnableModeration,\n\t\t\t\t\t\tset_enableVersioning: element.EnableVersioning === undefined\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: element.EnableVersioning,\n\t\t\t\t\t\tset_forceCheckout: element.ForceCheckout,\n\t\t\t\t\t\tset_hidden: element.Hidden,\n\t\t\t\t\t\tset_imageUrl: element.ImageUrl,\n\t\t\t\t\t\tset_irmEnabled: element.IrmEnabled,\n\t\t\t\t\t\tset_irmExpire: element.IrmExpire,\n\t\t\t\t\t\tset_irmReject: element.IrmReject,\n\t\t\t\t\t\tset_isApplicationList: element.IsApplicationList,\n\t\t\t\t\t\tset_lastItemModifiedDate: element.LastItemModifiedDate,\n\t\t\t\t\t\tset_majorVersionLimit: element.EnableVersioning ? element.MajorVersionLimit : undefined,\n\t\t\t\t\t\tset_multipleDataList: element.MultipleDataList,\n\t\t\t\t\t\tset_noCrawl: element.NoCrawl === undefined ? true : element.NoCrawl,\n\t\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\t\tset_onQuickLaunch: element.OnQuickLaunch,\n\t\t\t\t\t\tset_validationFormula: element.ValidationFormula,\n\t\t\t\t\t\tset_validationMessage: element.ValidationMessage\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t\toverstep(\n\t\t\t\t\tifThen(constant(!element.BaseTemplate && !FILE_LIST_TEMPLATES[element.TemplateType]))([\n\t\t\t\t\t\tsetFields({\n\t\t\t\t\t\t\tset_documentTemplateUrl: element.DocumentTemplateUrl,\n\t\t\t\t\t\t\tMajorWithMinorVersionsLimit: element.EnableVersioning\n\t\t\t\t\t\t\t\t? element.MajorWithMinorVersionsLimit\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t})\n\t\t\t\t\t])\n\t\t\t\t),\n\t\t\t\toverstep(methodEmpty('update'))\n\t\t\t])(SP.ListCreationInformation)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.count) {\n\t\t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n\t\t\t\tawait executorJSOM(clientContexts[i])\n\t\t\t}\n\t\t}\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync update(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!title) return undefined\n\t\t\tconst spObject = pipe([\n\t\t\t\tsetFields({\n\t\t\t\t\tset_title: title,\n\t\t\t\t\tset_enableFolderCreation: element.EnableFolderCreation,\n\t\t\t\t\tset_contentTypesEnabled: element.ContentTypesEnabled,\n\t\t\t\t\tset_defaultContentApprovalWorkflowId: element.DefaultContentApprovalWorkflowId,\n\t\t\t\t\tset_defaultDisplayFormUrl: element.DefaultDisplayFormUrl,\n\t\t\t\t\tset_defaultEditFormUrl: element.DefaultEditFormUrl,\n\t\t\t\t\tset_defaultNewFormUrl: element.DefaultNewFormUrl,\n\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\tset_direction: element.Direction,\n\t\t\t\t\tset_draftVersionVisibility: element.DraftVersionVisibility,\n\t\t\t\t\tset_documentTemplateUrl: element.DocumentTemplateUrl,\n\t\t\t\t\tset_enableAttachments: element.EnableAttachments,\n\t\t\t\t\tset_enableMinorVersions: element.EnableMinorVersions,\n\t\t\t\t\tset_enableModeration: element.EnableModeration,\n\t\t\t\t\tset_enableVersioning: element.EnableVersioning,\n\t\t\t\t\tset_forceCheckout: element.ForceCheckout,\n\t\t\t\t\tset_hidden: element.Hidden,\n\t\t\t\t\tset_imageUrl: element.ImageUrl,\n\t\t\t\t\tset_irmEnabled: element.IrmEnabled,\n\t\t\t\t\tset_irmExpire: element.IrmExpire,\n\t\t\t\t\tset_irmReject: element.IrmReject,\n\t\t\t\t\tset_isApplicationList: element.IsApplicationList,\n\t\t\t\t\tset_lastItemModifiedDate: element.LastItemModifiedDate,\n\t\t\t\t\tset_majorVersionLimit: element.MajorVersionLimit,\n\t\t\t\t\tset_majorWithMinorVersionsLimit: element.MajorWithMinorVersionsLimit,\n\t\t\t\t\tset_multipleDataList: element.MultipleDataList,\n\t\t\t\t\tset_noCrawl: element.NoCrawl,\n\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\tset_onQuickLaunch: element.OnQuickLaunch,\n\t\t\t\t\tset_validationFormula: element.ValidationFormula,\n\t\t\t\t\tset_validationMessage: element.ValidationMessage\n\t\t\t\t}),\n\t\t\t\toverstep(methodEmpty('update'))\n\t\t\t])(this.getSPObject(title, clientContext))\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { noRecycle } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!title) return undefined\n\t\t\tconst spObject = this.getSPObject(title, clientContext)\n\t\t\tmethodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn title\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync cloneLayout() {\n\t\tconsole.log('cloning layout in progress...')\n\t\tawait this.iterator(async ({ element }) => {\n\t\t\tlet targetListUrl\n\t\t\tlet targetWebUrl\n\t\t\tconst { Title, Url, To } = element\n\t\t\tif (isString(To)) {\n\t\t\t\ttargetWebUrl = this.contextUrl\n\t\t\t\ttargetListUrl = To\n\t\t\t} else {\n\t\t\t\ttargetWebUrl = To.WebUrl || this.contextUrl\n\t\t\t\ttargetListUrl = To.ListUrl\n\t\t\t}\n\t\t\tconst sourceListUrl = Url || Title\n\t\t\tif (!targetListUrl) throw new Error('Target listUrl is missed')\n\t\t\tif (!sourceListUrl) throw new Error('Source list Title is missed')\n\t\t\tconst targetTitle = getTitleFromUrl(targetListUrl)\n\t\t\tconst targetWeb = this.parent.of(targetWebUrl)\n\t\t\tconst sourceWeb = this.parent.of(this.contextUrl)\n\t\t\tconst targetList = targetWeb.list(targetListUrl)\n\t\t\tconst sourceList = sourceWeb.list(sourceListUrl)\n\t\t\tawait targetList.get({ silent: true }).catch(async () => {\n\t\t\t\tconst newListData = Object.assign({}, await sourceList.get())\n\t\t\t\tnewListData.Title = targetTitle\n\t\t\t\tnewListData.Url = targetTitle\n\t\t\t\tnewListData.EntityTypeName = targetTitle\n\t\t\t\tawait targetWeb.list(newListData).create()\n\t\t\t})\n\t\t\tconst [sourceColumns, targetColumns] = await Promise.all([\n\t\t\t\tsourceList.column().get(),\n\t\t\t\ttargetList.column().get({ groupBy: 'InternalName' })\n\t\t\t])\n\t\t\tconst columnsToCreate = sourceColumns.reduce((acc, sourceColumn) => {\n\t\t\t\tconst targetColumn = targetColumns[sourceColumn.InternalName]\n\t\t\t\tif (!targetColumn && !sourceColumn.FromBaseType) acc.push(Object.assign({}, sourceColumn))\n\t\t\t\treturn acc\n\t\t\t}, [])\n\t\t\treturn columnsToCreate.length ? targetList.column(columnsToCreate).create() : undefined\n\t\t})\n\t\tconsole.log('cloning layout done!')\n\t}\n\n\tasync clone(opts) {\n\t\tconst columnsToExclude = {\n\t\t\tAttachments: true,\n\t\t\tMetaInfo: true,\n\t\t\tFileLeafRef: true,\n\t\t\tFileDirRef: true,\n\t\t\tFileRef: true,\n\t\t\tOrder: true\n\t\t}\n\t\tconsole.log('cloning in progress...')\n\t\tawait this.iterator(async ({ contextElement, element }) => {\n\t\t\tconst contextUrl = contextElement.Url\n\t\t\tlet targetWebUrl; let\n\t\t\t\ttargetListUrl\n\t\t\tconst { Title, To, Url } = element\n\t\t\tif (isString(To)) {\n\t\t\t\ttargetWebUrl = contextUrl\n\t\t\t\ttargetListUrl = To\n\t\t\t} else {\n\t\t\t\ttargetWebUrl = To.WebUrl\n\t\t\t\ttargetListUrl = To.ListUrl\n\t\t\t}\n\t\t\tconst sourceListUrl = Title || Url\n\t\t\tif (!targetWebUrl) throw new Error('Target webUrl is missed')\n\t\t\tif (!targetListUrl) throw new Error('Target listUrl is missed')\n\t\t\tif (!sourceListUrl) throw new Error('Source list Title is missed')\n\n\t\t\tconst targetTitle = To.Title || getTitleFromUrl(targetListUrl)\n\n\t\t\tconst targetSPX = this.web(targetWebUrl)\n\t\t\tconst sourceSPX = this.web(contextUrl)\n\t\t\tconst targetSPXList = targetSPX.list(targetTitle)\n\t\t\tconst sourceSPXList = sourceSPX.list(sourceListUrl)\n\n\t\t\tawait sourceSPX.list(element).cloneLayout()\n\t\t\tconsole.log('cloning items...')\n\t\t\tconst [sourceListData, sourceColumnsData, sourceItemsData] = await Promise.all([\n\t\t\t\tsourceSPXList.get(),\n\t\t\t\tsourceSPXList.column().get({ groupBy: 'InternalName', view: ['ReadOnlyField', 'InternalName'] }),\n\t\t\t\tsourceSPXList.item({ Query: '', Scope: 'allItems' }).get()\n\t\t\t])\n\n\t\t\tif (sourceListData.BaseType) {\n\t\t\t\tfor (let i = 0; i < sourceItemsData.length; i += 1) {\n\t\t\t\t\tconst fileItem = sourceItemsData[i]\n\t\t\t\t\tawait sourceSPX\n\t\t\t\t\t\t.library(sourceListUrl)\n\t\t\t\t\t\t.file({\n\t\t\t\t\t\t\tUrl: getListRelativeUrl(contextUrl)(sourceListUrl)({ Url: fileItem.FileRef }),\n\t\t\t\t\t\t\tTo: {\n\t\t\t\t\t\t\t\tWebUrl: targetWebUrl,\n\t\t\t\t\t\t\t\tListUrl: targetListUrl\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.copy(opts)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst itemsToCreate = sourceItemsData.map(itemToCreate => {\n\t\t\t\t\tconst newItem = {}\n\t\t\t\t\tconst folderForItem = getListRelativeUrl(contextUrl)(sourceListUrl)(\n\t\t\t\t\t\t{ Url: itemToCreate.FileDirRef }\n\t\t\t\t\t)\n\t\t\t\t\tif (folderForItem) newItem.Folder = folderForItem\n\t\t\t\t\tconst keys = Reflect.ownKeys(itemToCreate)\n\t\t\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\t\t\tconst prop = keys[i]\n\t\t\t\t\t\tconst value = itemToCreate[prop]\n\t\t\t\t\t\tconst sourceColumns = sourceColumnsData[prop]\n\t\t\t\t\t\tif (sourceColumns) {\n\t\t\t\t\t\t\tconst sourceColumn = sourceColumns[0]\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!sourceColumn.ReadOnlyField && !columnsToExclude[prop] && isExists(value)\n\t\t\t\t\t\t\t) newItem[prop] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn newItem\n\t\t\t\t})\n\t\t\t\treturn targetSPXList.item(itemsToCreate).create()\n\t\t\t}\n\t\t\treturn undefined\n\t\t})\n\t\tconsole.log('cloning is complete!')\n\t}\n\n\tasync clear(opts) {\n\t\tconsole.log('clearing in progress...')\n\t\tawait this\n\t\t\t.item({ Query: '' })\n\t\t\t.deleteByQuery(opts)\n\t\tconsole.log('clearing is complete!')\n\t}\n\n\tasync getAggregations() {\n\t\treturn this.iterator(async ({ contextElement, element }) => {\n\t\t\tconst contextUrl = contextElement.Url\n\t\t\tlet scopeStr = ''\n\t\t\tlet fieldRefs = ''\n\t\t\tlet caml = ''\n\t\t\tconst aggregations = {}\n\t\t\tconst {\n\t\t\t\tTitle,\n\t\t\t\tColumns,\n\t\t\t\tScope = 'all',\n\t\t\t\tQuery\n\t\t\t} = element\n\t\t\tconst clientContext = getClientContext(contextUrl)\n\t\t\tconst list = this.getSPObject(Title, clientContext)\n\t\t\tconst keys = Reflect.ownKeys(Columns)\n\t\t\tfor (let i = 0; i < keys.length; i += 1) {\n\t\t\t\tconst columnName = keys[i]\n\t\t\t\tfieldRefs += `<FieldRef Name=\"${columnName}\" Type=\"${Columns[columnName]}\"/>`\n\t\t\t\taggregations[columnName] = 0\n\t\t\t}\n\t\t\tif (Scope) {\n\t\t\t\tscopeStr = getCamlScope()\n\t\t\t}\n\t\t\tif (Query) caml = `<Query><Where>${getCamlQuery(Query)}</Where></Query>`\n\t\t\tconst aggregationsQuery = list.renderListData(\n\t\t\t\t`<View${scopeStr}>${caml}<Aggregations>${fieldRefs}</Aggregations></View>`\n\t\t\t)\n\t\t\tawait executorJSOM(clientContext)\n\t\t\tconst aggregationsData = JSON.parse(aggregationsQuery.get_value()).Row[0]\n\t\t\tconst aggregationKeys = Reflect.ownKeys(aggregationsData)\n\t\t\tfor (let i = 0; i < aggregationKeys.length; i += 1) {\n\t\t\t\tconst name = aggregationKeys[i]\n\t\t\t\tconst columnName = name.split('.')[0]\n\t\t\t\tif (Reflect.hasOwnProperty.call(Columns, columnName)) {\n\t\t\t\t\taggregations[columnName] = Number(aggregationsData[name])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aggregations\n\t\t})\n\t}\n\n\tasync getPermissions() {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = this.getSPObject(element[KEY_PROP], clientContext)\n\t\t\treturn load(clientContext, spObject, { view: 'EffectiveBasePermissions' })\n\t\t})\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\tconst allPermissionMasks = getPermissionMasks()\n\t\treturn Object.keys(allPermissionMasks).reduce((acc, el) => {\n\t\t\tacc[el] = result.get_effectiveBasePermissions().has(allPermissionMasks[el])\n\t\t\treturn acc\n\t\t}, {})\n\t}\n\n\tasync breakRoleInheritance() {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!title) return undefined\n\t\t\tconst spObject = this.getSPObject(title, clientContext)\n\t\t\tmethodEmpty('breakRoleInheritance')(spObject)\n\t\t\treturn title\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\n\t\treturn result\n\t}\n\n\tasync resetRoleInheritance() {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tif (!title) return undefined\n\t\t\tconst spObject = this.getSPObject(title, clientContext)\n\t\t\tmethodEmpty('resetRoleInheritance')(spObject)\n\t\t\treturn title\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\n\t\treturn result\n\t}\n\n\tcolumn(elements) {\n\t\treturn column(this, elements)\n\t}\n\n\tfolder(elements) {\n\t\treturn folder(this, elements)\n\t}\n\n\titem(elements) {\n\t\treturn item(this, elements)\n\t}\n\n\tpager(params) {\n\t\treturn pager(this, params)\n\t}\n\n\tgetSPObject(elementTitle, clientContext) {\n\t\treturn this.getSPObjectCollection(clientContext)[\n\t\t\tisGUID(elementTitle)\n\t\t\t\t? 'getById'\n\t\t\t\t: 'getByTitle'\n\t\t](elementTitle)\n\t}\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent.getSPObject(clientContext).get_lists()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\twebReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tof(lists) {\n\t\treturn getInstance(this.constructor)(this.parent, lists)\n\t}\n}\n\nclass Library extends List {\n\tconstructor(parent, libraries) {\n\t\tsuper(parent, libraries)\n\t\tthis.name = 'library'\n\t}\n\n\tfile(elements) {\n\t\treturn file(this, elements)\n\t}\n}\n\nexport default (parent, elements, name) => getInstance(name === 'library' ? Library : List)(parent, elements)\n","/* eslint class-methods-use-this:0 */\nimport {\n\tAbstractBox,\n\tgetInstance,\n\tmethodEmpty,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tswitchType,\n\tgetTitleFromUrl,\n\tpopSlash,\n\tpipe,\n\thasUrlTailSlash,\n\tgetWebRelativeUrl,\n\ttypeOf,\n\tshiftSlash,\n\tmergeSlashes,\n\tremoveEmptyUrls,\n\tremoveDuplicatedUrls,\n\twebReport,\n\tisStrictUrl,\n\tdeep1Iterator,\n\tfix,\n\tgetClientContext,\n\tgetParentUrl,\n\texecuteJSOM,\n\tidentity,\n\tisObjectFilled,\n\tprop,\n\tisObject,\n\tisString,\n\turlSplit,\n\tisArray,\n\tisDefined,\n\tisUndefined\n} from '../lib/utility'\n\nconst KEY_PROP = 'Url'\n\nconst buildFolderTree = acc => element => {\n\tlet folder\n\tif (isObject(element)) {\n\t\tconst { Folder, Columns = {} } = element\n\t\tfolder = Folder || Columns.Folder\n\t} else if (isString(element)) {\n\t\tfolder = element\n\t}\n\tconst folders = pipe([popSlash, shiftSlash, urlSplit])(folder)\n\tmutateObjectTreeFromArray(acc)()(folders)\n\treturn acc\n}\n\nconst mutateObjectTreeFromArray = fix(fR => b => parentName => ([h, ...t]) => {\n\tconst base = b\n\tconst currentName = parentName ? `${parentName}/${h}` : h\n\tif (t.length) {\n\t\tif (!base[currentName]) base[currentName] = {}\n\t\treturn fR(base[currentName])(currentName)(t)\n\t}\n\tif (!base[currentName]) base[currentName] = {}\n\treturn undefined\n})\n\nconst buildFoldersTree = elements => {\n\tconst foldersTree = {}\n\tif (isArray(elements)) {\n\t\telements.map(buildFolderTree(foldersTree))\n\t} else {\n\t\tbuildFolderTree(foldersTree)(elements)\n\t}\n\treturn foldersTree\n}\n\nconst arrayValidator = pipe([removeEmptyUrls, removeDuplicatedUrls])\nconst lifter = switchType({\n\tobject: context => {\n\t\tconst newContext = Object.assign({}, context)\n\t\tif (isUndefined(context[KEY_PROP])) newContext[KEY_PROP] = context.ServerRelativeUrl\n\t\tif (context[KEY_PROP] !== '/') newContext[KEY_PROP] = shiftSlash(newContext[KEY_PROP])\n\t\tif (!context.ServerRelativeUrl && context[KEY_PROP]) newContext.ServerRelativeUrl = context[KEY_PROP]\n\t\treturn newContext\n\t},\n\tstring: contextUrl => {\n\t\tconst url = contextUrl === '/' ? '/' : shiftSlash(mergeSlashes(contextUrl))\n\t\treturn {\n\t\t\t[KEY_PROP]: url,\n\t\t\tServerRelativeUrl: url\n\t\t}\n\t},\n\tdefault: () => ({\n\t\t[KEY_PROP]: '',\n\t\tServerRelativeUrl: ''\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.joinProp = 'ServerRelativeUrl'\n\t}\n}\n\nclass FolderWeb {\n\tconstructor(parent, folders) {\n\t\tthis.name = 'folder'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(folders)\n\t\tthis.contextUrl = parent.box.getHeadPropValue()\n\t\tthis.count = this.box.getCount()\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts) {\n\t\tconst { contextUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\tconst isCollection = hasUrlTailSlash(elementUrl)\n\t\t\tconst spObject = isCollection\n\t\t\t\t? this.getSPObjectCollection(elementUrl, clientContext)\n\t\t\t\t: this.getSPObject(elementUrl, clientContext)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst { contextUrl } = this\n\t\tconst getRelativeUrl = getWebRelativeUrl(contextUrl)\n\n\t\tconst property = this.box.prop\n\n\t\tconst foldersMap = this.box.reduce(acc => el => {\n\t\t\tacc[el[property]] = el\n\t\t\treturn acc\n\t\t}, {})\n\t\tconst filteredResult = []\n\n\t\tawait fix(fR => async b => {\n\t\t\tconst names = Reflect.ownKeys(b)\n\t\t\tconst promises = []\n\n\t\t\tfor (let i = 0; i < names.length; i += 1) {\n\t\t\t\tconst name = names[i]\n\t\t\t\tconst element = foldersMap[name]\n\t\t\t\tconst clientContext = getClientContext(contextUrl)\n\t\t\t\tlet elementUrl\n\t\t\t\tif (element) {\n\t\t\t\t\telementUrl = getRelativeUrl(element)\n\t\t\t\t} else {\n\t\t\t\t\telementUrl = name\n\t\t\t\t}\n\n\t\t\t\tconst parentFolderUrl = getParentUrl(elementUrl)\n\t\t\t\tconst spObject = this\n\t\t\t\t\t.getSPObjectCollection(`${parentFolderUrl}/`, clientContext)\n\t\t\t\t\t.add(getTitleFromUrl(elementUrl))\n\n\t\t\t\tload(clientContext, spObject, opts)\n\n\t\t\t\tpromises.push(executeJSOM(clientContext, spObject, opts).catch(identity))\n\t\t\t}\n\n\t\t\tconst result = prepareResponseJSOM(\n\t\t\t\t(await Promise.all(promises)).filter(el => typeOf(el) !== 'error'),\n\t\t\t\topts\n\t\t\t)\n\n\t\t\tresult.reduce((acc, el) => {\n\t\t\t\tif (foldersMap[getRelativeUrl({\n\t\t\t\t\t[KEY_PROP]: el.ServerRelativeUrl\n\t\t\t\t})]) acc.push(el)\n\t\t\t\treturn acc\n\t\t\t}, filteredResult)\n\t\t\tawait Promise.all(names.map(async name => {\n\t\t\t\tconst o = b[name]\n\t\t\t\tif (isObjectFilled(o)) await fR(o)\n\t\t\t\treturn undefined\n\t\t\t}))\n\t\t\treturn undefined\n\t\t})(buildFoldersTree(this.box.getIterable().map(prop(property))))\n\n\t\twebReport('create', {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: getInstance(Box)(filteredResult),\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\n\t\treturn this.box.isArray() ? filteredResult : filteredResult[0]\n\t}\n\n\tasync update(opts = {}) {\n\t\tconst { contextUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\tconst { WelcomePage } = element\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tif (isDefined(WelcomePage)) {\n\t\t\t\tspObject.set_welcomePage(WelcomePage)\n\t\t\t\tspObject.update()\n\t\t\t}\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { noRecycle } = opts\n\t\tconst { contextUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\tif (!isStrictUrl(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tif (!spObject.isRoot) methodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(elementUrl, clientContext) {\n\t\tlet folder\n\t\tconst parentSPObject = this.parent.getSPObject(clientContext)\n\t\tif (elementUrl) {\n\t\t\tfolder = parentSPObject.getFolderByServerRelativeUrl(elementUrl)\n\t\t} else {\n\t\t\tconst rootFolder = parentSPObject.get_rootFolder()\n\t\t\trootFolder.isRoot = true\n\t\t\tfolder = rootFolder\n\t\t}\n\t\treturn folder\n\t}\n\n\tgetSPObjectCollection(elementUrl, clientContext) {\n\t\treturn !elementUrl || elementUrl === '/'\n\t\t\t? this.getSPObject(undefined, clientContext).get_folders()\n\t\t\t: this.getSPObject(popSlash(elementUrl), clientContext).get_folders()\n\t}\n\n\n\treport(actionType, opts = {}) {\n\t\twebReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tof(folders) {\n\t\treturn getInstance(this.constructor)(this.parent, folders)\n\t}\n}\n\nexport default getInstance(FolderWeb)\n","/* eslint class-methods-use-this:0 */\nimport {\n\tAbstractBox,\n\tgetInstance,\n\tmethodEmpty,\n\tprepareResponseJSOM,\n\tload,\n\texecutorJSOM,\n\tisStringEmpty,\n\tgetParentUrl,\n\tprependSlash,\n\tconvertFileContent,\n\tsetFields,\n\thasUrlTailSlash,\n\tmergeSlashes,\n\tgetFolderFromUrl,\n\tgetFilenameFromUrl,\n\texecutorREST,\n\tprepareResponseREST,\n\tgetWebRelativeUrl,\n\tswitchType,\n\tshiftSlash,\n\tpipe,\n\tremoveEmptyUrls,\n\tremoveDuplicatedUrls,\n\twebReport,\n\tremoveEmptyFilenames,\n\thasUrlFilename,\n\tdeep1Iterator,\n\tdeep1IteratorREST\n} from '../lib/utility'\n\nconst KEY_PROP = 'Url'\n\nconst arrayValidator = pipe([removeEmptyUrls, removeDuplicatedUrls])\n\nconst lifter = switchType({\n\tobject: context => {\n\t\tconst newContext = Object.assign({}, context)\n\t\tif (context[KEY_PROP] !== '/') newContext[KEY_PROP] = shiftSlash(newContext[KEY_PROP])\n\t\tif (!context[KEY_PROP] && context.ServerRelativeUrl) newContext[KEY_PROP] = context.ServerRelativeUrl\n\t\tif (!context.ServerRelativeUrl && context[KEY_PROP]) newContext.ServerRelativeUrl = context[KEY_PROP]\n\t\treturn newContext\n\t},\n\tstring: (contextUrl = '') => {\n\t\tconst url = contextUrl === '/' ? '/' : shiftSlash(mergeSlashes(contextUrl))\n\t\treturn {\n\t\t\t[KEY_PROP]: url,\n\t\t\tServerRelativeUrl: url\n\t\t}\n\t},\n\tdefault: () => ({\n\t\t[KEY_PROP]: '',\n\t\tServerRelativeUrl: ''\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.joinProp = 'ServerRelativeUrl'\n\t}\n\n\tgetCount() {\n\t\treturn this.isArray() ? removeEmptyFilenames(this.value).length : hasUrlFilename(this.value[this.prop]) ? 1 : 0\n\t}\n}\n\nclass FileWeb {\n\tconstructor(parent, files) {\n\t\tthis.name = 'file'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(files)\n\t\tthis.contextUrl = parent.box.getHeadPropValue()\n\t\tthis.iterator = deep1Iterator({\n\t\t\tcontextUrl: this.contextUrl,\n\t\t\telementBox: this.box\n\t\t})\n\n\t\tthis.iteratorREST = deep1IteratorREST({\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst {\n\t\t\tasBlob,\n\t\t\tasString,\n\t\t\tasItem\n\t\t} = opts\n\t\tif (asBlob || asString) {\n\t\t\tconst { contextUrl } = this\n\t\t\tconst result = await this.iteratorREST(({ element }) => {\n\t\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\t\treturn executorREST(contextUrl, {\n\t\t\t\t\turl: `${this.getRESTObject(elementUrl, contextUrl)}/$value`,\n\t\t\t\t\tbinaryStringResponseBody: !asString\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn asString ? result.body : prepareResponseREST(result, opts)\n\t\t}\n\t\tconst options = asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(this.contextUrl)(element)\n\t\t\tconst isCollection = isStringEmpty(elementUrl) || hasUrlTailSlash(elementUrl)\n\t\t\tconst spObject = isCollection\n\t\t\t\t? this.getSPObjectCollection(elementUrl, clientContext)\n\t\t\t\t: this.getSPObject(elementUrl, clientContext)\n\t\t\treturn load(clientContext, spObject, options)\n\t\t})\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, options)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst foldersToCreate = this.box.reduce(acc => el => {\n\t\t\tconst { Folder } = el\n\t\t\tconst folder = getParentUrl(getWebRelativeUrl(this.contextUrl)(el)) || Folder\n\t\t\tif (folder) acc.push(folder)\n\t\t\treturn acc\n\t\t})\n\n\t\tif (foldersToCreate.length) {\n\t\t\tawait this.parent.folder(foldersToCreate).get({ view: 'ServerRelativeUrl' }).catch(async () => {\n\t\t\t\tawait this.parent.folder(foldersToCreate).create({ silent: true })\n\t\t\t})\n\t\t}\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(this.contextUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst { Content = '', Overwrite = true } = element\n\t\t\tconst options = opts.asItem ? { ...opts, view: ['ListItemAllFields'] } : { ...opts }\n\t\t\tconst parentSPObject = this\n\t\t\t\t.getSPObjectCollection(getParentUrl(elementUrl), clientContext)\n\t\t\tconst fileCreationInfo = new SP.FileCreationInformation()\n\t\t\tsetFields({\n\t\t\t\tset_url: getFilenameFromUrl(elementUrl),\n\t\t\t\tset_content: convertFileContent(Content),\n\t\t\t\tset_overwrite: Overwrite\n\t\t\t})(fileCreationInfo)\n\t\t\tconst spObject = parentSPObject.add(fileCreationInfo)\n\t\t\treturn load(clientContext, spObject, options)\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n\t\t\t\tawait executorJSOM(clientContexts[i])\n\t\t\t}\n\t\t}\n\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync update(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst { Content } = element\n\t\t\tconst elementUrl = getWebRelativeUrl(this.contextUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst binaryInfo = new SP.FileSaveBinaryInformation()\n\t\t\tif (Content !== undefined) binaryInfo.set_content(convertFileContent(Content))\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tspObject.saveBinary(binaryInfo)\n\t\t\treturn spObject\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tfor (let i = 0; i < clientContexts.length; i += 1) {\n\t\t\t\tconst clientContext = clientContexts[i]\n\t\t\t\tawait executorJSOM(clientContext)\n\t\t\t}\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { noRecycle } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(this.contextUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tmethodEmpty(noRecycle ? 'deleteObject' : 'recycle')(spObject)\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report(noRecycle ? 'delete' : 'recycle', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync copy(opts) {\n\t\tconst { contextUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tspObject.copyTo(getWebRelativeUrl(contextUrl)({ [KEY_PROP]: element.To, Folder: element.Folder }))\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('copy', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync move(opts) {\n\t\tconst { contextUrl } = this\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementUrl = getWebRelativeUrl(contextUrl)(element)\n\t\t\tif (!hasUrlFilename(elementUrl)) return undefined\n\t\t\tconst spObject = this.getSPObject(elementUrl, clientContext)\n\t\t\tspObject.moveTo(getWebRelativeUrl(contextUrl)({ [KEY_PROP]: element.To, Folder: element.Folder }))\n\t\t\treturn elementUrl\n\t\t})\n\t\tif (this.box.getCount()) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('move', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(elementUrl, clientContext) {\n\t\tconst { contextUrl } = this\n\t\tconst folder = getFolderFromUrl(elementUrl)\n\t\tconst filename = getFilenameFromUrl(elementUrl)\n\t\treturn this.parent.getSPObject(clientContext).getFileByServerRelativeUrl(\n\t\t\tmergeSlashes(`/${folder ? `${contextUrl}/${folder}` : contextUrl}/${filename}`)\n\t\t)\n\t}\n\n\tgetSPObjectCollection(elementUrl, clientContext) {\n\t\tconst { contextUrl } = this\n\t\tconst folder = getFolderFromUrl(elementUrl)\n\t\tconst parentSPObject = this.parent.getSPObject(clientContext)\n\t\treturn folder\n\t\t\t? parentSPObject.getFolderByServerRelativeUrl(`/${contextUrl}/${folder}`).get_files()\n\t\t\t: parentSPObject.get_rootFolder().get_files()\n\t}\n\n\tgetRESTObject(elementUrl, contextUrl) {\n\t\tconst filename = getFilenameFromUrl(elementUrl)\n\t\tconst folder = getFolderFromUrl(elementUrl)\n\t\treturn mergeSlashes(\n\t\t\t`/_api/web/getfilebyserverrelativeurl('${prependSlash(\n\t\t\t\tfolder ? `${contextUrl}/${folder}` : contextUrl\n\t\t\t)}/${filename}')`\n\t\t)\n\t}\n\n\treport(actionType, opts = {}) {\n\t\twebReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tcontextUrl: this.contextUrl\n\t\t})\n\t}\n\n\tof(files) {\n\t\treturn getInstance(this.constructor)(this.parent, files)\n\t}\n}\n\nexport default getInstance(FileWeb)\n","import {\n\tgetClientContext,\n\tprepareResponseJSOM,\n\tACTION_TYPES,\n\texecuteJSOM,\n\tgetInstance,\n\treport\n} from '../lib/utility'\n\nclass RecycleBin {\n\tconstructor(parent) {\n\t\tthis.name = 'recycleBin'\n\t\tthis.parent = parent\n\t\tthis.contextUrl = parent.box.getHeadPropValue()\n\t}\n\n\tasync get(opts) {\n\t\tconst clientContext = getClientContext(this.contextUrl)\n\t\tconst result = await executeJSOM(clientContext, this.getSPObjectCollection(clientContext), opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync restoreAll(opts) {\n\t\tconst clientContext = getClientContext(this.contextUrl)\n\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\tspObject.restoreAll()\n\t\tconst result = await executeJSOM(clientContext, spObject, opts)\n\t\tthis.report('restore', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync deleteAll(opts) {\n\t\tconst clientContext = getClientContext(this.contextUrl)\n\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\tspObject.deleteAll()\n\t\tconst result = await executeJSOM(clientContext, spObject, opts)\n\t\tthis.report('delete', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\treport(actionType, opts = {}) {\n\t\treport(`${ACTION_TYPES[actionType]} ${this.name} at ${this.contextUrl}`, opts)\n\t}\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent[\n\t\t\tthis.contextUrl\n\t\t\t\t? 'getSPObject'\n\t\t\t\t: 'getSiteSPObject'\n\t\t](clientContext).get_recycleBin()\n\t}\n}\n\nexport default getInstance(RecycleBin)\n","/* eslint-disable class-methods-use-this */\nimport {\n\tgetInstance,\n\texecutorJSOM,\n\tload,\n\tAbstractBox,\n\tdeep1Iterator,\n\tprepareResponseJSOM,\n\tremoveEmptiesByProp,\n\tremoveDuplicatedProp,\n\tswitchType,\n\tpipe,\n\tsetFields,\n\tgetInstanceEmpty,\n\tlistReport,\n\tisNumber\n} from '../lib/utility'\n\n\nconst KEY_PROP = 'Title'\n\nconst arrayValidator = pipe([removeEmptiesByProp(KEY_PROP), removeDuplicatedProp(KEY_PROP)])\n\nconst lifter = switchType({\n\tobject: user => {\n\t\tconst newGroup = Object.assign({}, user)\n\t\tconst { Title, LoginName } = user\n\t\tnewGroup[KEY_PROP] = LoginName || Title\n\t\tif (!newGroup.LoginName) newGroup.LoginName = newGroup[KEY_PROP]\n\t\treturn newGroup\n\t},\n\tstring: user => ({\n\t\t[KEY_PROP]: user,\n\t\tLoginName: user\n\t}),\n\tnumber: user => ({\n\t\t[KEY_PROP]: user,\n\t\tLoginName: user\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: undefined,\n\t\tLoginName: undefined\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t}\n}\n\nclass GroupUser {\n\tconstructor(parent, groupUsers) {\n\t\tthis.name = 'user'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(groupUsers)\n\t\tthis.groupName = this.parent.box.getHead()[KEY_PROP]\n\t\tthis.count = this.box.getCount()\n\t\tthis.iterator = deep1Iterator({\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element.Title\n\t\t\tconst spObject = title\n\t\t\t\t? this.getSPObject(title, clientContext)\n\t\t\t\t: this.getSPObjectCollection(clientContext)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\t\tconst userCreationInfo = getInstanceEmpty(SP.UserCreationInformation)\n\t\t\tsetFields({\n\t\t\t\tset_email: element.Email,\n\t\t\t\tset_loginName: element.LoginName,\n\t\t\t\tset_title: element[KEY_PROP]\n\t\t\t})(userCreationInfo)\n\t\t\tconst newSPObject = spObject.add(userCreationInfo)\n\t\t\treturn load(clientContext, newSPObject, opts)\n\t\t})\n\n\t\tif (this.count) await Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\n\tasync delete(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\t\tspObject[isNumber(title) ? 'removeById' : 'removeByLoginName'](title)\n\t\t\treturn title\n\t\t})\n\n\t\tif (this.count) await Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('delete', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tgetSPObject(element, clientContext) {\n\t\treturn this.getSPObjectCollection(clientContext)[\n\t\t\tisNumber(element)\n\t\t\t\t? 'getById'\n\t\t\t\t: /@.+\\./.test(element)\n\t\t\t\t\t? 'getByEmail'\n\t\t\t\t\t: 'getByLoginName'\n\t\t](element)\n\t}\n\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent.getSPObject(this.groupName, clientContext).get_users()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\tlistReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tcontextUrl: '/',\n\t\t\tlistUrl: this.groupName\n\t\t})\n\t}\n\n\tof(groupUsers) {\n\t\treturn getInstance(this.constructor)(this.parent, groupUsers)\n\t}\n}\n\nexport default getInstance(GroupUser)\n","/* eslint-disable class-methods-use-this */\nimport {\n\tgetInstance,\n\texecutorJSOM,\n\tload,\n\tAbstractBox,\n\tdeep1Iterator,\n\tprepareResponseJSOM,\n\tremoveEmptiesByProp,\n\tremoveDuplicatedProp,\n\tswitchType,\n\tpipe,\n\twebReport,\n\tgetInstanceEmpty,\n\tsetFields,\n\tisNumber\n} from '../lib/utility'\n\nimport user from './groupUser'\n\nconst KEY_PROP = 'Title'\n\nconst arrayValidator = pipe([removeEmptiesByProp(KEY_PROP), removeDuplicatedProp(KEY_PROP)])\n\nconst lifter = switchType({\n\tobject: group => {\n\t\tconst newGroup = Object.assign({}, group)\n\t\tconst { Title, LoginName } = group\n\t\tnewGroup[KEY_PROP] = LoginName || Title\n\t\tif (!newGroup.LoginName) newGroup.LoginName = newGroup[KEY_PROP]\n\t\treturn newGroup\n\t},\n\tstring: group => ({\n\t\t[KEY_PROP]: group,\n\t\tLoginName: group\n\t}),\n\tnumber: group => ({\n\t\t[KEY_PROP]: group,\n\t\tLoginName: group\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: undefined,\n\t\tLoginName: undefined\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.prop = KEY_PROP\n\t\tthis.joinProp = KEY_PROP\n\t}\n}\n\nclass Group {\n\tconstructor(parent, groups) {\n\t\tthis.name = 'group'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(groups)\n\t\tthis.count = this.box.getCount()\n\t\tthis.iterator = deep1Iterator({\n\t\t\telementBox: this.box\n\t\t})\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element.Title\n\t\t\tconst spObject = title\n\t\t\t\t? this.getSPObject(title, clientContext)\n\t\t\t\t: this.getSPObjectCollection(clientContext)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\t\tconst groupCreationInfo = getInstanceEmpty(SP.GroupCreationInformation)\n\t\t\tsetFields({\n\t\t\t\tset_description: element.Description,\n\t\t\t\tset_title: element[KEY_PROP]\n\t\t\t})(groupCreationInfo)\n\t\t\tconst newSPObject = spObject.add(groupCreationInfo)\n\t\t\tsetFields({\n\t\t\t\tset_allowMembersEditMembership: element.AllowMembersEditMembership,\n\t\t\t\tset_allowRequestToJoinLeave: element.AllowRequestToJoinLeave,\n\t\t\t\tset_autoAcceptRequestToJoinLeave: element.AutoAcceptRequestToJoinLeave,\n\t\t\t\tset_onlyAllowMembersViewMembership: element.OnlyAllowMembersViewMembership,\n\t\t\t\tset_owner: element.Owner,\n\t\t\t\tset_requestToJoinLeaveEmailSetting: element.RequestToJoinLeaveEmailSetting\n\t\t\t})(newSPObject)\n\t\t\tnewSPObject.update()\n\t\t\treturn load(clientContext, newSPObject, opts)\n\t\t})\n\n\t\tif (this.count) await Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync update(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = this.getSPObject(element[KEY_PROP], clientContext)\n\t\t\tsetFields({\n\t\t\t\tset_allowMembersEditMembership: element.AllowMembersEditMembership,\n\t\t\t\tset_allowRequestToJoinLeave: element.AllowRequestToJoinLeave,\n\t\t\t\tset_autoAcceptRequestToJoinLeave: element.AutoAcceptRequestToJoinLeave,\n\t\t\t\tset_description: element.Description,\n\t\t\t\tset_onlyAllowMembersViewMembership: element.OnlyAllowMembersViewMembership,\n\t\t\t\tset_owner: element.Owner,\n\t\t\t\tset_requestToJoinLeaveEmailSetting: element.RequestToJoinLeaveEmailSetting,\n\t\t\t\tset_title: element[KEY_PROP]\n\t\t\t})(spObject)\n\t\t\tspObject.update()\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tif (this.count) await Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts = {}) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst title = element[KEY_PROP]\n\t\t\tconst spObject = this.getSPObjectCollection(clientContext)\n\t\t\tspObject[isNumber(title) ? 'removeById' : 'removeByLoginName'](title)\n\t\t\treturn title\n\t\t})\n\n\t\tif (this.count) await Promise.all(clientContexts.map(executorJSOM))\n\t\tthis.report('delete', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tuser(elements) {\n\t\treturn user(this, elements)\n\t}\n\n\n\tgetSPObject(element, clientContext) {\n\t\treturn this.getSPObjectCollection(clientContext)[isNumber(element) ? 'getById' : 'getByName'](element)\n\t}\n\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.parent.getSPObject(clientContext).get_siteGroups()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\twebReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box,\n\t\t\tcontextUrl: '/'\n\t\t})\n\t}\n\n\tof(groups) {\n\t\treturn getInstance(this.constructor)(this.parent, groups)\n\t}\n}\n\nexport default getInstance(Group)\n","/* eslint-disable class-methods-use-this */\nimport {\n\tAbstractBox,\n\tload,\n\tmethodEmpty,\n\tgetInstance,\n\tprepareResponseJSOM,\n\texecutorJSOM,\n\tswitchType,\n\tshiftSlash,\n\tpipe,\n\tremoveEmptiesByProp,\n\tremoveDuplicatedProp,\n\tsetFields,\n\tgetInstanceEmpty,\n\trootReport,\n\tdeep1Iterator\n} from '../lib/utility'\n\nconst KEY_PROP = 'Label'\n\nconst getTermStore = clientContext => SP\n\t.Taxonomy\n\t.TaxonomySession\n\t.getTaxonomySession(clientContext)\n\t.getDefaultKeywordsTermStore()\n\nconst getTermSet = clientContext => getTermStore(clientContext).get_keywordsTermSet()\n\n\nconst getAllTerms = clientContext => getTermSet(clientContext).getAllTerms()\n\n\nconst arrayValidator = pipe([removeEmptiesByProp(KEY_PROP), removeDuplicatedProp(KEY_PROP)])\n\nconst lifter = switchType({\n\tobject: keyword => {\n\t\tconst newTag = Object.assign({}, keyword)\n\t\tif (keyword[KEY_PROP] !== '/') newTag[KEY_PROP] = shiftSlash(newTag[KEY_PROP])\n\t\treturn newTag\n\t},\n\tstring: keyword => {\n\t\tconst keywordName = keyword === '/' || !keyword ? undefined : keyword\n\t\treturn {\n\t\t\t[KEY_PROP]: keywordName\n\t\t}\n\t},\n\tdefault: () => ({\n\t\t[KEY_PROP]: undefined\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value) {\n\t\tsuper(value, lifter, arrayValidator)\n\t\tthis.joinProp = KEY_PROP\n\t\tthis.prop = KEY_PROP\n\t}\n}\n\nclass Keyword {\n\tconstructor(parent, keywords) {\n\t\tthis.name = 'keyword'\n\t\tthis.parent = parent\n\t\tthis.keywords = keywords\n\t\tthis.box = getInstance(Box)(keywords)\n\t\tthis.count = this.box.getCount()\n\t\tthis.iterator = deep1Iterator({ elementBox: this.box })\n\t}\n\n\tasync get(opts = {}) {\n\t\tconst { isExact = true } = opts\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst spObject = SP.Taxonomy.TaxonomySession.getTaxonomySession(clientContext)\n\t\t\t\t.getDefaultKeywordsTermStore()\n\t\t\t\t.get_keywordsTermSet()\n\t\t\t\t.getTerms(setFields({\n\t\t\t\t\tset_defaultLabelOnly: element.DefaultLabelOnly || false,\n\t\t\t\t\t// set_excludeKeyword: element.ExcludeKeyword || false,\n\t\t\t\t\tset_resultCollectionSize: element.ResultCollectionSize || element.Limit || 100000,\n\t\t\t\t\tset_stringMatchOption: SP.Taxonomy.StringMatchOption[isExact ? 'exactMatch' : 'startsWith'],\n\t\t\t\t\tset_termLabel: element[KEY_PROP],\n\t\t\t\t\tset_trimDepricated: element.TrimDepricated || true,\n\t\t\t\t\tset_trimUnavailable: element.TrimUnavailable || true\n\t\t\t\t})(SP.Taxonomy.LabelMatchInformation.newObject(clientContext)))\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\n\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\treturn prepareResponseJSOM(!this.box.isArray() && isExact ? result[0] : result, opts)\n\t}\n\n\tasync search(opts) {\n\t\treturn this.get({ ...opts, isExact: false })\n\t}\n\n\tasync create(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementLabel = element[KEY_PROP]\n\t\t\tif (!elementLabel) return undefined\n\t\t\tconst spObject = getTermSet(clientContext).createTerm(\n\t\t\t\telementLabel,\n\t\t\t\t1033,\n\t\t\t\tgetInstanceEmpty(SP.Guid.newGuid).toString()\n\t\t\t)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync update(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementLabel = element[KEY_PROP]\n\t\t\tif (!elementLabel) return undefined\n\t\t\tconst spObject = this.getSPObject(elementLabel, clientContext)\n\t\t\tsetFields({\n\t\t\t\tset_isAvailableForTagging: element.IsAvailableForTagging,\n\t\t\t\tset_name: element.Name,\n\t\t\t\tset_owner: element.Owner\n\t\t\t})(spObject)\n\t\t\treturn load(clientContext, spObject, opts)\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync delete(opts) {\n\t\tconst { clientContexts, result } = await this.iterator(({ clientContext, element }) => {\n\t\t\tconst elementLabel = element[KEY_PROP]\n\t\t\tif (!elementLabel) return undefined\n\t\t\tconst termStore = getTermStore(clientContext)\n\t\t\tconst spObject = this.getSPObject(elementLabel, clientContext)\n\t\t\tmethodEmpty('deleteObject')(spObject)\n\t\t\tmethodEmpty('commitAll')(termStore)\n\t\t\treturn elementLabel\n\t\t})\n\t\tif (this.count) {\n\t\t\tawait Promise.all(clientContexts.map(executorJSOM))\n\t\t}\n\t\tthis.report('delete', opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\treport(actionType, opts = {}) {\n\t\trootReport(actionType,\n\t\t\t{\n\t\t\t\t...opts,\n\t\t\t\tname: this.name,\n\t\t\t\tbox: this.box\n\t\t\t})\n\t}\n\n\tgetSPObject(elementUrl, clientContext) {\n\t\treturn getAllTerms(clientContext).getByName(elementUrl)\n\t}\n}\n\nexport default getInstance(Keyword)\n","import {\n\tACTION_TYPES,\n\tAbstractBox,\n\tgetArray,\n\tmap,\n\tgetInstance,\n\tswitchType,\n\tidentity,\n\treport,\n\texecutorREST,\n\tprepareResponseREST\n} from '../lib/utility'\n\n\nconst EMAIL_RE = /\\S+@\\S+\\.\\S+/\nconst KEY_PROP = 'To'\n\nconst lifter = switchType({\n\tobject: identity,\n\tdefault: () => ({\n\t\t[KEY_PROP]: ''\n\t})\n})\n\nclass Box extends AbstractBox {\n\tconstructor(value = '') {\n\t\tsuper(value, lifter)\n\t\tthis.joinProp = KEY_PROP\n\t\tthis.prop = KEY_PROP\n\t}\n\n\tgetCount() {\n\t\treturn this.isArray() ? this.value.length : 1\n\t}\n}\n\nclass Mail {\n\tconstructor(parent, params) {\n\t\tthis.name = 'mail'\n\t\tthis.parent = parent\n\t\tthis.box = getInstance(Box)(params)\n\t\tthis.count = this.box.getCount()\n\t\tthis.user = parent.user.bind(parent)\n\t}\n\n\tasync send(opts = {}) {\n\t\tconst {\n\t\t\tisFake,\n\t\t\tdetailed\n\t\t} = opts\n\t\tconst result = await this.box.chain(async element => {\n\t\t\tconst {\n\t\t\t\tFrom,\n\t\t\t\tTo,\n\t\t\t\tSubject,\n\t\t\t\tBody\n\t\t\t} = element\n\t\t\tconst recievers = getArray(To)\n\t\t\tif (!recievers.length) throw new Error('Recievers are missed')\n\t\t\tif (!Subject) throw new Error('Subject is missed')\n\t\t\tif (!Body) throw new Error('Body is missed')\n\n\t\t\tconst availableRecievers = []\n\t\t\tconst missedUsers = []\n\n\t\t\tmap(el => (EMAIL_RE.test(el) ? availableRecievers : missedUsers).push(el))(recievers)\n\n\t\t\tconst recieversEmails = availableRecievers\n\t\t\tlet senderEmail = From\n\n\t\t\tif (!From) {\n\t\t\t\tconst sender = await this.user().get({ isSP: true, view: 'Email' })\n\t\t\t\tsenderEmail = sender.Email\n\t\t\t}\n\t\t\tif (isFake) return undefined\n\n\t\t\tconst response = await executorREST('/', {\n\t\t\t\turl: '/_api/SP.Utilities.Utility.SendEmail',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json;odata=verbose',\n\t\t\t\t\t'Content-Type': 'application/json;odata=verbose'\n\t\t\t\t},\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t__metadata: {\n\t\t\t\t\t\t\ttype: 'SP.Utilities.EmailProperties'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tFrom: senderEmail,\n\t\t\t\t\t\tTo: {\n\t\t\t\t\t\t\tresults: recieversEmails\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSubject,\n\t\t\t\t\t\tBody\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tif (detailed) {\n\t\t\t\treport(`Mail is sent\\nSender: ${senderEmail}\\nRecievers: ${recieversEmails.join(', ')}`, opts)\n\t\t\t}\n\n\t\t\treturn prepareResponseREST(response, opts)\n\t\t})\n\t\treport(`${ACTION_TYPES.send} ${this.count} ${this.name}${this.count > 1 ? '(s)' : ''}`, opts)\n\t\treturn result\n\t}\n\n\tof(params) {\n\t\treturn getInstance(this.constructor)(params)\n\t}\n}\n\nexport default getInstance(Mail)\n","/* eslint class-methods-use-this:0 */\nimport {\n\tgetClientContext,\n\tprepareResponseJSOM,\n\texecuteJSOM,\n\tgetInstance\n} from '../lib/utility'\n\nclass Time {\n\tconstructor(parent) {\n\t\tthis.name = 'time'\n\t\tthis.parent = parent\n\t\tthis.contextUrl = this.parent.contextUrl || '/'\n\t}\n\n\tasync get() {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => new SP.RequestExecutor(this.contextUrl).executeAsync({\n\t\t\t\turl: '/_api/web/RegionalSettings/TimeZone',\n\t\t\t\tsuccess(res) {\n\t\t\t\t\tresolve(new Date(res.headers.DATE))\n\t\t\t\t},\n\t\t\t\terror: reject\n\t\t\t})\n\t\t)\n\t}\n\n\tasync getZone(opts) {\n\t\tconst clientContext = getClientContext(this.contextUrl)\n\t\tconst spObject = this.parent.getSPObject(clientContext).get_regionalSettings().get_timeZone()\n\t\tconst result = await executeJSOM(clientContext, spObject, opts)\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n}\n\nexport default getInstance(Time)\n","/* eslint class-methods-use-this:0 */\nimport { MD5 } from 'crypto-js'\nimport {\n\tAbstractBox,\n\tgetClientContext,\n\tprepareResponseJSOM,\n\tsetFields,\n\tpipe,\n\tmethodEmpty,\n\tgetInstance,\n\toverstep,\n\texecuteJSOM,\n\texecutorJSOM,\n\tgetInstanceEmpty,\n\tmethodI,\n\tgetParentUrl,\n\thasUrlTailSlash,\n\trootReport,\n\tisStrictUrl,\n\tswitchType,\n\tremoveEmptyUrls,\n\tremoveDuplicatedUrls,\n\tshiftSlash,\n\tgetTitleFromUrl,\n\tgetPermissionMasks\n} from '../lib/utility'\n\n\nimport search from './search'\nimport list from './list'\nimport folder from './folderWeb'\nimport file from './fileWeb'\nimport recycleBin from './recycleBin'\nimport user from './user'\nimport group from './group'\nimport keyword from './keyword'\nimport mail from './mail'\nimport time from './time'\n\nconst KEY_PROP = 'Url'\n\nconst arrayValidator = pipe([removeEmptyUrls, removeDuplicatedUrls])\n\nconst lifter = switchType({\n\tobject: context => {\n\t\tconst newContext = Object.assign({ [KEY_PROP]: '', Title: '' }, context)\n\t\tif (!context[KEY_PROP] && context.Title) newContext[KEY_PROP] = context.Title\n\t\tif (context[KEY_PROP] !== '/') newContext[KEY_PROP] = shiftSlash(newContext[KEY_PROP])\n\t\tif (!context.Title && context[KEY_PROP]) newContext.Title = getTitleFromUrl(context[KEY_PROP])\n\t\tnewContext[KEY_PROP] = newContext[KEY_PROP].replace('file:///', '')\n\t\treturn newContext\n\t},\n\tstring: (contextUrl = '') => ({\n\t\t[KEY_PROP]: contextUrl === '/' ? '/' : shiftSlash(contextUrl.replace('file:///', '')),\n\t\tTitle: getTitleFromUrl(contextUrl)\n\t}),\n\tdefault: () => ({\n\t\t[KEY_PROP]: '',\n\t\tTitle: ''\n\t})\n})\n\nclass Web {\n\tconstructor(urls) {\n\t\tthis.name = 'web'\n\t\tthis.box = getInstance(AbstractBox)(urls, lifter, arrayValidator)\n\t\tthis.id = MD5(new Date().getTime()).toString()\n\t}\n\n\tasync get(opts) {\n\t\tconst result = await this.box.chain(async element => {\n\t\t\tconst elementUrl = element[KEY_PROP]\n\t\t\tconst clientContext = getClientContext(elementUrl)\n\t\t\tconst spObject = hasUrlTailSlash(elementUrl)\n\t\t\t\t? this.getSPObjectCollection(clientContext)\n\t\t\t\t: this.getSPObject(clientContext)\n\t\t\treturn executeJSOM(clientContext, spObject, opts)\n\t\t})\n\t\treturn prepareResponseJSOM(result, opts)\n\t}\n\n\tasync create(opts) {\n\t\tconst values = this.box.getIterable()\n\t\tconst result = []\n\t\tfor (let i = 0; i < values.length; i += 1) {\n\t\t\tconst element = values[i]\n\t\t\tconst parentElementUrl = getParentUrl(element[KEY_PROP])\n\t\t\tconst clientContext = getClientContext(parentElementUrl)\n\t\t\tconst spObject = pipe([\n\t\t\t\tgetInstanceEmpty,\n\t\t\t\tsetFields({\n\t\t\t\t\tset_title: element.Title,\n\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\tset_language: element.Language || 1033,\n\t\t\t\t\tset_url: element.Title,\n\t\t\t\t\tset_useSamePermissionsAsParentSite: element.UseSamePermissionsAsParentSite || true,\n\t\t\t\t\tset_webTemplate: element.WebTemplate\n\t\t\t\t}),\n\t\t\t\tmethodI('add')(this.getSPObjectCollection(clientContext)),\n\t\t\t\toverstep(\n\t\t\t\t\tsetFields({\n\t\t\t\t\t\tset_alternateCssUrl: element.AlternateCssUrl,\n\t\t\t\t\t\tset_associatedMemberGroup: element.AssociatedMemberGroup,\n\t\t\t\t\t\tset_associatedOwnerGroup: element.AssociatedOwnerGroup,\n\t\t\t\t\t\tset_associatedVisitorGroup: element.AssociatedVisitorGroup,\n\t\t\t\t\t\tset_customMasterUrl: element.CustomMasterUrl,\n\t\t\t\t\t\tset_enableMinimalDownload: element.EnableMinimalDownload,\n\t\t\t\t\t\tset_masterUrl: element.MasterUrl,\n\t\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\t\tset_quickLaunchEnabled: element.QuickLaunchEnabled,\n\t\t\t\t\t\tset_saveSiteAsTemplateEnabled: element.SaveSiteAsTemplateEnabled,\n\t\t\t\t\t\tset_serverRelativeUrl: element.ServerRelativeUrl,\n\t\t\t\t\t\tset_siteLogoUrl: element.SiteLogoUrl,\n\t\t\t\t\t\tset_syndicationEnabled: element.SyndicationEnabled,\n\t\t\t\t\t\tset_treeViewEnabled: element.TreeViewEnabled,\n\t\t\t\t\t\tset_uiVersion: element.UiVersion,\n\t\t\t\t\t\tset_uiVersionConfigurationEnabled: element.UiVersionConfigurationEnabled\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t\toverstep(methodEmpty('update'))\n\t\t\t])(SP.WebCreationInformation)\n\n\t\t\ttry {\n\t\t\t\tresult.push(await executeJSOM(clientContext, spObject, opts))\n\t\t\t} catch (err) {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\n\t\tthis.report('create', opts)\n\t\treturn prepareResponseJSOM(this.box.isArray() ? result : result[0], opts)\n\t}\n\n\tasync update(opts) {\n\t\tconst values = this.box.getIterable()\n\t\tconst result = []\n\t\tfor (let i = 0; i < values.length; i += 1) {\n\t\t\tconst element = values[i]\n\t\t\tconst elementUrl = element[KEY_PROP]\n\t\t\tif (!isStrictUrl(elementUrl)) return undefined\n\t\t\tconst clientContext = getClientContext(elementUrl)\n\t\t\tconst spObject = pipe([\n\t\t\t\tsetFields({\n\t\t\t\t\tset_title: element.Title || undefined,\n\t\t\t\t\tset_description: element.Description,\n\t\t\t\t\tset_alternateCssUrl: element.AlternateCssUrl,\n\t\t\t\t\tset_associatedMemberGroup: element.AssociatedMemberGroup,\n\t\t\t\t\tset_associatedOwnerGroup: element.AssociatedOwnerGroup,\n\t\t\t\t\tset_associatedVisitorGroup: element.AssociatedVisitorGroup,\n\t\t\t\t\tset_customMasterUrl: element.CustomMasterUrl,\n\t\t\t\t\tset_enableMinimalDownload: element.EnableMinimalDownload,\n\t\t\t\t\tset_masterUrl: element.MasterUrl,\n\t\t\t\t\tset_objectVersion: element.ObjectVersion,\n\t\t\t\t\tset_quickLaunchEnabled: element.QuickLaunchEnabled,\n\t\t\t\t\tset_saveSiteAsTemplateEnabled: element.SaveSiteAsTemplateEnabled,\n\t\t\t\t\tset_serverRelativeUrl: element.ServerRelativeUrl,\n\t\t\t\t\tset_siteLogoUrl: element.SiteLogoUrl,\n\t\t\t\t\tset_syndicationEnabled: element.SyndicationEnabled,\n\t\t\t\t\tset_treeViewEnabled: element.TreeViewEnabled,\n\t\t\t\t\tset_uiVersion: element.UiVersion,\n\t\t\t\t\tset_uiVersionConfigurationEnabled: element.UiVersionConfigurationEnabled\n\t\t\t\t}),\n\t\t\t\toverstep(methodEmpty('update'))\n\t\t\t])(this.getSPObject(clientContext))\n\t\t\ttry {\n\t\t\t\tresult.push(await executeJSOM(clientContext, spObject, opts))\n\t\t\t} catch (err) {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\t\tthis.report('update', opts)\n\t\treturn prepareResponseJSOM(this.box.isArray() ? result : result[0], opts)\n\t}\n\n\tasync delete(opts) {\n\t\tconst values = this.box.getIterable()\n\t\tfor (let i = 0; i < values.length; i += 1) {\n\t\t\tconst element = values[i]\n\t\t\tconst elementUrl = element[KEY_PROP]\n\t\t\tif (!isStrictUrl(elementUrl)) throw new Error('Wrong context url')\n\t\t\tconst clientContext = getClientContext(elementUrl)\n\t\t\tconst spObject = this.getSPObject(clientContext)\n\t\t\ttry {\n\t\t\t\tspObject.deleteObject()\n\t\t\t\tawait executorJSOM(clientContext)\n\t\t\t} catch (err) {\n\t\t\t\tthrow err\n\t\t\t}\n\t\t}\n\t\tthis.report('delete', opts)\n\t\treturn undefined\n\t}\n\n\tasync doesUserHavePermissions(type = 'fullMask') {\n\t\tconst result = await this.box.chain(async element => {\n\t\t\tconst clientContext = getClientContext(element[KEY_PROP])\n\t\t\tconst ob = getInstanceEmpty(SP.BasePermissions)\n\t\t\tconst permissionId = getPermissionMasks()[type]\n\t\t\tif (permissionId === undefined) throw new Error('Permission mask has invalid value')\n\t\t\tob.set(permissionId)\n\t\t\tconst spObject = this.getSPObject(clientContext).doesUserHavePermissions(ob)\n\t\t\tawait executorJSOM(clientContext)\n\t\t\treturn spObject.get_value()\n\t\t})\n\t\treturn result\n\t}\n\n\tasync getPermissions() {\n\t\tconst result = await this.box.chain(async element => {\n\t\t\tconst clientContext = getClientContext(element[KEY_PROP])\n\t\t\treturn executeJSOM(clientContext, this.getSPObject(clientContext), { view: 'EffectiveBasePermissions' })\n\t\t})\n\n\t\tconst allPermissionMasks = getPermissionMasks()\n\t\treturn Object.keys(allPermissionMasks).reduce((acc, el) => {\n\t\t\tacc[el] = result.get_effectiveBasePermissions().has(allPermissionMasks[el])\n\t\t\treturn acc\n\t\t}, {})\n\t}\n\n\tasync breakRoleInheritance() {\n\t\treturn this.box.chain(async element => {\n\t\t\tconst clientContext = getClientContext(element[KEY_PROP])\n\t\t\tconst spObject = this.getSPObject(clientContext)\n\t\t\tmethodEmpty('breakRoleInheritance')(spObject)\n\t\t\treturn executorJSOM(clientContext)\n\t\t})\n\t}\n\n\tasync resetRoleInheritance() {\n\t\treturn this.box.chain(async element => {\n\t\t\tconst clientContext = getClientContext(element[KEY_PROP])\n\t\t\tconst spObject = this.getSPObject(clientContext)\n\t\t\tmethodEmpty('resetRoleInheritance')(spObject)\n\t\t\treturn executorJSOM(clientContext)\n\t\t})\n\t}\n\n\tasync getSite(opts) {\n\t\tconst clientContext = getClientContext('/')\n\t\tconst spObject = this.getSiteSPObject(clientContext)\n\t\tconst currentSPObjects = await executeJSOM(clientContext, spObject, opts)\n\t\treturn prepareResponseJSOM(currentSPObjects, opts)\n\t}\n\n\tasync getCustomListTemplates(opts) {\n\t\tconst clientContext = getClientContext('/')\n\t\tconst spObject = this.getSiteSPObject(clientContext)\n\t\tconst templates = spObject.getCustomListTemplates(clientContext.get_web())\n\t\tconst currentSPObjects = await executeJSOM(clientContext, templates, opts)\n\t\treturn prepareResponseJSOM(currentSPObjects, opts)\n\t}\n\n\tasync getWebTemplates(opts) {\n\t\tconst clientContext = getClientContext('/')\n\t\tconst spObject = this.getSiteSPObject(clientContext)\n\t\tconst templates = spObject.getWebTemplates(1033, 0)\n\t\tconst currentSPObjects = await executeJSOM(clientContext, templates, opts)\n\t\treturn prepareResponseJSOM(currentSPObjects, opts)\n\t}\n\n\trecycleBin() {\n\t\treturn recycleBin(this)\n\t}\n\n\tlist(elements) {\n\t\treturn list(this, elements, 'list')\n\t}\n\n\tlibrary(elements) {\n\t\treturn list(this, elements, 'library')\n\t}\n\n\tfolder(elements) {\n\t\treturn folder(this, elements)\n\t}\n\n\tfile(elements) {\n\t\treturn file(this, elements)\n\t}\n\n\tsearch(elements) {\n\t\treturn search(this, elements)\n\t}\n\n\tkeyword(elements) {\n\t\treturn keyword(this, elements)\n\t}\n\n\tuser(elements) {\n\t\treturn user(this, elements)\n\t}\n\n\tuserSP(elements) {\n\t\treturn user(this, elements, true)\n\t}\n\n\tgroup(elements) {\n\t\treturn group(this, elements)\n\t}\n\n\tmail(elements) {\n\t\treturn mail(this, elements)\n\t}\n\n\ttime() {\n\t\treturn time(this)\n\t}\n\n\tgetSPObject(clientContext) {\n\t\treturn clientContext.get_web()\n\t}\n\n\tgetSiteSPObject(clientContext) {\n\t\treturn clientContext.get_site()\n\t}\n\n\tgetSPObjectCollection(clientContext) {\n\t\treturn this.getSPObject(clientContext).get_webs()\n\t}\n\n\treport(actionType, opts = {}) {\n\t\trootReport(actionType, {\n\t\t\t...opts,\n\t\t\tname: this.name,\n\t\t\tbox: this.box\n\t\t})\n\t}\n\n\tof(urls) {\n\t\treturn getInstance(this.constructor)(urls)\n\t}\n}\n\nexport default getInstance(Web)\n"],"names":["from","to","f","opts","ophop","defineProp","undefined","MAX_ARRAY_LENGTH","ECMAScript","Object","prototype","toString","hasOwnProperty","Class","v","call","replace","HasProperty","o","p","HasOwnProperty","IsCallable","ToInt32","ToUint32","LN2","Math","abs","floor","log","min","pow","round","configureProperties","obj","getOwnPropNames","i","props","length","value","writable","enumerable","configurable","defineProperty","e","desc","TypeError","__defineGetter__","get","__defineSetter__","set","getOwnPropertyNames","push","makeArrayAccessors","RangeError","makeArrayAccessor","index","_getter","_setter","as_signed","bits","s","as_unsigned","packI8","n","unpackI8","bytes","packU8","unpackU8","packU8Clamped","Number","packI16","unpackI16","packU16","unpackU16","packI32","unpackI32","packU32","unpackU32","packIEEE754","ebits","fbits","str","bias","roundToEven","w","Infinity","reverse","join","parseInt","substring","unpackIEEE754","j","b","NaN","unpackF64","packF64","unpackF32","packF32","ArrayBuffer","this","byteLength","_bytes","exports","ArrayBufferView","makeConstructor","bytesPerElement","pack","unpack","ctor","buffer","byteOffset","array","sequence","arguments","constructor","BYTES_PER_ELEMENT","_pack","_unpack","SyntaxError","offset","len","d","tmp","subarray","start","end","clamp","max","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","r","u16array","IS_BIG_ENDIAN","DataView","makeGetter","arrayType","littleEndian","uint8Array","Boolean","makeSetter","typeArray","byteArray","getUint8","getInt8","getUint16","getInt16","getUint32","getInt32","getFloat32","getFloat64","setUint8","setInt8","setUint16","setInt16","setUint32","setInt32","setFloat32","setFloat64","ACTION_TYPES","create","update","delete","recycle","copy","move","restore","clear","erase","send","FILE_LIST_TEMPLATES","LIBRARY_STANDART_COLUMN_NAMES","AppAuthor","AppEditor","Author","CheckedOutTitle","CheckedOutUserId","CheckoutUser","ContentTypeId","Created","Created_x0020_By","Created_x0020_Date","DocConcurrencyNumber","Editor","FSObjType","FileDirRef","FileLeafRef","FileRef","File_x0020_Size","File_x0020_Type","FolderChildCount","GUID","HTML_x0020_File_x0020_Type","ID","InstanceID","IsCheckedoutToLocal","ItemChildCount","Last_x0020_Modified","MetaInfo","Modified","Modified_x0020_By","Order","ParentLeafName","ParentVersionString","ProgId","ScopeId","SortBehavior","SyncClientId","TemplateUrl","UniqueId","VirusStatus","WorkflowInstanceID","WorkflowVersion","owshiddenversion","xd_ProgID","xd_Signature","_CheckinComment","_CopySource","_HasCopyDestinations","_IsCurrentVersion","_Level","_ModerationComments","_ModerationStatus","_SharedFileIndex","_SourceUrl","_UIVersion","_UIVersionString","ImageHeight","ImageWidth","PreviewExists","ThumbnailExists","typeOf","variable","slice","toLowerCase","COMBINATOR","I","x","K","A","U","Y","g","C","y","S","SI","SA","SIA","identity","constant","fix","flip","overstep","curry2","ifThen","predicate","onTrue","onFalse","switchCase","condition","cases","caseF","default","switchType","sum","gt","stringTest","re","test","stringReplace","stringMatch","match","stringCut","stringSplit","split","stringTrim","trim","getArray","map","xs","filter","delim","removeUndefineds","concat","reduce","init","object","flatten","acc","pipe","isArray","arrayHead","arrayTail","arrayLast","arrayInit","EMPTY_ARRAY","chunkArray","size","chunk","chunkArrayFrom","removeEmptiesByProp","property","removeDuplicatedProp","values","methodEmpty","m","method","arg","methodI","apply","args","prop","name","keys","getInstance","getInstanceEmpty","NULL","climb","fr","h","t","toBoolean","not","FALSE","isNumber","sample","isString","isObject","isBlob","type","isGUID","isNull","isNotNull","isUndefined","isDefined","isNotZero","isNotNaN","isNumberFilled","isStringEmpty","isStringFilled","isArrayFilled","isArrayEmpty","isObjectFilled","isNotError","isExists","isFilled","number","string","null","hasProp","isPropExists","isPropFilled","tryCatch","tryer","catcher","data","err","throwError","msg","Error","report","silent","silentInfo","console","rootReport","actionType","box","detailed","count","getCount","webReport","contextUrl","listReport","listUrl","grouper","reduceDirty","by","el","elValue","trueValue","get_lookupId","groupValue","fR","Reflect","ownKeys","childEl","mapper","hasUrlTailSlash","hasUrlFilename","removeEmptyUrls","removeEmptyFilenames","Url","removeDuplicatedUrls","prependSlash","popSlash","shiftSlash","mergeSlashes","urlSplit","getTitleFromUrl","urlJoin","getParentUrl","getFolderFromUrl","getFilenameFromUrl","isStrictUrl","url","getListRelativeUrl","webUrl","element","Folder","folder","getWebRelativeUrl","AbstractBox","lifter","arrayValidator","joinProp","some","Promise","all","_this","deep1Iterator","elementBox","bundleSize","totalElements","clientContext","getClientContext","clientContexts","chain","result","deep1IteratorREST","newClientContext","SP","ClientContext","normalizedUrl","set_requestTimeout","getSPObjectValues","asItem","get_fieldValues","get_objectData","JSON","stringify","getRESTValues","parse","prepareResponseJSOM","results","expanded","groupBy","mapBy","prepareResponseREST","getViewOption","view","load","spObject","executorJSOM","resolve","reject","executeQueryAsync","sender","cid","get_errorTraceCorrelationId","get_message","get_errorValue","get_errorTypeName","executeJSOM","spObjects","executorREST","RequestExecutor","executor","executeAsync","success","error","res","silentErrors","body","message","statusText","statusCode","CHARS","ascii","indices","_this2","cache","c","btoa","window","b64","code","charCodeAt","pads","convertFileContent","arraybuffer","String","fromCharCode","setItemSP","item","set_item","getSPFolderByUrl","initUrl","setItem","fieldsInfo","fields","fieldInfo","fieldValues","InternalName","setLookupAndUser","TypeAsString","setLookup","FieldLookupValue","setLookupMulti","FieldUserValue","get_label","get_termGuid","setLookupValue","setFields","source","target","getRequestDigest","axios","headers","Accept","then","GetContextWebInformation","FormDigestValue","getPermissionMasks","permissionKind","PermissionKind","kind","query","assign","parent","getHeadPropValue","rowsPerPage","RowsPerPage","StartRow","searchExecutor","Microsoft","SharePoint","Client","Search","Query","SearchExecutor","keywordQuery","KeywordQuery","set_queryText","set_clientType","ClientType","set_queryTemplate","QueryTemplate","set_refiners","Refiners","set_rowsPerPage","set_totalRowsExactMinimum","TotalRowsExactMinimum","set_blockDedupeMode","BlockDedupeMode","set_bypassResultTypes","BypassResultTypes","set_collapseSpecification","CollapseSpecification","set_culture","Culture","set_desiredSnippetLength","DesiredSnippetLength","set_enableInterleaving","EnableInterleaving","set_enableNicknames","EnableNicknames","set_enableOrderHitHighlightedProperty","EnableOrderHitHighlightedProperty","set_enablePhonetic","EnablePhonetic","set_enableQueryRules","EnableQueryRules","set_enableSorting","EnableSorting","set_enableStemming","EnableStemming","set_generateBlockRankLog","GenerateBlockRankLog","set_hiddenConstrains","HiddenConstrains","set_hitHighlightedMultivaluePropertyLimit","HitHighlightedMultivaluePropertyLimit","set_impressionID","ImpressionID","set_maxSnippetLength","MaxSnippetLength","set_personalizationData","PersonalizationData","set_processBestBets","ProcessBestBets","set_processPersonalFavorites","ProcessPersonalFavorites","set_queryTag","QueryTag","set_rankingModelId","RankingModelId","set_refinementFilters","RefinementFilters","set_reorderingRules","ReorderingRules","set_resultsUrl","ResultsUrl","set_rowLimit","RowLimit","set_startRow","set_showPeopleNameSuggestions","ShowPeopleNameSuggestions","set_summaryLength","SummaryLength","set_timeZoneId","TimeZoneId","set_timeout","Timeout","set_trimDuplicates","TrimDuplicates","set_trimDuplicatesIncludeId","TrimDuplicatesIncludeId","set_uiLanguage","UiLanguage","executeQuery","get_value","page","KEY_PROP","column","newColumn","EntityPropertyName","StaticName","Type","Box","Column","columns","iterator","elementTitle","getSPObjectCollection","getSPObject","title","spParentObject","Title","AllowMultipleValues","LookupWebId","LookupList","LookupField","MaxLength","RichText","SchemaXml","castTo","spFieldObject","_this3","schema","addFieldAsXml","AddFieldOptions","defaultValue","set_defaultValue","DefaultValue","set_description","Description","set_direction","Direction","set_enforceUniqueValues","EnforceUniqueValues","set_fieldTypeKind","FieldTypeKind","set_group","Group","set_hidden","Hidden","set_indexed","Indexed","set_jsLink","JsLink","set_objectVersion","ObjectVersion","set_readOnlyField","ReadOnlyField","set_required","Required","set_schemaXml","set_staticName","set_title","set_typeAsString","set_validationFormula","ValidationFormula","set_validationMessage","ValidationMessage","Text","FieldText","Note","FieldMultiLineText","Likes","FieldNumber","Field","Choice","FieldMultiChoice","FieldChoice","DateTime","FieldDateTime","URL","FieldUrl","RatingCount","FieldRatingScale","AverageRating","Lookup","FieldLookup","LookupMulti","User","FieldUser","UserMulti","_this4","_this5","deleteObject","get_fields","cacheCombinator","filterNotEmpty","base","buildFolderTree","Columns","folders","mutateObjectTreeFromArray","parentName","currentName","buildFoldersTree","context","newContext","ServerRelativeUrl","FolderList","hasColumns","options","elementUrl","getRelativeUrl","cacheColumns","foldersMap","filteredResult","names","promises","newColumns","itemCreationInfo","ListItemCreationInformation","set_underlyingObjectType","FileSystemObjectType","set_leafName","addItem","get_folder","catch","getIterable","WelcomePage","get_listItemAllFields","set_welcomePage","noRecycle","_this6","isRoot","parentSPObject","get_rootFolder","rootFolder","get_folders","copyOrMove","isMove","iteratorREST","To","OnlyContent","targetWebUrl","WebUrl","targetListUrl","ListUrl","targetFileUrl","spxSourceList","of","spxSourceFile","file","spxTargetList","library","fullTargetFileUrl","columnsToUpdate","existedColumnsToUpdate","sourceFileData","columnName","columnKeys","forced","asBlob","OnProgress","Overwrite","Content","createWithRESTFromString","needResponse","filename","filesUrl","getRESTObjectCollection","response","createWithRESTFromBlob","requiredInputs","__REQUESTDIGEST","__VIEWSTATE","__EVENTVALIDATION","inputs","listGUID","listFormMatches","founds","inputRE","exec","id","form","document","createElement","innerHTML","formData","FormData","append","onUploadProgress","loaded","total","errorMsgMatches","defaultList","customList","customIdColumn","customQuery","FileList","files","getRESTObject","binaryStringResponseBody","listProps","Id","listForms","foldersToCreate","fieldsToUpdate","fieldName","field","binaryInfo","FileSaveBinaryInformation","set_content","set_fieldValues","saveBinary","get_file","rootSPFolder","getRootFolder","get_files","getByUrl","folderUrl","GROUP_REGEXP","RegExp","GROUP_BRACES_REGEXP","TIME_STAMP_ISO_REGEXP","COLUMN_TYPES","Attachments","BaseName","ContentType","DocIcon","Edit","EncodedAbsUrl","HTML_x0020_Type","LinkFilename","LinkFilename2","LinkFilenameNoMenu","LinkTitle","LinkTitle2","LinkTitleNoMenu","PermMask","SelectTitle","ServerUrl","_EditMenuTableEnd","_EditMenuTableStart","_EditMenuTableStart2","COLUMN_TYPES_REGEXP","OPERATORS_REGEXP","COLUMN_TYPES_MAPPED","text","note","integer","counter","boolean","lookup","lookupmulti","user","usermulti","datetime","date","time","currency","computed","modstat","guid","attachments","taxonomyfieldtype","taxonomyfieldtypemulti","OPERATORS_MAPPED","eq","neq","geq","leq","lt","isnull","isnotnull","beginswith","contains","includes","notincludes","in","membership","search","MEMBERSHIP_VALUES","users","group","groups","GROUP_OPERATORS_MAPPED","normalizeOperator","operator","getStringFromOuterBraces","trimBraces","substr","openBracesCount","convertExpression","operatorMatch","fieldOption","valueOpts","operatorMatches","operatorNorm","strSplits","columnSplits","shift","Date","toISOString","typeNorm","valueStrings","valueChunks","indexOf","valueItem","stripQuotes","chunks","itemsStr","valueChunk","concatQueries","convertGroupR","valueType","valueOrNull","firstExpr","secondExpr","chars","isBracesBefore","isBracesAfter","operatorIndex","groupIsOpen","char","matches","dummyRE","groupStr","dummySplits","dummySplit0","dummySplit2","splits","getCamlQuery","getCamlView","sanitaizedStr","getCamlScope","scope","orderBys","params","orderByStr","scopeStr","OrderBy","Scope","Limit","whereStr","queryStr","limitStr","craftQuery","joiner","normalizedJoiner","columnsArray","valuesArray","concat2Queries","query1","query2","dummy","trimmed1","trimmed2","queries","camlLog","DOMParser","parseFromString","Attachment","getHead","getByFileName","get_attachmentFiles","hasObjectProperties","newObject","Item","items","listFolder","getListSPObject","bind","showCaml","camlQuery","get_viewXml","newElement","listSPObject","set_folderUrl","elementNew","itemsToUpdate","isSerial","elementID","_this7","getHashedColumnName","itemData","_this8","MD5","itemsMap","hashedColumnName","has","Map","duplicatedsSorted","itemMap","duplicateds","sort","a","getTime","getDuplicates","duplicatedsFiltered","_this9","getEmpties","Key","Forced","From","Mediator","sourceColumn","targetColumn","_this10","List","sourceItems","targetItems","itemsToMerge","sourceItem","targetItemGroup","targetItem","itemToMerge","_this11","updateByQuery","_this12","skippedProps","Utilities","Utility","createNewDiscussion","spItemObject","_this13","createNewDiscussionReply","attachment","CamlQuery","spListObject","get_url","getItemById","set_folderServerRelativeUrl","set_viewXml","Page","fullUrl","IsPrevious","position","ListItemCollectionPosition","set_pagingInfo","valueStr","get_lookupValue","encodeURIComponent","getPagingColumnsStr","set_listItemCollectionPosition","getItems","getPageValue","mainParams","onLoad","OnLoad","onLoadForward","OnLoadForward","onLoadBackward","OnLoadBackward","onLoadAll","OnLoadAll","onLoadAllForward","OnLoadAllForward","onLoadAllBackward","OnLoadAllBackward","onPreload","OnPreload","onPreloadForward","OnPreloadForward","onPreloadBackward","OnPreloadBackward","itemIds","first","last","itemColumns","lats","orderColumnTitles","cut","isPrevious","firstItem","lastItem","lastItemColumns","list","newList","EntityTypeName","lists","set_templateType","BaseTemplate","ListTemplateType","TemplateType","set_url","set_templateFeatureId","TemplateFeatureId","set_customSchemaXml","CustomSchemaXml","set_dataSourceProperties","DataSourceProperties","set_documentTemplateType","DocumentTemplateType","set_quickLaunchOption","QuickLaunchOption","set_contentTypesEnabled","ContentTypesEnabled","set_defaultContentApprovalWorkflowId","DefaultContentApprovalWorkflowId","set_defaultDisplayFormUrl","DefaultDisplayFormUrl","set_defaultEditFormUrl","DefaultEditFormUrl","set_defaultNewFormUrl","DefaultNewFormUrl","set_draftVersionVisibility","DraftVersionVisibility","set_enableAttachments","EnableAttachments","set_enableFolderCreation","EnableFolderCreation","set_enableMinorVersions","EnableMinorVersions","set_enableModeration","EnableModeration","set_enableVersioning","EnableVersioning","set_forceCheckout","ForceCheckout","set_imageUrl","ImageUrl","set_irmEnabled","IrmEnabled","set_irmExpire","IrmExpire","set_irmReject","IrmReject","set_isApplicationList","IsApplicationList","set_lastItemModifiedDate","LastItemModifiedDate","set_majorVersionLimit","MajorVersionLimit","set_multipleDataList","MultipleDataList","set_noCrawl","NoCrawl","set_onQuickLaunch","OnQuickLaunch","set_documentTemplateUrl","DocumentTemplateUrl","MajorWithMinorVersionsLimit","ListCreationInformation","set_majorWithMinorVersionsLimit","sourceListUrl","targetTitle","targetWeb","sourceWeb","targetList","sourceList","newListData","sourceColumns","targetColumns","columnsToCreate","FromBaseType","columnsToExclude","contextElement","targetSPX","web","sourceSPX","targetSPXList","sourceSPXList","cloneLayout","sourceListData","sourceColumnsData","sourceItemsData","BaseType","fileItem","itemsToCreate","itemToCreate","newItem","folderForItem","deleteByQuery","fieldRefs","caml","aggregations","aggregationsQuery","renderListData","aggregationsData","Row","aggregationKeys","allPermissionMasks","get_effectiveBasePermissions","elements","pager","get_lists","Library","libraries","foldersTree","FolderWeb","parentFolderUrl","add","getFolderByServerRelativeUrl","FileWeb","asString","fileCreationInfo","FileCreationInformation","set_overwrite","copyTo","moveTo","getFileByServerRelativeUrl","restoreAll","deleteAll","get_recycleBin","customNameColumn","customLoginColumn","customEmailColumn","isSP","isNative","getByUid","getByName","getByEMail","getByLogin","getAll","getCurrent","spUser","get_web","get_currentUser","_spPageContextInfo","userId","userIds","getName","get_item","isByName","userLogins","userName","UserName","Name","userNames","userEMails","ids","userObjects","usersToUpdate","userID","newEl","customWebTitle","customListTitle","defaultListTitle","newGroup","LoginName","GroupUser","groupUsers","groupName","userCreationInfo","UserCreationInformation","set_email","Email","set_loginName","newSPObject","get_users","groupCreationInfo","GroupCreationInformation","set_allowMembersEditMembership","AllowMembersEditMembership","set_allowRequestToJoinLeave","AllowRequestToJoinLeave","set_autoAcceptRequestToJoinLeave","AutoAcceptRequestToJoinLeave","set_onlyAllowMembersViewMembership","OnlyAllowMembersViewMembership","set_owner","Owner","set_requestToJoinLeaveEmailSetting","RequestToJoinLeaveEmailSetting","get_siteGroups","getTermStore","Taxonomy","TaxonomySession","getTaxonomySession","getDefaultKeywordsTermStore","getTermSet","get_keywordsTermSet","keyword","newTag","Keyword","keywords","isExact","getTerms","set_defaultLabelOnly","DefaultLabelOnly","set_resultCollectionSize","ResultCollectionSize","set_stringMatchOption","StringMatchOption","set_termLabel","set_trimDepricated","TrimDepricated","set_trimUnavailable","TrimUnavailable","LabelMatchInformation","elementLabel","createTerm","Guid","newGuid","set_isAvailableForTagging","IsAvailableForTagging","set_name","termStore","getAllTerms","EMAIL_RE","Mail","isFake","Subject","Body","recievers","availableRecievers","missedUsers","recieversEmails","senderEmail","properties","__metadata","DATE","get_regionalSettings","get_timeZone","Web","urls","parentElementUrl","set_language","Language","set_useSamePermissionsAsParentSite","UseSamePermissionsAsParentSite","set_webTemplate","WebTemplate","set_alternateCssUrl","AlternateCssUrl","set_associatedMemberGroup","AssociatedMemberGroup","set_associatedOwnerGroup","AssociatedOwnerGroup","set_associatedVisitorGroup","AssociatedVisitorGroup","set_customMasterUrl","CustomMasterUrl","set_enableMinimalDownload","EnableMinimalDownload","set_masterUrl","MasterUrl","set_quickLaunchEnabled","QuickLaunchEnabled","set_saveSiteAsTemplateEnabled","SaveSiteAsTemplateEnabled","set_serverRelativeUrl","set_siteLogoUrl","SiteLogoUrl","set_syndicationEnabled","SyndicationEnabled","set_treeViewEnabled","TreeViewEnabled","set_uiVersion","UiVersion","set_uiVersionConfigurationEnabled","UiVersionConfigurationEnabled","WebCreationInformation","ob","BasePermissions","permissionId","doesUserHavePermissions","getSiteSPObject","currentSPObjects","templates","getCustomListTemplates","getWebTemplates","recycleBin","mail","get_site","get_webs"],"mappings":"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"}